Thu Aug 18 09:50:04 2022







	Macro Assembler  -  Version 1.00.0
		-----------------------------------------------

		Input  Filename : D:\SourceCode\_Avery_M031\M031BSP_NSP_TwoWireSample\NSP_project\RINGRING_NSP960B\CpuIf\ChannelTable.asm.app
		Output Filename : D:\SourceCode\_Avery_M031\M031BSP_NSP_TwoWireSample\NSP_project\RINGRING_NSP960B\CpuIf\Code_Release\ChannelTable.oc


    1  0000000                   	CHIP	65C02
    2  0000000                   	SYMBOLS
    3  0000000                   	LINEAR		ON
    4  0000000                   
    5  0000000                   ;*.LIC
    6  0000000                   	INCLUDE	"C:\NUVOTON\NSPPLAYLISTEDITOR\V1.13.000\NSP_SDS\SDS_NSP\INCLUDE\SYS_DEF_EQU.INI.APP"
    7  0000000                   	SYMBOLS
    8  0000000                   	LINKLIST
    9  0000000                   	DEBUG  	ASM
   10  0000000                   	LINEAR	ON
   11  0000000                   	LONGA	OFF
   12  0000000                   	LONGI	OFF
   13  0000000                   
   14  0000000                   ;====================================================
   15  0000000                   ;====================================================
   16  0000000                   CHECKSUM_ADDR		EQU 00H
   17  0000000                   CHECKSUM_ADDR1		EQU 01H
   18  0000000                   CHECK_RESULT		EQU	02H
   19  0000000                   CHECKSUM_33TH		EQU 107EH
   20  0000000                   CHECKSUM_34TH		EQU 107FH
   21  0000000                   
   22  0000000                   ;====================================================
   23  0000000                   INT0_PORT	EQU 		01H
   24  0000000                   INT0_TMA	EQU 		02H
   25  0000000                   INT0_RESUME	EQU			04H
   26  0000000                   INT0_INTRF	EQU			08H		
   27  0000000                   INT0_TMG	EQU 		10H
   28  0000000                   INT0_FXF10	EQU 		20H
   29  0000000                   INT0_FXF13	EQU 		40H
   30  0000000                   INT0_FXF15	EQU 		80H
   31  0000000                   
   32  0000000                   INT1_SLD	EQU 		01H
   33  0000000                   INT1_ADC	EQU 		04H
   34  0000000                   INT1_LRCT	EQU 		08H
   35  0000000                   
   36  0000000                   TMA_IR_TX		EQU		80H
   37  0000000                   TMG_TOUCH		EQU		10H
   38  0000000                   
   39  0000000                   SYNF_ABANDON	EQU		01H
   40  0000000                   SYNF_END		EQU		08H
   41  0000000                   SYNF_PCM		EQU		10H
   42  0000000                   SYNF_SILENCE	EQU		20H
   43  0000000                   SYNF_EVENT		EQU		40H
   44  0000000                   SYNF_GAIN		EQU		80H
   45  0000000                   SYNV_VOL_BYPASS	EQU		80H
   46  0000000                   





   47  0000000                   PWMC_BP0_DIV1	EQU		00H
   48  0000000                   PWMC_BP0_DIV2	EQU		01H
   49  0000000                   PWMC_BP0_DIV4	EQU		02H
   50  0000000                   PWMC_BP0_DIV32	EQU		03H
   51  0000000                   PWMC_BP0_DIV64	EQU		04H
   52  0000000                   PWMC_BP0_DIV128	EQU		05H
   53  0000000                   PWMC_BP0_DIV256	EQU		06H
   54  0000000                   PWMC_BP0_DIV512	EQU		07H
   55  0000000                   PWMC_BP1_DIV1	EQU		00H
   56  0000000                   PWMC_BP1_DIV2	EQU		10H
   57  0000000                   PWMC_BP1_DIV4	EQU		20H
   58  0000000                   PWMC_BP1_DIV32	EQU		30H
   59  0000000                   PWMC_BP1_DIV64	EQU		40H
   60  0000000                   PWMC_BP1_DIV128	EQU		50H
   61  0000000                   PWMC_BP1_DIV256	EQU		60H
   62  0000000                   PWMC_BP1_DIV512	EQU		70H
   63  0000000                   
   64  0000000                   ;BP00_PWM	EQU		01H
   65  0000000                   ;BP01_PWM	EQU		02H
   66  0000000                   ;BP02_PWM	EQU		04H
   67  0000000                   ;BP03_PWM	EQU		08H
   68  0000000                   ;BP04_PWM	EQU		10H
   69  0000000                   ;BP05_PWM	EQU		20H
   70  0000000                   ;BP10_PWM	EQU		01H
   71  0000000                   ;BP11_PWM	EQU		02H
   72  0000000                   ;BP12_PWM	EQU		04H
   73  0000000                   
   74  0000000                   RSTF_WDT	EQU		02H
   75  0000000                   
   76  0000000                   WAKEF_PORT	EQU		01H
   77  0000000                   WAKEF_LRC	EQU		02H
   78  0000000                   WAKEF_IRWU	EQU		04H
   79  0000000                   WAKEF_RESETB	EQU		08H
   80  0000000                   WAKEF_LVR	EQU		10H
   81  0000000                   WAKEF_POR	EQU		20H
   82  0000000                   WAKEF_RST_SRC	EQU		80H
   83  0000000                   
   84  0000000                   STOP_FLAG	EQU		5AH
   85  0000000                   WDTC_CLR	EQU		01H
   86  0000000                   
   87  0000000                   LVDC_EN		EQU		01H
   88  0000000                   LDVC_21V	EQU		01H
   89  0000000                   LDVC_24V	EQU		03H
   90  0000000                   LDVC_27V	EQU		05H
   91  0000000                   LDVC_30V	EQU		07H
   92  0000000                   LDVC_33V	EQU		09H
   93  0000000                   LDVC_EXT	EQU		0BH
   94  0000000                   LDVC_DETECT	EQU		80H
   95  0000000                   
   96  0000000                   CAPS_SINK	EQU		08H
   97  0000000                   CAPS_2UA	EQU		00H
   98  0000000                   CAPS_4UA	EQU		10H	
   99  0000000                   CAPS_6UA	EQU		20H
  100  0000000                   CAPS_8UA	EQU		30H
  101  0000000                   CAPS_EN		EQU		40H
  102  0000000                   
  103  0000000                   LRCC_EN		EQU		01H





  104  0000000                   LRCC_IR_WAKEUP	EQU		02H
  105  0000000                   LRCC_IR_DHI	EQU		40H
  106  0000000                   LRCC_IR_RX	EQU		80H
  107  0000000                   
  108  0000000                   IRWD_DIV8	EQU		00H
  109  0000000                   IRWD_DIV32	EQU		01H
  110  0000000                   IRWD_DIV128	EQU		02H
  111  0000000                   IRWD_DIV512	EQU		03H
  112  0000000                   
  113  0000000                   SPIC_EN		EQU		01H
  114  0000000                   SPIC_DIV1	EQU		00H
  115  0000000                   SPIC_DIV2	EQU		20H
  116  0000000                   SPIC_DIV4	EQU		40H
  117  0000000                   SPIC_DIV8	EQU		60H
  118  0000000                   SPIC_DONE	EQU		80H
  119  0000000                   
  120  0000000                   ADRC_EN		EQU		01H
  121  0000000                   ADRC_START	EQU		02H
  122  0000000                   ADRC_BP14	EQU		00H
  123  0000000                   ADRC_BP15	EQU		04H
  124  0000000                   ADRC_BP16	EQU		08H
  125  0000000                   ADRC_BP17	EQU		0CH
  126  0000000                   ADRC_BP14_AN	EQU		10H
  127  0000000                   ADRC_BP15_AN	EQU		24H
  128  0000000                   ADRC_BP16_AN	EQU		48H
  129  0000000                   ADRC_BP17_AN	EQU		8CH
  130  0000000                   
  131  0000000                   LDOEN_EN	EQU		01H
  132  0000000                   
  133  0000000                   ISP_EN				EQU	01H
  134  0000000                   ISP_EN_PP			EQU 02H
  135  0000000                   ISP_EN_USRCFG		EQU 04H
  136  0000000                   ISP_ERR_FLAG		EQU 08H
  137  0000000                   ISP_DONE			EQU 01H
  138  0000000                   ISP_CMD_STAND		EQU	30H
  139  0000000                   ISP_CMD_READ		EQU	00H
  140  0000000                   ISP_CMD_PROGRAM		EQU 21H
  141  0000000                   ISP_CMD_ERASE_PAGE	EQU	22H
  142  0000000                   ISP_CMD_CID			EQU 0BH
  143  0000000                   ISP_CMD_DID			EQU 0CH
  144  0000000                   
  145  0000000                   ; 
  146  0000000                   ;
  147  0000000                   ; |----------------------|
  148  0000000                   ; |         Stack        |
  149  0000000                   ; |----------------------| SHM_RAM_BEGIN
  150  0000000                   ; | HW Engine Shared RAM |  
  151  0000000                   ; |----------------------| RAM_END (SHM_RAM_END)
  152  0000000                   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  153  0000000                   
  154  0000000                   .IF	 (PARTNO='N589B080').OR.(PARTNO='N589C080').OR.(PARTNO='N589D080').OR.(PARTNO='N589D081')
  155  0000000                   SYS_PQ				EQU (1FH << 1)
  156  0000000                   .ENDIF
  157  0000000                   .IF	 (PARTNO='N589B120').OR.(PARTNO='N589C120').OR.(PARTNO='N589D120').OR.(PARTNO='N589D121')
  158  0000000                   SYS_PQ				EQU (27H << 1)
  159  0000000                   .ENDIF
  160  0000000                   .IF	 (PARTNO='N589A080').OR.(PARTNO='N589B170').OR.(PARTNO='N589C170').OR.(PARTNO='N589D170').OR.(PARTNO='N589D171')





  161  0000000                   SYS_PQ				EQU (2FH << 1)
  162  0000000                   .ENDIF
  163  0000000                   .IF	 (PARTNO='N589A150').OR.(PARTNO='N589B200').OR.(PARTNO='N589C200').OR.(PARTNO='N589D200').OR.(PARTNO='N589D201')
  164  0000000                   SYS_PQ				EQU (3FH << 1)
  165  0000000                   .ENDIF
  166  0000000                   .IF	 (PARTNO='N589A200').OR.(PARTNO='N589B250').OR.(PARTNO='N589C250').OR.(PARTNO='N589D250').OR.(PARTNO='N589D251')
  167  0000000                   SYS_PQ				EQU (4FH << 1)
  168  0000000                   .ENDIF
  169  0000000                   .IF	 (PARTNO='N589A280').OR.(PARTNO='N589B340').OR.(PARTNO='N589C340').OR.(PARTNO='N589D340').OR.(PARTNO='N589D341')
  170  0000000                   SYS_PQ				EQU (5FH << 1)
  171  0000000                   .ENDIF
  172  0000000                   .IF	 (PARTNO='N589D481')
  173  0000000                   SYS_PQ				EQU (7FH << 1)
  174  0000000                   .ENDIF
  175  0000000                   
  176  0000000                   .IF	 (PARTNO='N589A400').OR.(PARTNO='N589B480').OR.(PARTNO='N589B480N').OR.(PARTNO='N589C480')
  177  0000000                   SYS_PQ				EQU 07FH
  178  0000000                   .ENDIF
  179  0000000                   .IF	 (PARTNO='N589A600').OR.(PARTNO='N589B650').OR.(PARTNO='N589C650').OR.(PARTNO='N589D650').OR.(PARTNO='N589D650N')
  180  0000000                   SYS_PQ				EQU 0BFH
  181  0000000                   .ENDIF
  182  0000000                   .IF	 (PARTNO='N589A900').OR.(PARTNO='N589B960').OR.(PARTNO='N589C960').OR.(PARTNO='N589D960').OR.(PARTNO='N589D960N')
  183  0000000                   SYS_PQ				EQU 0FFH
  184  0000000                   .ENDIF
  185  0000000                   
  186  0000000                   RAM_BEGIN		EQU 00H
  187  0000000                   
  188  0000000                   .IF (CHIPSERIES = 'N589A').OR.(CHIPSERIES = 'N589B').OR.(CHIPSERIES = 'N589C')
  189  0000000                   RAM_END			EQU 1FFH
  190  0000000                   .ENDIF
  191  0000000                   
  192  0000000                   .IF (CHIPSERIES = 'N589D')
  193  0000000                   	.IF	(MAINBODY='A340').OR.(MAINBODY='D171').OR.(MAINBODY='D481')
  194  0000000                   RAM_END			EQU 17FH
  195  0000000                   	.ENDIF
  196  0000000                   	.IF	(MAINBODY='A960')
  197  0000000                   RAM_END			EQU 1FFH
  198  0000000                   	.ENDIF
  199  0000000                   .ENDIF
  200  0000000                   
  201  0000000                   DPD_RAM_BEGIN	EQU 0F00H		
  202  0000000                   DPD_RAM_END		EQU 0F1FH
  203  0000000                   
  204  0000000                   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  205  0000000                   
  206  0000000                   ;====================================================
  207  0000000                   ; A340 & D171 & D481 series
  208  0000000                   ;====================================================
  209  0000000                   .IF	(MAINBODY='A340').OR.(MAINBODY='D171').OR.(MAINBODY='D481')
  210  0000000                   SFR_BASE	EQU 	0F80H
  211  0000000                   
  212  0000000                   INTRF		EQU		0FB8H
  213  0000000                   HWENG		EQU		0FBAH
  214  0000000                   CFGULK		EQU		0FBBH
  215  0000000                   SYSCFG0		EQU		0FBCH
  216  0000000                   SYSCFG1		EQU		0FBDH
  217  0000000                   SYSCFG2		EQU		0FBEH





  218  0000000                   SYSCFG3		EQU		0FBFH
  219  0000000                   SYSCFG4		EQU		0FBCH
  220  0000000                   SYSCFG5		EQU		0FC4H
  221  0000000                   SYSCFG6		EQU		0FB4H
  222  0000000                   SYSCFG7		EQU		0FCCH
  223  0000000                   
  224  0000000                   BP0			EQU		0F80H
  225  0000000                   BP0R		EQU		0F80H
  226  0000000                   BP0D		EQU		0F84H
  227  0000000                   BP0M		EQU		0F88H
  228  0000000                   BP0EN		EQU		0F98H
  229  0000000                   
  230  0000000                   BP1			EQU		0F81H
  231  0000000                   BP1R		EQU		0F81H
  232  0000000                   BP1D		EQU		0F85H
  233  0000000                   BP1M		EQU		0F89H
  234  0000000                   BP1EN		EQU		0F99H
  235  0000000                   
  236  0000000                   ;.IF (PARTNO='N589A080').OR.(PARTNO='N589A150').OR.(PARTNO='N589A200').OR.(PARTNO='N589A280').OR.(PARTNO='N589A900').OR.(PARTNO='N589B080').OR.(PARTNO='N589B120').OR.(PARTNO='N589B170').OR.(PARTNO='N589B200').OR.(PARTNO='N589B250').OR.(PARTNO='N589B340').OR.(PARTNO='N589C080').OR.(PARTNO='N589C120').OR.(PARTNO='N589C170').OR.(PARTNO='N589C200').OR.(PARTNO='N589C250').OR.(PARTNO='N589C340').OR.(PARTNO='N589D080').OR.(PARTNO='N589D120').OR.(PARTNO='N589D170').OR.(PARTNO='N589D200').OR.(PARTNO='N589D250').OR.(PARTNO='N589D340').OR.(PARTNO='N589D081').OR.(PARTNO='N589D121').OR.(PARTNO='N589D171').OR.(PARTNO='N589D201').OR.(PARTNO='N589D251').OR.(PARTNO='N589D341').OR.(PARTNO='N589D481')
  237  0000000                   ;.IF (SUBTYPE='UNDEFINE').OR.(SUBTYPE='LQFP48').OR.(SUBTYPE='SOP28').OR.(SUBTYPE='SOP20')
  238  0000000                   BP2			EQU		0F82H
  239  0000000                   BP2R		EQU		0F82H
  240  0000000                   BP2D		EQU		0F86H
  241  0000000                   BP2M		EQU		0F8AH
  242  0000000                   BP2EN		EQU		0F9AH
  243  0000000                   BP2MF0		EQU		0F9EH
  244  0000000                   BP2MF1		EQU		0F9FH
  245  0000000                   ;.ENDIF
  246  0000000                   ;.ENDIF
  247  0000000                   
  248  0000000                   ;.IF (PARTNO='N589A080').OR.(PARTNO='N589A150').OR.(PARTNO='N589A200').OR.(PARTNO='N589A280').OR.(PARTNO='N589B200').OR.(PARTNO='N589B250').OR.(PARTNO='N589B340').OR.(PARTNO='N589D201').OR.(PARTNO='N589D251').OR.(PARTNO='N589D341').OR.(PARTNO='N589D481')
  249  0000000                   ;.IF (SUBTYPE='UNDEFINE').OR.(SUBTYPE='LQFP48')
  250  0000000                   BP3			EQU		0F83H
  251  0000000                   BP3R		EQU		0F83H
  252  0000000                   BP3D		EQU		0F87H
  253  0000000                   BP3M		EQU		0F8BH
  254  0000000                   BP3EN		EQU		0F9BH
  255  0000000                   ;.ENDIF
  256  0000000                   ;.ENDIF
  257  0000000                   
  258  0000000                   TMAC		EQU		0FA0H
  259  0000000                   TMAV		EQU		0FA1H
  260  0000000                   TMAO		EQU		0FA2H
  261  0000000                   
  262  0000000                   TMGC		EQU		0FA9H
  263  0000000                   TMGVL		EQU		0FAAH
  264  0000000                   TMGVH		EQU		0FABH
  265  0000000                   TMGOL		EQU		0FACH
  266  0000000                   TMGOH		EQU		0FADH
  267  0000000                   
  268  0000000                   IEF0		EQU		0F90H
  269  0000000                   EVF0		EQU		0F92H
  270  0000000                   IEF1		EQU		0F91H
  271  0000000                   EVF1		EQU		0F93H
  272  0000000                   
  273  0000000                   PCMH		EQU		0FB5H
  274  0000000                   VOL			EQU		0FB6H





  275  0000000                   CHGC		EQU		0FB7H
  276  0000000                   
  277  0000000                   BANK		EQU		0F8CH
  278  0000000                   WAKEF		EQU		0F8DH
  279  0000000                   RSTF	   	EQU     0F8FH
  280  0000000                   WDTC		EQU		0F96H
  281  0000000                   
  282  0000000                   PWMC		EQU		0FC0H
  283  0000000                   PWM0EN		EQU		0FC2H
  284  0000000                   PWV00		EQU		0FC5H
  285  0000000                   PWV01		EQU		0FC6H
  286  0000000                   PWV02		EQU		0FC7H
  287  0000000                   PWV03		EQU		0FC8H
  288  0000000                   PWV04		EQU		0FC9H
  289  0000000                   PWV05		EQU		0FCAH
  290  0000000                   PWM1EN		EQU		0FC3H
  291  0000000                   PWV10		EQU		0FCDH
  292  0000000                   PWV11		EQU		0FCEH
  293  0000000                   PWV12		EQU		0FCFH
  294  0000000                   
  295  0000000                   PWM_G0_MASK	EQU		0FCH
  296  0000000                   PWM_G1_MASK	EQU		0F3H
  297  0000000                   PWM_G2_MASK	EQU		0CFH
  298  0000000                   PWM_G3_MASK	EQU		03FH
  299  0000000                   PWM_G4_MASK	EQU		0FCH
  300  0000000                   PWM_G5_MASK	EQU		0F3H
  301  0000000                   
  302  0000000                   BP00_PWM	EQU		01H
  303  0000000                   BP01_PWM	EQU		02H
  304  0000000                   BP02_PWM	EQU		04H
  305  0000000                   BP03_PWM	EQU		08H
  306  0000000                   BP04_PWM	EQU		10H
  307  0000000                   BP05_PWM	EQU		20H
  308  0000000                   BP06_PWM	EQU		40H
  309  0000000                   BP07_PWM	EQU		80H
  310  0000000                   BP10_PWM	EQU		01H
  311  0000000                   BP11_PWM	EQU		02H
  312  0000000                   BP12_PWM	EQU		04H
  313  0000000                   BP13_PWM	EQU		08H
  314  0000000                   BP32_PWM	EQU		04H
  315  0000000                   BP33_PWM	EQU		08H
  316  0000000                   BP34_PWM	EQU		10H
  317  0000000                   BP35_PWM	EQU		20H
  318  0000000                   BP36_PWM	EQU		40H
  319  0000000                   BP37_PWM	EQU		80H
  320  0000000                   
  321  0000000                   LDOEN		EQU		0FAFH
  322  0000000                   
  323  0000000                   .IF (PARTNO='N589A080').OR.(PARTNO='N589A150').OR.(PARTNO='N589A200').OR.(PARTNO='N589A280').OR.(PARTNO='N589B080').OR.(PARTNO='N589B120').OR.(PARTNO='N589B170').OR.(PARTNO='N589B200').OR.(PARTNO='N589B250').OR.(PARTNO='N589B340').OR.(PARTNO='N589C200').OR.(PARTNO='N589C250').OR.(PARTNO='N589C340').OR.(PARTNO='N589D200').OR.(PARTNO='N589D250').OR.(PARTNO='N589D340').OR.(PARTNO='N589D081').OR.(PARTNO='N589D121').OR.(PARTNO='N589D171').OR.(PARTNO='N589D201').OR.(PARTNO='N589D251').OR.(PARTNO='N589D341').OR.(PARTNO='N589D481')
  324  0000000                   .IF (SUBTYPE='UNDEFINE').OR.(SUBTYPE='LQFP48').OR.(SUBTYPE='SOP28').OR.(SUBTYPE='SOP20').OR.(SUBTYPE='TSSOP20')
  325  0000000                   SPIC		EQU		0FD8H
  326  0000000                   SPIB		EQU		0FD9H
  327  0000000                   SPIBN		EQU		0FDAH
  328  0000000                   .ENDIF
  329  0000000                   .ENDIF
  330  0000000                   
  331  0000000                   .IF (PARTNO='N589D081').OR.(PARTNO='N589D121').OR.(PARTNO='N589D171').OR.(PARTNO='N589D201').OR.(PARTNO='N589D251').OR.(PARTNO='N589D341').OR.(PARTNO='N589D481')





  332  0000000                   .IF (SUBTYPE='UNDEFINE').OR.(SUBTYPE='SOP20').OR.(SUBTYPE='TSSOP20').OR.(SUBTYPE='LQFP48')
  333  0000000                   IRMF0		EQU		0F9DH
  334  0000000                   .ENDIF
  335  0000000                   .ENDIF
  336  0000000                   IRWS		EQU		0FDCH
  337  0000000                   IRWD		EQU		0FDDH
  338  0000000                   IRWSB		EQU		0FDEH
  339  0000000                   
  340  0000000                   CAPS		EQU		0FAEH
  341  0000000                   LVDC		EQU		0F97H
  342  0000000                   
  343  0000000                   .IF (PARTNO='N589A080').OR.(PARTNO='N589A150').OR.(PARTNO='N589A200').OR.(PARTNO='N589A280').OR.(PARTNO='N589B080').OR.(PARTNO='N589B120').OR.(PARTNO='N589B170').OR.(PARTNO='N589B200').OR.(PARTNO='N589B250').OR.(PARTNO='N589B340')
  344  0000000                   .IF (SUBTYPE='UNDEFINE').OR.(SUBTYPE='LQFP48').OR.(SUBTYPE='SOP28')
  345  0000000                   ADRC		EQU		0FB0H
  346  0000000                   ADR			EQU		0FB2H
  347  0000000                   .ENDIF
  348  0000000                   .ENDIF
  349  0000000                   
  350  0000000                   LRCC		EQU		0FDBH
  351  0000000                   
  352  0000000                   IMAGEP00	EQU		0FE0H
  353  0000000                   IMAGEP01	EQU		0FE1H
  354  0000000                   IMAGEP02	EQU		0FE2H
  355  0000000                   IMAGEP03	EQU		0FE3H
  356  0000000                   IMAGEP10	EQU		0FE4H
  357  0000000                   IMAGEP11	EQU		0FE5H
  358  0000000                   IMAGEP12	EQU		0FE6H
  359  0000000                   IMAGEP13	EQU		0FE7H
  360  0000000                   
  361  0000000                   IMAGEP20	EQU		0FD4H		
  362  0000000                   IMAGEP21	EQU		0FD5H
  363  0000000                   IMAGEP22	EQU		0FD6H
  364  0000000                   IMAGEP23	EQU		0FD7H
  365  0000000                   
  366  0000000                   ISPCON		EQU		0FE8H
  367  0000000                   ISPADR0		EQU		0FE9H
  368  0000000                   ISPADR1		EQU		0FEAH
  369  0000000                   ISPADR2		EQU		0FEBH
  370  0000000                   ISPDAT0		EQU		0FECH
  371  0000000                   ISPDAT1		EQU		0FEDH
  372  0000000                   ISPDAT2		EQU		0FEEH
  373  0000000                   ISPDAT3		EQU		0FEFH
  374  0000000                   ISPCMD		EQU		0FF0H
  375  0000000                   ISPTRG		EQU		0FF1H
  376  0000000                   ISPULK		EQU		0FF2H
  377  0000000                   ISPEPT		EQU		0FF3H
  378  0000000                   ISPULK1		EQU		0FF4H
  379  0000000                   
  380  0000000                   .ENDIF
  381  0000000                   ;====================================================
  382  0000000                   ; A960 series
  383  0000000                   ;====================================================
  384  0000000                   .IF	(MAINBODY='A960')
  385  0000000                   SFR_BASE	EQU 	0F80H
  386  0000000                   
  387  0000000                   INTRF		EQU		0FB8H
  388  0000000                   HWENG		EQU		0FBAH





  389  0000000                   CFGULK		EQU		0FBBH
  390  0000000                   SYSCFG0		EQU		0FBCH
  391  0000000                   SYSCFG1		EQU		0FBDH
  392  0000000                   SYSCFG2		EQU		0FBEH
  393  0000000                   SYSCFG3		EQU		0FBFH
  394  0000000                   SYSCFG4		EQU		0FBCH
  395  0000000                   SYSCFG5		EQU		0FC4H
  396  0000000                   SYSCFG6		EQU		0FB4H
  397  0000000                   SYSCFG7		EQU		0FCCH
  398  0000000                   SYSCFG8		EQU		0FCBH
  399  0000000                   
  400  0000000                   BP0			EQU		0F80H
  401  0000000                   BP0R		EQU		0F80H
  402  0000000                   BP0D		EQU		0F84H
  403  0000000                   BP0M		EQU		0F88H
  404  0000000                   BP0EN		EQU		0F98H
  405  0000000                   
  406  0000000                   BP1			EQU		0F81H
  407  0000000                   BP1R		EQU		0F81H
  408  0000000                   BP1D		EQU		0F85H
  409  0000000                   BP1M		EQU		0F89H
  410  0000000                   BP1EN		EQU		0F99H
  411  0000000                   
  412  0000000                   ;.IF (PARTNO='N589A400').OR.(PARTNO='N589A600').OR.(PARTNO='N589A900').OR.(PARTNO='N589B480').OR.(PARTNO='N589B480N').OR.(PARTNO='N589B650').OR.(PARTNO='N589B960').OR.(PARTNO='N589C480').OR.(PARTNO='N589C650').OR.(PARTNO='N589C960').OR.(PARTNO='N589D650').OR.(PARTNO='N589D650N').OR.(PARTNO='N589D960').OR.(PARTNO='N589D960N')
  413  0000000                   ;.IF (SUBTYPE='UNDEFINE').OR.(SUBTYPE='LQFP48').OR.(SUBTYPE='SOP14').OR.(SUBTYPE='TSSOP20')
  414  0000000                   BP2			EQU		0F82H
  415  0000000                   BP2R		EQU		0F82H
  416  0000000                   BP2D		EQU		0F86H
  417  0000000                   BP2M		EQU		0F8AH
  418  0000000                   BP2EN		EQU		0F9AH
  419  0000000                   BP2MF0		EQU		0F9EH
  420  0000000                   BP2MF1		EQU		0F9FH
  421  0000000                   ;.ENDIF
  422  0000000                   ;.ENDIF
  423  0000000                   
  424  0000000                   ;.IF (PARTNO='N589A400').OR.(PARTNO='N589A600').OR.(PARTNO='N589A900').OR.(PARTNO='N589B480').OR.(PARTNO='N589B650').OR.(PARTNO='N589B960').OR.(PARTNO='N589C480').OR.(PARTNO='N589C650').OR.(PARTNO='N589C960').OR.(PARTNO='N589D650').OR.(PARTNO='N589D960')
  425  0000000                   ;.IF (SUBTYPE='UNDEFINE').OR.(SUBTYPE='LQFP48')
  426  0000000                   BP3			EQU		0F83H
  427  0000000                   BP3R		EQU		0F83H
  428  0000000                   BP3D		EQU		0F87H
  429  0000000                   BP3M		EQU		0F8BH
  430  0000000                   BP3EN		EQU		0F9BH
  431  0000000                   ;.ENDIF
  432  0000000                   ;.ENDIF
  433  0000000                   
  434  0000000                   TMAC		EQU		0FA0H
  435  0000000                   TMAV		EQU		0FA1H
  436  0000000                   TMAO		EQU		0FA2H
  437  0000000                   
  438  0000000                   TMGC		EQU		0FA9H
  439  0000000                   TMGVL		EQU		0FAAH
  440  0000000                   TMGVH		EQU		0FABH
  441  0000000                   TMGOL		EQU		0FACH
  442  0000000                   TMGOH		EQU		0FADH
  443  0000000                   
  444  0000000                   IEF0		EQU		0F90H
  445  0000000                   EVF0		EQU		0F92H





  446  0000000                   IEF1		EQU		0F91H
  447  0000000                   EVF1		EQU		0F93H
  448  0000000                   
  449  0000000                   PCMH		EQU		0FB5H
  450  0000000                   VOL			EQU		0FB6H
  451  0000000                   CHGC		EQU		0FB7H
  452  0000000                   
  453  0000000                   BANK		EQU		0F8CH
  454  0000000                   WAKEF		EQU		0F8DH
  455  0000000                   RSTF	   	EQU     0F8FH
  456  0000000                   WDTC		EQU		0F96H
  457  0000000                   
  458  0000000                   
  459  0000000                   PWMC		EQU		0FC0H
  460  0000000                   PWMEN		EQU		0FC1H
  461  0000000                   PWMOA		EQU		0FC2H
  462  0000000                   PWMOB		EQU		0FC3H
  463  0000000                   PWV0		EQU		0FC5H
  464  0000000                   PWV1		EQU		0FC6H
  465  0000000                   PWV2		EQU		0FC7H
  466  0000000                   PWV3		EQU		0FC8H
  467  0000000                   PWV4		EQU		0FC9H
  468  0000000                   PWV5		EQU		0FCAH
  469  0000000                   
  470  0000000                   PWM_G0_MASK	EQU		0FCH
  471  0000000                   PWM_G1_MASK	EQU		0F3H
  472  0000000                   PWM_G2_MASK	EQU		0CFH
  473  0000000                   PWM_G3_MASK	EQU		03FH
  474  0000000                   PWM_G4_MASK	EQU		0FCH
  475  0000000                   PWM_G5_MASK	EQU		0F3H
  476  0000000                   
  477  0000000                   BP00_PWM	EQU		01H
  478  0000000                   BP01_PWM	EQU		02H
  479  0000000                   BP02_PWM	EQU		04H
  480  0000000                   BP03_PWM	EQU		08H
  481  0000000                   BP04_PWM	EQU		10H
  482  0000000                   BP05_PWM	EQU		20H
  483  0000000                   BP06_PWM	EQU		40H
  484  0000000                   BP07_PWM	EQU		80H
  485  0000000                   BP10_PWM	EQU		01H
  486  0000000                   BP11_PWM	EQU		02H
  487  0000000                   BP12_PWM	EQU		04H
  488  0000000                   BP13_PWM	EQU		08H
  489  0000000                   BP32_PWM	EQU		04H
  490  0000000                   BP33_PWM	EQU		08H
  491  0000000                   BP34_PWM	EQU		10H
  492  0000000                   BP35_PWM	EQU		20H
  493  0000000                   BP36_PWM	EQU		40H
  494  0000000                   BP37_PWM	EQU		80H
  495  0000000                   
  496  0000000                   PWM_G0_BP00	EQU		00H
  497  0000000                   PWM_G0_BP06	EQU		01H
  498  0000000                   PWM_G0_BP32	EQU		02H
  499  0000000                   PWM_G1_BP01	EQU		00H
  500  0000000                   PWM_G1_BP07	EQU		04H
  501  0000000                   PWM_G1_BP33	EQU		08H
  502  0000000                   PWM_G2_BP02	EQU		00H





  503  0000000                   PWM_G2_BP10	EQU		10H
  504  0000000                   PWM_G2_BP34	EQU		20H
  505  0000000                   PWM_G3_BP03	EQU		00H
  506  0000000                   PWM_G3_BP11	EQU		40H
  507  0000000                   PWM_G3_BP35	EQU		80H
  508  0000000                   PWM_G4_BP04	EQU		00H
  509  0000000                   PWM_G4_BP12	EQU		01H
  510  0000000                   PWM_G4_BP36	EQU		02H
  511  0000000                   PWM_G5_BP05	EQU		00H
  512  0000000                   PWM_G5_BP13	EQU		04H
  513  0000000                   PWM_G5_BP37	EQU		08H
  514  0000000                   
  515  0000000                   ;LDOEN		EQU		0FAFH
  516  0000000                   
  517  0000000                   .IF (PARTNO='N589A400').OR.(PARTNO='N589A600').OR.(PARTNO='N589A900').OR.(PARTNO='N589B480').OR.(PARTNO='N589B650').OR.(PARTNO='N589B960').OR.(PARTNO='N589C480').OR.(PARTNO='N589C650').OR.(PARTNO='N589C960').OR.(PARTNO='N589D650').OR.(PARTNO='N589D960')
  518  0000000                   .IF (SUBTYPE='UNDEFINE').OR.(SUBTYPE='LQFP48').OR.(SUBTYPE='TSSOP20')
  519  0000000                   SPIC		EQU		0FD8H
  520  0000000                   SPIB		EQU		0FD9H
  521  0000000                   SPIBN		EQU		0FDAH
  522  0000000                   .ENDIF
  523  0000000                   .ENDIF
  524  0000000                   
  525  0000000                   IRWS		EQU		0FDCH
  526  0000000                   IRWD		EQU		0FDDH
  527  0000000                   IRWSB		EQU		0FDEH
  528  0000000                   
  529  0000000                   CAPS		EQU		0FAEH
  530  0000000                   LVDC		EQU		0F97H
  531  0000000                   
  532  0000000                   .IF (PARTNO='N589A400').OR.(PARTNO='N589A600').OR.(PARTNO='N589A900').OR.(PARTNO='N589B480').OR.(PARTNO='N589B480N').OR.(PARTNO='N589B650').OR.(PARTNO='N589B960').OR.(PARTNO='N589C480').OR.(PARTNO='N589C650').OR.(PARTNO='N589C960').OR.(PARTNO='N589D650').OR.(PARTNO='N589D650N').OR.(PARTNO='N589D960').OR.(PARTNO='N589D960N')
  533  0000000                   .IF (SUBTYPE='UNDEFINE').OR.(SUBTYPE='LQFP48').OR.(SUBTYPE='SOP14').OR.(SUBTYPE='TSSOP20')
  534  0000000                   ADRC		EQU		0FB0H
  535  0000000                   ADR			EQU		0FB2H
  536  0000000                   .ENDIF
  537  0000000                   .ENDIF
  538  0000000                   
  539  0000000                   LRCC		EQU		0FDBH
  540  0000000                   
  541  0000000                   SLDC0		EQU		0F70H
  542  0000000                   SLDC1		EQU		0F71H
  543  0000000                   HIDA1		EQU		0F72H
  544  0000000                   LODA1		EQU		0F73H
  545  0000000                   HIDA0		EQU		0F74H
  546  0000000                   LODA0		EQU		0F75H
  547  0000000                   SDTH		EQU		0F76H
  548  0000000                   SLDAT		EQU		0F77H
  549  0000000                   
  550  0000000                   UMODE		EQU		0F78H
  551  0000000                   TXSTS		EQU		0F79H
  552  0000000                   RXSTS		EQU		0F7AH
  553  0000000                   BRDIVH		EQU		0F7BH
  554  0000000                   BRDIVL		EQU		0F7CH
  555  0000000                   URTHD		EQU		0F7DH
  556  0000000                   URDATA		EQU		0F7EH
  557  0000000                   TDLY		EQU		0F7FH
  558  0000000                   
  559  0000000                   IMAGEP00	EQU		0FE0H





  560  0000000                   IMAGEP01	EQU		0FE1H
  561  0000000                   IMAGEP02	EQU		0FE2H
  562  0000000                   IMAGEP03	EQU		0FE3H
  563  0000000                   IMAGEP10	EQU		0FE4H
  564  0000000                   IMAGEP11	EQU		0FE5H
  565  0000000                   IMAGEP12	EQU		0FE6H
  566  0000000                   IMAGEP13	EQU		0FE7H
  567  0000000                   
  568  0000000                   IMAGEP20	EQU		0FD4H		
  569  0000000                   IMAGEP21	EQU		0FD5H
  570  0000000                   IMAGEP22	EQU		0FD6H
  571  0000000                   IMAGEP23	EQU		0FD7H
  572  0000000                   
  573  0000000                   ISPCON		EQU		0FE8H
  574  0000000                   ISPADR0		EQU		0FE9H
  575  0000000                   ISPADR1		EQU		0FEAH
  576  0000000                   ISPADR2		EQU		0FEBH
  577  0000000                   ISPDAT0		EQU		0FECH
  578  0000000                   ISPDAT1		EQU		0FEDH
  579  0000000                   ISPDAT2		EQU		0FEEH
  580  0000000                   ISPDAT3		EQU		0FEFH
  581  0000000                   ISPCMD		EQU		0FF0H
  582  0000000                   ISPTRG		EQU		0FF1H
  583  0000000                   ISPULK		EQU		0FF2H
  584  0000000                   ISPEPT		EQU		0FF3H
  585  0000000                   ISPULK1		EQU		0FF4H
  586  0000000                   
  587  0000000                   .ENDIF
  588  0000000                   
  589  0000000                   
  590  0000000                   
  591  0000000                   	INCLUDE	"D:\SOURCECODE\_AVERY_M031\M031BSP_NSP_TWOWIRESAMPLE\NSP_PROJECT\RINGRING_NSP960B\CPUIF\CONFIGURATION_PUBLIC.INI.APP"
  592  0000000                   	PUBLIC LOCAL_TEST
  593  0000000                   	PUBLIC SHM_RAM_BEGIN
  594  0000000                   	PUBLIC SHM_RAM_END
  595  0000000                   	PUBLIC STACK_END
  596  0000000                   	PUBLIC HWE_STACK_BEGIN
  597  0000000                   	PUBLIC WITH_SPI_SWITCH
  598  0000000                   	PUBLIC HIRC_CLK_6502
  599  0000000                   	PUBLIC HIRC_CLK_HWE
  600  0000000                   	PUBLIC WITH_CHIP_SERIES
  601  0000000                   	PUBLIC WITH_VOL_ADJ
  602  0000000                   	PUBLIC WITH_MULTI_CHANNEL
  603  0000000                   	PUBLIC WITH_VOL_REDUCE
  604  0000000                   	PUBLIC WITH_16BIT_MODE
  605  0000000                   	PUBLIC WITH_32K_BANK
  606  0000000                   	PUBLIC WITH_T_BUFFER
  607  0000000                   	PUBLIC WITH_READ_DATA_TYPE
  608  0000000                   	PUBLIC WITH_PCM_OUTPUT_TYPE
  609  0000000                   	PUBLIC WITH_PCM_OUTPUT_SIZE
  610  0000000                   	PUBLIC WITH_CMD
  611  0000000                   	PUBLIC WITH_FW_MIXER
  612  0000000                   	PUBLIC WITH_COMPRESSED_MIDI
  613  0000000                   	PUBLIC WITH_MULTIPLIER
  614  0000000                   	PUBLIC WITH_HEAD_TAIL_PROCESS
  615  0000000                   	PUBLIC ENV_SHARP_DECAY_AMOUNT
  616  0000000                   	PUBLIC WITH_ALL_MIXER_SFR





  617  0000000                   	PUBLIC SP_START_SIM_BUF_VS0A
  618  0000000                   	PUBLIC SP_START_SIM_BUF_VS1A
  619  0000000                   	PUBLIC SP_START_SIM_BUF_VS2A
  620  0000000                   	PUBLIC SP_START_SIM_BUF_VS0B
  621  0000000                   	PUBLIC SP_START_SIM_BUF_VS1B
  622  0000000                   	PUBLIC WITH_ISR_VS0A
  623  0000000                   	PUBLIC WITH_ISR_VS0B
  624  0000000                   	PUBLIC WITH_ISR_VS1A
  625  0000000                   	PUBLIC WITH_ISR_VS1B
  626  0000000                   	PUBLIC WITH_ISR_VS2A
  627  0000000                   	PUBLIC WITH_ISR_VS2B
  628  0000000                   	PUBLIC WITH_VS0A
  629  0000000                   	PUBLIC WITH_VS0B
  630  0000000                   	PUBLIC WITH_VS1A
  631  0000000                   	PUBLIC WITH_VS1B
  632  0000000                   	PUBLIC WITH_VS2A
  633  0000000                   	PUBLIC WITH_VS2B
  634  0000000                   	PUBLIC WITH_VS0C
  635  0000000                   	PUBLIC WITH_VS0D
  636  0000000                   	PUBLIC WITH_VS3
  637  0000000                   	PUBLIC WITH_VS4
  638  0000000                   	PUBLIC WITH_VS5
  639  0000000                   	PUBLIC WITH_VS6
  640  0000000                   	PUBLIC WITH_VS7
  641  0000000                   	PUBLIC WITH_VS8
  642  0000000                   	PUBLIC WITH_VS9
  643  0000000                   	PUBLIC WITH_VSA
  644  0000000                   	PUBLIC WITH_VSB
  645  0000000                   	PUBLIC WITH_VSC
  646  0000000                   	PUBLIC WITH_VSD
  647  0000000                   	PUBLIC WITH_VSE
  648  0000000                   	PUBLIC WITH_VSF
  649  0000000                   	PUBLIC WITH_MD4
  650  0000000                   	PUBLIC WITH_HNM4
  651  0000000                   	PUBLIC WITH_NM4
  652  0000000                   	PUBLIC WITH_NM4S
  653  0000000                   	PUBLIC WITH_MDM
  654  0000000                   	PUBLIC WITH_APM
  655  0000000                   	PUBLIC WITH_LP8
  656  0000000                   	PUBLIC WITH_VC4
  657  0000000                   	PUBLIC WITH_MDR
  658  0000000                   	PUBLIC WITH_E2A
  659  0000000                   	PUBLIC WITH_EMM
  660  0000000                   	PUBLIC WITH_MD6
  661  0000000                   	PUBLIC WITH_P10
  662  0000000                   	PUBLIC WITH_PC8
  663  0000000                   	PUBLIC WITH_SIL
  664  0000000                   	PUBLIC WITH_VMDPC8
  665  0000000                   	PUBLIC WITH_PCSPC8
  666  0000000                   	PUBLIC WITH_TONE
  667  0000000                   	PUBLIC WITH_HQPC8
  668  0000000                   	PUBLIC WITH_HQ567
  669  0000000                   	PUBLIC WITH_VMD567
  670  0000000                   	PUBLIC WITH_HQ567_HW
  671  0000000                   	PUBLIC WITH_HQ569_HW
  672  0000000                   	PUBLIC WITH_YAD
  673  0000000                   	PUBLIC WITH_P16





  674  0000000                   	PUBLIC WITH_VC8
  675  0000000                   	PUBLIC WITH_PC8VMDPCS
  676  0000000                   	PUBLIC WITH_LP8VMDPCS
  677  0000000                   	PUBLIC WITH_P16VMDPCS
  678  0000000                   	PUBLIC WITH_POLYPHONY
  679  0000000                   	PUBLIC WITH_MIDI_CHANNEL
  680  0000000                   	PUBLIC WITH_VOL_ADJ_MS
  681  0000000                   	PUBLIC WITH_PAUSE_RESUME
  682  0000000                   	PUBLIC WITH_CHANNEL_PRESSURE
  683  0000000                   	PUBLIC WITH_NOTE_OFFSET
  684  0000000                   	PUBLIC WITH_CHANGE_TEMPO
  685  0000000                   	PUBLIC WITH_ONEKEYONENOTE
  686  0000000                   	PUBLIC WITH_VELOCITY
  687  0000000                   	PUBLIC WITH_MS_EXT_MIDI
  688  0000000                   	PUBLIC WITH_SYNC_CH1_MS
  689  0000000                   	PUBLIC WITH_GLOBAL_CHANNEL_VOLM
  690  0000000                   	PUBLIC WITH_GLOBAL_CHANNEL_INS
  691  0000000                   	PUBLIC WITH_PITCH_BEND
  692  0000000                   	PUBLIC WITH_VIBRATO
  693  0000000                   	PUBLIC WITH_MODULATION_DEPTH
  694  0000000                   	PUBLIC WITH_CHANNEL_SUSTAIN
  695  0000000                   	PUBLIC WITH_SP_MIDI
  696  0000000                   	PUBLIC WITH_PERCUSSION
  697  0000000                   	PUBLIC WITH_DYNAMIC_CH
  698  0000000                   	PUBLIC WITH_MS_ENABLE_CHANNEL
  699  0000000                   	PUBLIC WITH_SP
  700  0000000                   	PUBLIC WITH_MS
  701  0000000                   	PUBLIC WITH_EVO
  702  0000000                   	PUBLIC WITH_SPEAKER_OUTPUT_TYPE
  703  0000000                   	PUBLIC WITH_SPEAKER_SWITCH
  704  0000000                   	PUBLIC WITH_SIM_SP
  705  0000000                   	PUBLIC WITH_SIM_TYPE
  706  0000000                   	PUBLIC WITH_EXT32MBIT
  707  0000000                   	PUBLIC WITH_EXT64M_SPI
  708  0000000                   	PUBLIC WITH_SP_NUM
  709  0000000                   	PUBLIC WITH_ONE_HQ
  710  0000000                   	PUBLIC WITH_PLAYE
  711  0000000                   	PUBLIC WITH_VS0A_SIL
  712  0000000                   	PUBLIC WITH_VS0B_SIL
  713  0000000                   	PUBLIC WITH_VS1A_SIL
  714  0000000                   	PUBLIC WITH_VS1B_SIL
  715  0000000                   	PUBLIC WITH_VS2A_SIL
  716  0000000                   	PUBLIC WITH_VS2B_SIL
  717  0000000                   	PUBLIC WITH_VS0A_MD4
  718  0000000                   	PUBLIC WITH_VS0B_MD4
  719  0000000                   	PUBLIC WITH_VS1A_MD4
  720  0000000                   	PUBLIC WITH_VS1B_MD4
  721  0000000                   	PUBLIC WITH_VS2A_MD4
  722  0000000                   	PUBLIC WITH_VS2B_MD4
  723  0000000                   	PUBLIC WITH_VS0A_HNM4
  724  0000000                   	PUBLIC WITH_VS0B_HNM4
  725  0000000                   	PUBLIC WITH_VS1A_HNM4
  726  0000000                   	PUBLIC WITH_VS1B_HNM4
  727  0000000                   	PUBLIC WITH_VS2A_HNM4
  728  0000000                   	PUBLIC WITH_VS2B_HNM4
  729  0000000                   	PUBLIC WITH_VS0A_NM4
  730  0000000                   	PUBLIC WITH_VS0B_NM4





  731  0000000                   	PUBLIC WITH_VS1A_NM4
  732  0000000                   	PUBLIC WITH_VS1B_NM4
  733  0000000                   	PUBLIC WITH_VS2A_NM4
  734  0000000                   	PUBLIC WITH_VS2B_NM4
  735  0000000                   	PUBLIC WITH_VS0A_NM4S
  736  0000000                   	PUBLIC WITH_VS0B_NM4S
  737  0000000                   	PUBLIC WITH_VS1A_NM4S
  738  0000000                   	PUBLIC WITH_VS1B_NM4S
  739  0000000                   	PUBLIC WITH_VS2A_NM4S
  740  0000000                   	PUBLIC WITH_VS2B_NM4S
  741  0000000                   	PUBLIC WITH_VS0A_MDM
  742  0000000                   	PUBLIC WITH_VS0B_MDM
  743  0000000                   	PUBLIC WITH_VS1A_MDM
  744  0000000                   	PUBLIC WITH_VS1B_MDM
  745  0000000                   	PUBLIC WITH_VS2A_MDM
  746  0000000                   	PUBLIC WITH_VS2B_MDM
  747  0000000                   	PUBLIC WITH_VS0A_APM
  748  0000000                   	PUBLIC WITH_VS0B_APM
  749  0000000                   	PUBLIC WITH_VS1A_APM
  750  0000000                   	PUBLIC WITH_VS1B_APM
  751  0000000                   	PUBLIC WITH_VS2A_APM
  752  0000000                   	PUBLIC WITH_VS2B_APM
  753  0000000                   	PUBLIC WITH_VS0A_LP8
  754  0000000                   	PUBLIC WITH_VS0B_LP8
  755  0000000                   	PUBLIC WITH_VS1A_LP8
  756  0000000                   	PUBLIC WITH_VS1B_LP8
  757  0000000                   	PUBLIC WITH_VS2A_LP8
  758  0000000                   	PUBLIC WITH_VS2B_LP8
  759  0000000                   	PUBLIC WITH_VS0A_VC4
  760  0000000                   	PUBLIC WITH_VS0B_VC4
  761  0000000                   	PUBLIC WITH_VS1A_VC4
  762  0000000                   	PUBLIC WITH_VS1B_VC4
  763  0000000                   	PUBLIC WITH_VS2A_VC4
  764  0000000                   	PUBLIC WITH_VS2B_VC4
  765  0000000                   	PUBLIC WITH_VS0A_MDR
  766  0000000                   	PUBLIC WITH_VS0B_MDR
  767  0000000                   	PUBLIC WITH_VS1A_MDR
  768  0000000                   	PUBLIC WITH_VS1B_MDR
  769  0000000                   	PUBLIC WITH_VS2A_MDR
  770  0000000                   	PUBLIC WITH_VS2B_MDR
  771  0000000                   	PUBLIC WITH_VS0A_E2A
  772  0000000                   	PUBLIC WITH_VS0B_E2A
  773  0000000                   	PUBLIC WITH_VS1A_E2A
  774  0000000                   	PUBLIC WITH_VS1B_E2A
  775  0000000                   	PUBLIC WITH_VS2A_E2A
  776  0000000                   	PUBLIC WITH_VS2B_E2A
  777  0000000                   	PUBLIC WITH_VS0A_EMM
  778  0000000                   	PUBLIC WITH_VS0B_EMM
  779  0000000                   	PUBLIC WITH_VS1A_EMM
  780  0000000                   	PUBLIC WITH_VS1B_EMM
  781  0000000                   	PUBLIC WITH_VS2A_EMM
  782  0000000                   	PUBLIC WITH_VS2B_EMM
  783  0000000                   	PUBLIC WITH_VS0A_MD6
  784  0000000                   	PUBLIC WITH_VS0B_MD6
  785  0000000                   	PUBLIC WITH_VS1A_MD6
  786  0000000                   	PUBLIC WITH_VS1B_MD6
  787  0000000                   	PUBLIC WITH_VS2A_MD6





  788  0000000                   	PUBLIC WITH_VS2B_MD6
  789  0000000                   	PUBLIC WITH_VS0A_P10
  790  0000000                   	PUBLIC WITH_VS0B_P10
  791  0000000                   	PUBLIC WITH_VS1A_P10
  792  0000000                   	PUBLIC WITH_VS1B_P10
  793  0000000                   	PUBLIC WITH_VS2A_P10
  794  0000000                   	PUBLIC WITH_VS2B_P10
  795  0000000                   	PUBLIC WITH_VS0A_PC8
  796  0000000                   	PUBLIC WITH_VS0B_PC8
  797  0000000                   	PUBLIC WITH_VS1A_PC8
  798  0000000                   	PUBLIC WITH_VS1B_PC8
  799  0000000                   	PUBLIC WITH_VS2A_PC8
  800  0000000                   	PUBLIC WITH_VS2B_PC8
  801  0000000                   	PUBLIC WITH_VS0A_VMDPC8
  802  0000000                   	PUBLIC WITH_VS0B_VMDPC8
  803  0000000                   	PUBLIC WITH_VS1A_VMDPC8
  804  0000000                   	PUBLIC WITH_VS1B_VMDPC8
  805  0000000                   	PUBLIC WITH_VS2A_VMDPC8
  806  0000000                   	PUBLIC WITH_VS2B_VMDPC8
  807  0000000                   	PUBLIC WITH_VS0A_PCSPC8
  808  0000000                   	PUBLIC WITH_VS0B_PCSPC8
  809  0000000                   	PUBLIC WITH_VS1A_PCSPC8
  810  0000000                   	PUBLIC WITH_VS1B_PCSPC8
  811  0000000                   	PUBLIC WITH_VS2A_PCSPC8
  812  0000000                   	PUBLIC WITH_VS2B_PCSPC8
  813  0000000                   	PUBLIC WITH_VS0A_TONE
  814  0000000                   	PUBLIC WITH_VS0B_TONE
  815  0000000                   	PUBLIC WITH_VS1A_TONE
  816  0000000                   	PUBLIC WITH_VS1B_TONE
  817  0000000                   	PUBLIC WITH_VS2A_TONE
  818  0000000                   	PUBLIC WITH_VS2B_TONE
  819  0000000                   	PUBLIC WITH_VS0A_HQPC8
  820  0000000                   	PUBLIC WITH_VS0B_HQPC8
  821  0000000                   	PUBLIC WITH_VS1A_HQPC8
  822  0000000                   	PUBLIC WITH_VS1B_HQPC8
  823  0000000                   	PUBLIC WITH_VS2A_HQPC8
  824  0000000                   	PUBLIC WITH_VS2B_HQPC8
  825  0000000                   	PUBLIC WITH_CH0_EVO
  826  0000000                   	PUBLIC WITH_CH1_EVO
  827  0000000                   	PUBLIC WITH_CH2_EVO
  828  0000000                   	PUBLIC WITH_FILTER
  829  0000000                   	PUBLIC WITH_NOISE_SHAPING
  830  0000000                   	PUBLIC WITH_DAC_ENABLE
  831  0000000                   	PUBLIC WITH_SP0XL_RESOLUTION
  832  0000000                   	PUBLIC WITH_SPEN_EFFECTIVE_BITS
  833  0000000                   	PUBLIC WITH_RDPC_VALUE
  834  0000000                   	PUBLIC WITH_MS_CODA
  835  0000000                   	PUBLIC WITH_SP_MIDI_SIMUL
  836  0000000                   	PUBLIC WITH_SP_SKIP
  837  0000000                   	PUBLIC WITH_SP_GLOBAL_SR
  838  0000000                   	PUBLIC WITH_RAM_OVER_STACK
  839  0000000                   	PUBLIC WITH_STACK_SIZE
  840  0000000                   	PUBLIC WITH_HWENGINE_SHARED_RAM_SIZE
  841  0000000                   	PUBLIC TONE_2KHZ_TMC
  842  0000000                   	PUBLIC TONE_2KHZ_TMV
  843  0000000                   	PUBLIC WITH_COLOR_FLY_CURVENUMS
  844  0000000                   	PUBLIC WITH_SPI_GPIO





  845  0000000                   	PUBLIC WITH_SPI_SPIO
  846  0000000                   	PUBLIC SPI_COMMAND_ENABLE
  847  0000000                   	PUBLIC SPI_CLOCK_RATE
  848  0000000                   	PUBLIC I2C_COMMAND_ENABLE
  849  0000000                   	PUBLIC WITH_ISP_READ_WRITE
  850  0000000                   	PUBLIC WITH_ISP_UPDATE
  851  0000000                   	PUBLIC WITH_PROTECTION_PAGE_UPDATE
  852  0000000                   	PUBLIC WITH_BOOT_LOADER
  853  0000000                   	PUBLIC BLOCK_NUM
  854  0000000                   	PUBLIC PROTECTION_PAGE_WORKING_MODE
  855  0000000                   	PUBLIC WITH_PSF_PROJECT
  856  0000000                   	PUBLIC WITH_PLAY_INDEX
  857  0000000                   	PUBLIC N55P_DEVICE_NUM
  858  0000000                   	PUBLIC N55P_DEVICE_UIO_USED
  859  0000000                   	PUBLIC N55P_DEVICE0_CNSTA
  860  0000000                   	PUBLIC N55P_DEVICE0_CNSTB
  861  0000000                   	PUBLIC N55P_DEVICE0_CNSTC
  862  0000000                   	PUBLIC N55P_DEVICE0_PCKAB
  863  0000000                   	PUBLIC N55P_DEVICE0_PCKCD
  864  0000000                   	PUBLIC N55P_DEVICE1_CNSTA
  865  0000000                   	PUBLIC N55P_DEVICE1_CNSTB
  866  0000000                   	PUBLIC N55P_DEVICE1_CNSTC
  867  0000000                   	PUBLIC N55P_DEVICE1_PCKAB
  868  0000000                   	PUBLIC N55P_DEVICE1_PCKCD
  869  0000000                   	PUBLIC AVAILABLE_DPD_RAM
  870  0000000                   	PUBLIC WITH_FW_CAP_SENSOR_KEYS
  871  0000000                   	PUBLIC WITH_TOUCH_WAKEUP_EN
  872  0000000                   	PUBLIC TOUCH_WAKEUP_EN
  873  0000000                   	PUBLIC WITH_TOUCH_WAKEUP_KEYNUMS
  874  0000000                   	PUBLIC CAP_SENSOR_CURRENT_SOURCE
  875  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME
  876  0000000                   	PUBLIC CAP_SENSOR_TMG_DIV
  877  0000000                   	PUBLIC CAP_GET_INIT_AVG
  878  0000000                   	PUBLIC CAP_AVG_WITH_CHECK_BUSY
  879  0000000                   	PUBLIC WITH_FW_SEN_OPTION_PIN
  880  0000000                   	PUBLIC CAP_Sensitivity_Sel_Num
  881  0000000                   	PUBLIC WITH_CAPSENSOR_MULTISENTABLE
  882  0000000                   	PUBLIC CAP_SENSOR_DEBOUNCE
  883  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY0_TH
  884  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY1_TH
  885  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY2_TH
  886  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY3_TH
  887  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY4_TH
  888  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY5_TH
  889  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY6_TH
  890  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY7_TH
  891  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY8_TH
  892  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY9_TH
  893  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY10_TH
  894  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY11_TH
  895  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY12_TH
  896  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY13_TH
  897  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY14_TH
  898  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY15_TH
  899  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY16_TH
  900  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY17_TH
  901  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY18_TH





  902  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY19_TH
  903  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY20_TH
  904  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY21_TH
  905  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY22_TH
  906  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY23_TH
  907  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY0_TH_UNTOUCHED
  908  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY1_TH_UNTOUCHED
  909  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY2_TH_UNTOUCHED
  910  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY3_TH_UNTOUCHED
  911  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY4_TH_UNTOUCHED
  912  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY5_TH_UNTOUCHED
  913  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY6_TH_UNTOUCHED
  914  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY7_TH_UNTOUCHED
  915  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY8_TH_UNTOUCHED
  916  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY9_TH_UNTOUCHED
  917  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY10_TH_UNTOUCHED
  918  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY11_TH_UNTOUCHED
  919  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY12_TH_UNTOUCHED
  920  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY13_TH_UNTOUCHED
  921  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY14_TH_UNTOUCHED
  922  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY15_TH_UNTOUCHED
  923  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY16_TH_UNTOUCHED
  924  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY17_TH_UNTOUCHED
  925  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY18_TH_UNTOUCHED
  926  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY19_TH_UNTOUCHED
  927  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY20_TH_UNTOUCHED
  928  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY21_TH_UNTOUCHED
  929  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY22_TH_UNTOUCHED
  930  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY23_TH_UNTOUCHED
  931  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY0_TH_NOISEFILTER
  932  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY1_TH_NOISEFILTER
  933  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY2_TH_NOISEFILTER
  934  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY3_TH_NOISEFILTER
  935  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY4_TH_NOISEFILTER
  936  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY5_TH_NOISEFILTER
  937  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY6_TH_NOISEFILTER
  938  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY7_TH_NOISEFILTER
  939  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY8_TH_NOISEFILTER
  940  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY9_TH_NOISEFILTER
  941  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY10_TH_NOISEFILTER
  942  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY11_TH_NOISEFILTER
  943  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY12_TH_NOISEFILTER
  944  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY13_TH_NOISEFILTER
  945  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY14_TH_NOISEFILTER
  946  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY15_TH_NOISEFILTER
  947  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY16_TH_NOISEFILTER
  948  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY17_TH_NOISEFILTER
  949  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY18_TH_NOISEFILTER
  950  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY19_TH_NOISEFILTER
  951  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY20_TH_NOISEFILTER
  952  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY21_TH_NOISEFILTER
  953  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY22_TH_NOISEFILTER
  954  0000000                   	PUBLIC CAP_SENSOR_TBL0_KEY23_TH_NOISEFILTER
  955  0000000                   	PUBLIC AVG_ADJ_CNT_NUM
  956  0000000                   	PUBLIC CAP_SENSOR_SEL_PIN0
  957  0000000                   	PUBLIC CAP_SENSOR_SEL_PIN1
  958  0000000                   	PUBLIC CAP_SENSOR_SEL_PIN2





  959  0000000                   	PUBLIC CAP_SENSOR_SEL_PIN3
  960  0000000                   	PUBLIC CAP_RTP_DISABLE
  961  0000000                   	PUBLIC CAP_CHARGE_MODE
  962  0000000                   	PUBLIC CAP_SKIP_FIRST_SUM
  963  0000000                   	PUBLIC CAP_SleepTime_Sel_Num
  964  0000000                   	PUBLIC WITH_SLEEP_SEL_PIN_NUM
  965  0000000                   	PUBLIC CAP_SENSOR_ST_SEL_PIN0
  966  0000000                   	PUBLIC CAP_SENSOR_ST_SEL_PIN1
  967  0000000                   	PUBLIC CAP_SENSOR_ST_SEL_PIN2
  968  0000000                   	PUBLIC CAP_SENSOR_ST_SEL_PIN3
  969  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX0
  970  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX1
  971  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX2
  972  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX3
  973  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX4
  974  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX5
  975  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX6
  976  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX7
  977  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX8
  978  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX9
  979  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX10
  980  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX11
  981  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX12
  982  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX13
  983  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX14
  984  0000000                   	PUBLIC CAP_SENSOR_SLEEP_TIME_INDEX15
  985  0000000                   	PUBLIC CAP_SCAN_NUBER
  986  0000000                   	PUBLIC CAP_SENSOR_KEY0_BP
  987  0000000                   	PUBLIC CAP_SENSOR_KEY1_BP
  988  0000000                   	PUBLIC CAP_SENSOR_KEY2_BP
  989  0000000                   	PUBLIC CAP_SENSOR_KEY3_BP
  990  0000000                   	PUBLIC CAP_SENSOR_KEY4_BP
  991  0000000                   	PUBLIC CAP_SENSOR_KEY5_BP
  992  0000000                   	PUBLIC CAP_SENSOR_KEY6_BP
  993  0000000                   	PUBLIC CAP_SENSOR_KEY7_BP
  994  0000000                   	PUBLIC CAP_SENSOR_KEY8_BP
  995  0000000                   	PUBLIC CAP_SENSOR_KEY9_BP
  996  0000000                   	PUBLIC CAP_SENSOR_KEY10_BP
  997  0000000                   	PUBLIC CAP_SENSOR_KEY11_BP
  998  0000000                   	PUBLIC CAP_SENSOR_KEY12_BP
  999  0000000                   	PUBLIC CAP_SENSOR_KEY13_BP
 1000  0000000                   	PUBLIC CAP_SENSOR_KEY14_BP
 1001  0000000                   	PUBLIC CAP_SENSOR_KEY15_BP
 1002  0000000                   	PUBLIC CAP_SENSOR_KEY16_BP
 1003  0000000                   	PUBLIC CAP_SENSOR_KEY17_BP
 1004  0000000                   	PUBLIC CAP_SENSOR_KEY18_BP
 1005  0000000                   	PUBLIC CAP_SENSOR_KEY19_BP
 1006  0000000                   	PUBLIC CAP_SENSOR_KEY20_BP
 1007  0000000                   	PUBLIC CAP_SENSOR_KEY21_BP
 1008  0000000                   	PUBLIC CAP_SENSOR_KEY22_BP
 1009  0000000                   	PUBLIC CAP_SENSOR_KEY23_BP
 1010  0000000                   	PUBLIC WITH_UART_TX
 1011  0000000                   	PUBLIC WITH_UART_RX
 1012  0000000                   	PUBLIC WITH_UART_SWITCH
 1013  0000000                   	PUBLIC UART_BAUDRATE_DIVIDER
 1014  0000000                   	PUBLIC TDLY_VALUE
 1015  0000000                   	PUBLIC PARITY_BIT





 1016  0000000                   	PUBLIC UART_TXDLY_CNT
 1017  0000000                   	PUBLIC WITH_SLD_ENABLE
 1018  0000000                   	PUBLIC WITH_SLD_SWITCH
 1019  0000000                   	PUBLIC SLD_CTL_TYPE
 1020  0000000                   	PUBLIC SLD_ORDER_BIT
 1021  0000000                   	PUBLIC SLD_ONE_WIRE_HIDA0
 1022  0000000                   	PUBLIC SLD_ONE_WIRE_HIDA1
 1023  0000000                   	PUBLIC SLD_ONE_WIRE_LODA0
 1024  0000000                   	PUBLIC SLD_ONE_WIRE_LODA1
 1025  0000000                   	PUBLIC SLD_TWO_WIRE_CLK_RATE
 1026  0000000                   
 1027  0000000                   	INCLUDE	"D:\SOURCECODE\_AVERY_M031\M031BSP_NSP_TWOWIRESAMPLE\NSP_PROJECT\RINGRING_NSP960B\CPUIF\CONFIGURATION.INI.APP"
 1028  0000000                   LOCAL_TEST						EQU 0
 1029  0000000                   ;--------------------------------------------------------------------------
 1030  0000000                   ; Configurations : New add
 1031  0000000                   ;--------------------------------------------------------------------------
 1032  0000000                   ; share ram
 1033  0000000                   SHM_RAM_BEGIN		EQU 1A0H
 1034  0000000                   SHM_RAM_END			EQU 22FH
 1035  0000000                   
 1036  0000000                   ; stack
 1037  0000000                   STACK_END   		EQU 1ffH
 1038  0000000                   
 1039  0000000                   HWE_STACK_BEGIN		EQU 230H
 1040  0000000                   
 1041  0000000                   ; spi flash
 1042  0000000                   WITH_SPI_SWITCH 	EQU 1
 1043  0000000                   
 1044  0000000                   ; share timing
 1045  0000000                   ; Modified ---------- HIRC_CLK_6502		EQU 0FFH
 1046  0000000                   HIRC_CLK_6502 EQU 07FH
 1047  0000000                   ; Modified ---------- HIRC_CLK_HWE		EQU 17FH
 1048  0000000                   HIRC_CLK_HWE  EQU 1FFH
 1049  0000000                   
 1050  0000000                   ;--------------------------------------------------------------------------
 1051  0000000                   ; Configurations : Configurations config features for di-fferent libraries.
 1052  0000000                   ;--------------------------------------------------------------------------
 1053  0000000                   WITH_CHIP_SERIES				EQU 0
 1054  0000000                   ;0:	N588M
 1055  0000000                   ;1:	N588K
 1056  0000000                   
 1057  0000000                   WITH_VOL_ADJ					EQU 1
 1058  0000000                   ; There will be 2 libraries for each chip series such as W566B,W566C,....
 1059  0000000                   ; One library with Volume Adjustment, another one without Volume Adjustment.
 1060  0000000                   ; 0: WITHOUT VOL ADJ.
 1061  0000000                   ; 1: WITH S/W VOL ADJ.
 1062  0000000                   ; 2: WITH H/W VOL ADJ.
 1063  0000000                   
 1064  0000000                   WITH_MULTI_CHANNEL				EQU  0
 1065  0000000                   ; There will be 2 libraries 
 1066  0000000                   ; One library with 16HQ, another one without 16HQ
 1067  0000000                   ; 0: WITHOUT 16HQ.
 1068  0000000                   ; 1: WITH 16HQ.	
 1069  0000000                   
 1070  0000000                   WITH_VOL_REDUCE					EQU 0	
 1071  0000000                   
 1072  0000000                   WITH_16BIT_MODE					EQU 0





 1073  0000000                   ; Some with 65C816 uC, some with 65C02.
 1074  0000000                   WITH_32K_BANK					EQU 1
 1075  0000000                   ;some with bank (ex:W567,W588), some without (ex:W566,W5691)
 1076  0000000                   WITH_T_BUFFER					EQU 0
 1077  0000000                   ;T-buffer is the buffer for latch decoded output PCM
 1078  0000000                   WITH_READ_DATA_TYPE 			EQU 0
 1079  0000000                   ; 0 : from ROM
 1080  0000000                   ; 1 : from FI-FO
 1081  0000000                   WITH_PCM_OUTPUT_TYPE			EQU 0
 1082  0000000                   ; 0 : unsigned PCM
 1083  0000000                   ; 1 : signed PCM (2' complement) 
 1084  0000000                   ; 2 : signed magnitude
 1085  0000000                   WITH_PCM_OUTPUT_SIZE			EQU 2
 1086  0000000                   ; 1 : 1 BYTE
 1087  0000000                   ; 2 : 2 BYTE	
 1088  0000000                   WITH_CMD						EQU 0
 1089  0000000                   ; for W569 chips that CPU send command to uC for next operations
 1090  0000000                   
 1091  0000000                   WITH_FW_MIXER					EQU 0
 1092  0000000                   ; I-f a timer mix several channels but output to a T-buffer/Mixer output.
 1093  0000000                   ; A firmware mixer will be needed.
 1094  0000000                   WITH_COMPRESSED_MIDI			EQU 2
 1095  0000000                   WITH_MULTIPLIER					EQU 0
 1096  0000000                   ; 0 : FW
 1097  0000000                   ; 1 : 9*7
 1098  0000000                   ; 2 : 9*8
 1099  0000000                   WITH_HEAD_TAIL_PROCESS			EQU 1
 1100  0000000                   
 1101  0000000                   ;-------------------------------------------------
 1102  0000000                   ; for melody symbol definition
 1103  0000000                   ;-------------------------------------------------
 1104  0000000                   ENV_SHARP_DECAY_AMOUNT				EQU 4
 1105  0000000                   
 1106  0000000                   WITH_ALL_MIXER_SFR				EQU 0
 1107  0000000                   ; Following defines T-buffer registers
 1108  0000000                   
 1109  0000000                   ;USED ACCOMPANY WITH SP_LO_T_INDEX_TABLE & SP_HI_T_INDEX_TABLE
 1110  0000000                   SP_START_SIM_BUF_VS0A			EQU 0
 1111  0000000                   SP_START_SIM_BUF_VS1A			EQU 0
 1112  0000000                   SP_START_SIM_BUF_VS2A			EQU 0
 1113  0000000                   SP_START_SIM_BUF_VS0B 			EQU 0
 1114  0000000                   SP_START_SIM_BUF_VS1B			EQU 0
 1115  0000000                   
 1116  0000000                   
 1117  0000000                   ; Following options used for ISR.
 1118  0000000                   ; Please disable VS0D->VS0C->VS2B->VS1B->VSF->VSE->...>VS0A 
 1119  0000000                   WITH_ISR_VS0A					EQU 1
 1120  0000000                   WITH_ISR_VS0B					EQU 0
 1121  0000000                   WITH_ISR_VS1A					EQU 0
 1122  0000000                   WITH_ISR_VS1B					EQU 0
 1123  0000000                   WITH_ISR_VS2A					EQU 0
 1124  0000000                   WITH_ISR_VS2B					EQU 0
 1125  0000000                   
 1126  0000000                   
 1127  0000000                   ; Following options used for selecting speech channels.
 1128  0000000                   ; Please disable VS0D->VS0C->VS2B->VS1B->VSF->VSE->...>VS0A 
 1129  0000000                   WITH_VS0A						EQU 1





 1130  0000000                   WITH_VS0B						EQU 0
 1131  0000000                   WITH_VS1A						EQU 0
 1132  0000000                   WITH_VS1B						EQU 0
 1133  0000000                   WITH_VS2A						EQU 0
 1134  0000000                   WITH_VS2B						EQU 0
 1135  0000000                   WITH_VS0C						EQU 0
 1136  0000000                   WITH_VS0D						EQU 0
 1137  0000000                   WITH_VS3						EQU 0
 1138  0000000                   WITH_VS4						EQU 0
 1139  0000000                   WITH_VS5						EQU 0
 1140  0000000                   WITH_VS6						EQU 0
 1141  0000000                   WITH_VS7						EQU 0
 1142  0000000                   WITH_VS8						EQU 0
 1143  0000000                   WITH_VS9						EQU 0
 1144  0000000                   WITH_VSA						EQU 0
 1145  0000000                   WITH_VSB						EQU 0
 1146  0000000                   WITH_VSC						EQU 0
 1147  0000000                   WITH_VSD						EQU 0
 1148  0000000                   WITH_VSE						EQU 0
 1149  0000000                   WITH_VSF						EQU 0
 1150  0000000                   
 1151  0000000                   WITH_MD4						EQU 0
 1152  0000000                   WITH_HNM4						EQU 0
 1153  0000000                   WITH_NM4						EQU 0
 1154  0000000                   WITH_NM4S						EQU 0
 1155  0000000                   WITH_MDM						EQU 0
 1156  0000000                   WITH_APM						EQU 0
 1157  0000000                   WITH_LP8						EQU 0
 1158  0000000                   WITH_VC4						EQU 0
 1159  0000000                   WITH_MDR						EQU 0
 1160  0000000                   
 1161  0000000                   WITH_E2A						EQU 0
 1162  0000000                   WITH_EMM						EQU 0
 1163  0000000                   WITH_MD6						EQU 0
 1164  0000000                   WITH_P10						EQU 0
 1165  0000000                   WITH_PC8						EQU 0
 1166  0000000                   
 1167  0000000                   WITH_SIL						EQU 1
 1168  0000000                   WITH_VMDPC8						EQU 0
 1169  0000000                   WITH_PCSPC8						EQU 0
 1170  0000000                   WITH_TONE						EQU 0
 1171  0000000                   WITH_HQPC8						EQU 0
 1172  0000000                   
 1173  0000000                   WITH_HQ567						EQU 0
 1174  0000000                   WITH_VMD567						EQU 0
 1175  0000000                   WITH_HQ567_HW						EQU 0
 1176  0000000                   WITH_HQ569_HW						EQU 0
 1177  0000000                   WITH_YAD						EQU 0
 1178  0000000                   WITH_P16						EQU 0
 1179  0000000                   WITH_VC8						EQU 0
 1180  0000000                   WITH_PC8VMDPCS						EQU 0
 1181  0000000                   WITH_LP8VMDPCS						EQU 0
 1182  0000000                   WITH_P16VMDPCS						EQU 0
 1183  0000000                   ;--------------------------------------------------------------------------
 1184  0000000                   ; Options
 1185  0000000                   ;--------------------------------------------------------------------------
 1186  0000000                   WITH_POLYPHONY					EQU 0





 1187  0000000                   WITH_MIDI_CHANNEL				EQU 0
 1188  0000000                   WITH_VOL_ADJ_MS					EQU 0
 1189  0000000                   
 1190  0000000                   WITH_PAUSE_RESUME				EQU 1
 1191  0000000                   WITH_CHANNEL_PRESSURE				EQU 0
 1192  0000000                   WITH_NOTE_OFFSET				EQU 0
 1193  0000000                   WITH_CHANGE_TEMPO				EQU 0
 1194  0000000                   WITH_ONEKEYONENOTE  				EQU 1
 1195  0000000                   WITH_VELOCITY					EQU 0
 1196  0000000                   WITH_MS_EXT_MIDI				EQU 0
 1197  0000000                   WITH_SYNC_CH1_MS				EQU 0
 1198  0000000                   ; Disable this feature will save 5 bytes RAM.
 1199  0000000                   WITH_GLOBAL_CHANNEL_VOLM 			EQU 0
 1200  0000000                   WITH_GLOBAL_CHANNEL_INS   			EQU 0
 1201  0000000                   
 1202  0000000                   WITH_PITCH_BEND					EQU 0
 1203  0000000                   WITH_VIBRATO                                 	EQU 0
 1204  0000000                   WITH_MODULATION_DEPTH                         	EQU 0
 1205  0000000                   WITH_CHANNEL_SUSTAIN				EQU 0
 1206  0000000                   WITH_SP_MIDI					EQU 0
 1207  0000000                   WITH_PERCUSSION					EQU 0
 1208  0000000                   WITH_DYNAMIC_CH					EQU 0
 1209  0000000                   WITH_MS_ENABLE_CHANNEL				EQU 0
 1210  0000000                   ; Disable this feature will save 2 bytes RAM.
 1211  0000000                   
 1212  0000000                   WITH_SP							EQU 1
 1213  0000000                   ; Disable speech channels to save code size.
 1214  0000000                   WITH_MS							EQU 0
 1215  0000000                   ; Disable melody channels to save RAM and code size.
 1216  0000000                   WITH_EVO						EQU 0
 1217  0000000                   ; Disable EVO channels to save RAM and code size.
 1218  0000000                   
 1219  0000000                   ;------for speaker output type-----------------------------------------
 1220  0000000                   WITH_SPEAKER_OUTPUT_TYPE 			EQU 	1
 1221  0000000                   WITH_SPEAKER_SWITCH      			EQU     0  
 1222  0000000                   
 1223  0000000                   WITH_SIM_SP                                     EQU     0 
 1224  0000000                   WITH_SIM_TYPE					EQU	1
 1225  0000000                   ;0:W55F
 1226  0000000                   ;1:SPI
 1227  0000000                   WITH_EXT32MBIT					EQU	0
 1228  0000000                   WITH_EXT64M_SPI					EQU 	0
 1229  0000000                   
 1230  0000000                   WITH_SP_NUM                                     EQU     1
 1231  0000000                   WITH_ONE_HQ					EQU	0
 1232  0000000                   WITH_PLAYE					EQU 	1
 1233  0000000                   
 1234  0000000                   
 1235  0000000                   
 1236  0000000                   ; Following Options speci-fy what format can be played in each individual channel.
 1237  0000000                   ; Properly disable some formats for channels can save RAM and code size.
 1238  0000000                   WITH_VS0A_SIL					EQU 1
 1239  0000000                   WITH_VS0B_SIL					EQU 0
 1240  0000000                   WITH_VS1A_SIL					EQU 0
 1241  0000000                   WITH_VS1B_SIL					EQU 0
 1242  0000000                   WITH_VS2A_SIL					EQU 0
 1243  0000000                   WITH_VS2B_SIL					EQU 0





 1244  0000000                   
 1245  0000000                   WITH_VS0A_MD4					EQU 0
 1246  0000000                   WITH_VS0B_MD4					EQU 0
 1247  0000000                   WITH_VS1A_MD4					EQU 0
 1248  0000000                   WITH_VS1B_MD4					EQU 0
 1249  0000000                   WITH_VS2A_MD4					EQU 0
 1250  0000000                   WITH_VS2B_MD4					EQU 0
 1251  0000000                   
 1252  0000000                   WITH_VS0A_HNM4					EQU 0
 1253  0000000                   WITH_VS0B_HNM4					EQU 0
 1254  0000000                   WITH_VS1A_HNM4					EQU 0
 1255  0000000                   WITH_VS1B_HNM4					EQU 0
 1256  0000000                   WITH_VS2A_HNM4					EQU 0
 1257  0000000                   WITH_VS2B_HNM4					EQU 0
 1258  0000000                   
 1259  0000000                   WITH_VS0A_NM4					EQU 0
 1260  0000000                   WITH_VS0B_NM4					EQU 0
 1261  0000000                   WITH_VS1A_NM4					EQU 0
 1262  0000000                   WITH_VS1B_NM4					EQU 0
 1263  0000000                   WITH_VS2A_NM4					EQU 0
 1264  0000000                   WITH_VS2B_NM4					EQU 0
 1265  0000000                   
 1266  0000000                   WITH_VS0A_NM4S					EQU 0
 1267  0000000                   WITH_VS0B_NM4S					EQU 0
 1268  0000000                   WITH_VS1A_NM4S					EQU 0
 1269  0000000                   WITH_VS1B_NM4S					EQU 0
 1270  0000000                   WITH_VS2A_NM4S					EQU 0
 1271  0000000                   WITH_VS2B_NM4S					EQU 0
 1272  0000000                   
 1273  0000000                   WITH_VS0A_MDM					EQU 0
 1274  0000000                   WITH_VS0B_MDM					EQU 0
 1275  0000000                   WITH_VS1A_MDM					EQU 0
 1276  0000000                   WITH_VS1B_MDM					EQU 0
 1277  0000000                   WITH_VS2A_MDM					EQU 0
 1278  0000000                   WITH_VS2B_MDM					EQU 0
 1279  0000000                   
 1280  0000000                   WITH_VS0A_APM					EQU 0
 1281  0000000                   WITH_VS0B_APM					EQU 0
 1282  0000000                   WITH_VS1A_APM					EQU 0
 1283  0000000                   WITH_VS1B_APM					EQU 0
 1284  0000000                   WITH_VS2A_APM					EQU 0
 1285  0000000                   WITH_VS2B_APM					EQU 0
 1286  0000000                   
 1287  0000000                   WITH_VS0A_LP8					EQU 0
 1288  0000000                   WITH_VS0B_LP8					EQU 0
 1289  0000000                   WITH_VS1A_LP8					EQU 0
 1290  0000000                   WITH_VS1B_LP8					EQU 0
 1291  0000000                   WITH_VS2A_LP8					EQU 0
 1292  0000000                   WITH_VS2B_LP8					EQU 0
 1293  0000000                   
 1294  0000000                   WITH_VS0A_VC4					EQU 0
 1295  0000000                   WITH_VS0B_VC4					EQU 0
 1296  0000000                   WITH_VS1A_VC4					EQU 0
 1297  0000000                   WITH_VS1B_VC4					EQU 0
 1298  0000000                   WITH_VS2A_VC4					EQU 0
 1299  0000000                   WITH_VS2B_VC4					EQU 0
 1300  0000000                   





 1301  0000000                   WITH_VS0A_MDR					EQU 0
 1302  0000000                   WITH_VS0B_MDR					EQU 0
 1303  0000000                   WITH_VS1A_MDR					EQU 0
 1304  0000000                   WITH_VS1B_MDR					EQU 0
 1305  0000000                   WITH_VS2A_MDR					EQU 0
 1306  0000000                   WITH_VS2B_MDR					EQU 0
 1307  0000000                   
 1308  0000000                   WITH_VS0A_E2A					EQU 0
 1309  0000000                   WITH_VS0B_E2A					EQU 0
 1310  0000000                   WITH_VS1A_E2A					EQU 0
 1311  0000000                   WITH_VS1B_E2A					EQU 0
 1312  0000000                   WITH_VS2A_E2A					EQU 0
 1313  0000000                   WITH_VS2B_E2A					EQU 0
 1314  0000000                   
 1315  0000000                   WITH_VS0A_EMM					EQU 0
 1316  0000000                   WITH_VS0B_EMM					EQU 0
 1317  0000000                   WITH_VS1A_EMM					EQU 0
 1318  0000000                   WITH_VS1B_EMM					EQU 0
 1319  0000000                   WITH_VS2A_EMM					EQU 0
 1320  0000000                   WITH_VS2B_EMM					EQU 0
 1321  0000000                   
 1322  0000000                   WITH_VS0A_MD6					EQU 0
 1323  0000000                   WITH_VS0B_MD6					EQU 0
 1324  0000000                   WITH_VS1A_MD6					EQU 0
 1325  0000000                   WITH_VS1B_MD6					EQU 0
 1326  0000000                   WITH_VS2A_MD6					EQU 0
 1327  0000000                   WITH_VS2B_MD6					EQU 0
 1328  0000000                   
 1329  0000000                   WITH_VS0A_P10					EQU 0
 1330  0000000                   WITH_VS0B_P10					EQU 0
 1331  0000000                   WITH_VS1A_P10					EQU 0
 1332  0000000                   WITH_VS1B_P10					EQU 0
 1333  0000000                   WITH_VS2A_P10					EQU 0
 1334  0000000                   WITH_VS2B_P10					EQU 0
 1335  0000000                   
 1336  0000000                   WITH_VS0A_PC8					EQU 0
 1337  0000000                   WITH_VS0B_PC8					EQU 0
 1338  0000000                   WITH_VS1A_PC8					EQU 0
 1339  0000000                   WITH_VS1B_PC8					EQU 0
 1340  0000000                   WITH_VS2A_PC8					EQU 0
 1341  0000000                   WITH_VS2B_PC8					EQU 0
 1342  0000000                   
 1343  0000000                   ; PC8 type VMD, disable to save code size.
 1344  0000000                   WITH_VS0A_VMDPC8				EQU 0
 1345  0000000                   WITH_VS0B_VMDPC8				EQU 0
 1346  0000000                   WITH_VS1A_VMDPC8				EQU 0
 1347  0000000                   WITH_VS1B_VMDPC8				EQU 0
 1348  0000000                   WITH_VS2A_VMDPC8				EQU 0
 1349  0000000                   WITH_VS2B_VMDPC8				EQU 0
 1350  0000000                   
 1351  0000000                   ; PC8 type PCS, disable to save code size.
 1352  0000000                   WITH_VS0A_PCSPC8				EQU 0
 1353  0000000                   WITH_VS0B_PCSPC8				EQU 0
 1354  0000000                   WITH_VS1A_PCSPC8				EQU 0
 1355  0000000                   WITH_VS1B_PCSPC8				EQU 0
 1356  0000000                   WITH_VS2A_PCSPC8				EQU 0
 1357  0000000                   WITH_VS2B_PCSPC8				EQU 0





 1358  0000000                   
 1359  0000000                   ; I-f there is HQ melody, disable TONE save nothing.
 1360  0000000                   WITH_VS0A_TONE					EQU 0
 1361  0000000                   WITH_VS0B_TONE					EQU 0
 1362  0000000                   WITH_VS1A_TONE					EQU 0
 1363  0000000                   WITH_VS1B_TONE					EQU 0
 1364  0000000                   WITH_VS2A_TONE					EQU 0
 1365  0000000                   WITH_VS2B_TONE					EQU 0
 1366  0000000                   
 1367  0000000                   ; W566/W588(PC8) type HQ, disable to save code size.
 1368  0000000                   WITH_VS0A_HQPC8					EQU 0
 1369  0000000                   WITH_VS0B_HQPC8					EQU 0
 1370  0000000                   WITH_VS1A_HQPC8					EQU 0
 1371  0000000                   WITH_VS1B_HQPC8					EQU 0
 1372  0000000                   WITH_VS2A_HQPC8					EQU 0
 1373  0000000                   WITH_VS2B_HQPC8					EQU 0
 1374  0000000                   
 1375  0000000                   WITH_CH0_EVO					EQU 0
 1376  0000000                   WITH_CH1_EVO					EQU 0
 1377  0000000                   WITH_CH2_EVO					EQU 0
 1378  0000000                   
 1379  0000000                   
 1380  0000000                   WITH_FILTER					EQU 0
 1381  0000000                   WITH_NOISE_SHAPING				EQU 0
 1382  0000000                   ;NoiseShapingEnableCondition
 1383  0000000                   ;0 - not support noise shaping
 1384  0000000                   ;1 - support noise shaping
 1385  0000000                   ;2 - only PWM support shaping
 1386  0000000                   
 1387  0000000                   WITH_DAC_ENABLE					EQU 0
 1388  0000000                   WITH_SP0XL_RESOLUTION				EQU 1
 1389  0000000                   ; 1 - 16 bit
 1390  0000000                   ; 2 - 14 bit
 1391  0000000                   ; 3 - 12 bit
 1392  0000000                   WITH_SPEN_EFFECTIVE_BITS       			EQU 7
 1393  0000000                   ;X X X X PWM_NS DAC_MA PWM DAC  
 1394  0000000                   WITH_RDPC_VALUE         			EQU 0
 1395  0000000                   
 1396  0000000                   WITH_MS_CODA					EQU 0
 1397  0000000                   WITH_SP_MIDI_SIMUL 				EQU 1	
 1398  0000000                   ;SpeechMidiSimultaneously
 1399  0000000                   WITH_SP_SKIP                       		EQU 1
 1400  0000000                   WITH_SP_GLOBAL_SR                       	EQU 1
 1401  0000000                   
 1402  0000000                   WITH_RAM_OVER_STACK				EQU 	0
 1403  0000000                   WITH_STACK_SIZE					EQU	32
 1404  0000000                   WITH_HWENGINE_SHARED_RAM_SIZE			EQU	0
 1405  0000000                   
 1406  0000000                   TONE_2KHZ_TMC	EQU 7
 1407  0000000                   TONE_2KHZ_TMV 	EQU 159
 1408  0000000                   
 1409  0000000                   WITH_COLOR_FLY_CURVENUMS	EQU 0
 1410  0000000                   
 1411  0000000                   WITH_SPI_GPIO                                   EQU     0
 1412  0000000                   WITH_SPI_SPIO                                   EQU     0
 1413  0000000                   ;SPIOEnable
 1414  0000000                   





 1415  0000000                   SPI_COMMAND_ENABLE    	EQU	0
 1416  0000000                   SPI_CLOCK_RATE        	EQU	0
 1417  0000000                   I2C_COMMAND_ENABLE	EQU	0
 1418  0000000                   
 1419  0000000                   WITH_ISP_READ_WRITE	EQU	1
 1420  0000000                   WITH_ISP_UPDATE		EQU 	1
 1421  0000000                   WITH_PROTECTION_PAGE_UPDATE	EQU 0
 1422  0000000                   WITH_BOOT_LOADER	EQU 	0
 1423  0000000                   
 1424  0000000                   BLOCK_NUM                       EQU         128
 1425  0000000                   
 1426  0000000                   PROTECTION_PAGE_WORKING_MODE    EQU        1
 1427  0000000                   
 1428  0000000                   
 1429  0000000                   WITH_PSF_PROJECT	EQU	0
 1430  0000000                   WITH_PLAY_INDEX     EQU 0
 1431  0000000                   
 1432  0000000                   ; IO EXPANDER SETTING
 1433  0000000                   N55P_DEVICE_NUM		EQU       0          
 1434  0000000                   ;N55PDeviceNum:0/1/2
 1435  0000000                   N55P_DEVICE_UIO_USED	EQU       00H
 1436  0000000                   N55P_DEVICE0_CNSTA    EQU       00H          
 1437  0000000                   N55P_DEVICE0_CNSTB    EQU       00H          
 1438  0000000                   N55P_DEVICE0_CNSTC    EQU       00H          
 1439  0000000                   N55P_DEVICE0_PCKAB    EQU       00H     
 1440  0000000                   N55P_DEVICE0_PCKCD    EQU       00H         
 1441  0000000                   
 1442  0000000                   N55P_DEVICE1_CNSTA    EQU       00H          
 1443  0000000                   N55P_DEVICE1_CNSTB    EQU       00H          
 1444  0000000                   N55P_DEVICE1_CNSTC    EQU       00H          
 1445  0000000                   N55P_DEVICE1_PCKAB    EQU       00H     
 1446  0000000                   N55P_DEVICE1_PCKCD    EQU       00H     
 1447  0000000                   
 1448  0000000                   AVAILABLE_DPD_RAM     EQU       20H
 1449  0000000                   
 1450  0000000                   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 1451  0000000                   ; Cap-Sensor Library
 1452  0000000                   ; 
 1453  0000000                   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 1454  0000000                   WITH_FW_CAP_SENSOR_KEYS         EQU 0
 1455  0000000                   
 1456  0000000                   WITH_TOUCH_WAKEUP_EN            EQU 0
 1457  0000000                   
 1458  0000000                   TOUCH_WAKEUP_EN                 EQU 0
 1459  0000000                   
 1460  0000000                   WITH_TOUCH_WAKEUP_KEYNUMS       EQU 0
 1461  0000000                   
 1462  0000000                   CAP_SENSOR_CURRENT_SOURCE       EQU 00H
 1463  0000000                   
 1464  0000000                   CAP_SENSOR_SLEEP_TIME           EQU 00H
 1465  0000000                   
 1466  0000000                   CAP_SENSOR_TMG_DIV              EQU 00H
 1467  0000000                   
 1468  0000000                   CAP_GET_INIT_AVG                EQU 0
 1469  0000000                   
 1470  0000000                   CAP_AVG_WITH_CHECK_BUSY         EQU 0
 1471  0000000                   





 1472  0000000                   
 1473  0000000                   WITH_FW_SEN_OPTION_PIN           EQU         0
 1474  0000000                   CAP_Sensitivity_Sel_Num           EQU         0
 1475  0000000                   WITH_CAPSENSOR_MULTISENTABLE     EQU         1
 1476  0000000                   
 1477  0000000                   CAP_SENSOR_DEBOUNCE             EQU          00H
 1478  0000000                   
 1479  0000000                   CAP_SENSOR_TBL0_KEY0_TH              EQU 100
 1480  0000000                   CAP_SENSOR_TBL0_KEY1_TH              EQU 100
 1481  0000000                   CAP_SENSOR_TBL0_KEY2_TH              EQU 100
 1482  0000000                   CAP_SENSOR_TBL0_KEY3_TH              EQU 100
 1483  0000000                   CAP_SENSOR_TBL0_KEY4_TH              EQU 100
 1484  0000000                   CAP_SENSOR_TBL0_KEY5_TH              EQU 100
 1485  0000000                   CAP_SENSOR_TBL0_KEY6_TH              EQU 100
 1486  0000000                   CAP_SENSOR_TBL0_KEY7_TH              EQU 100
 1487  0000000                   CAP_SENSOR_TBL0_KEY8_TH              EQU 100
 1488  0000000                   CAP_SENSOR_TBL0_KEY9_TH              EQU 100
 1489  0000000                   CAP_SENSOR_TBL0_KEY10_TH             EQU 100
 1490  0000000                   CAP_SENSOR_TBL0_KEY11_TH             EQU 100
 1491  0000000                   CAP_SENSOR_TBL0_KEY12_TH             EQU 100
 1492  0000000                   CAP_SENSOR_TBL0_KEY13_TH             EQU 100
 1493  0000000                   CAP_SENSOR_TBL0_KEY14_TH             EQU 100
 1494  0000000                   CAP_SENSOR_TBL0_KEY15_TH             EQU 100
 1495  0000000                   CAP_SENSOR_TBL0_KEY16_TH             EQU 100
 1496  0000000                   CAP_SENSOR_TBL0_KEY17_TH             EQU 100
 1497  0000000                   CAP_SENSOR_TBL0_KEY18_TH             EQU 100
 1498  0000000                   CAP_SENSOR_TBL0_KEY19_TH             EQU 100
 1499  0000000                   CAP_SENSOR_TBL0_KEY20_TH             EQU 100
 1500  0000000                   CAP_SENSOR_TBL0_KEY21_TH             EQU 100
 1501  0000000                   CAP_SENSOR_TBL0_KEY22_TH             EQU 100
 1502  0000000                   CAP_SENSOR_TBL0_KEY23_TH             EQU 100
 1503  0000000                   
 1504  0000000                   CAP_SENSOR_TBL0_KEY0_TH_UNTOUCHED              EQU 50
 1505  0000000                   CAP_SENSOR_TBL0_KEY1_TH_UNTOUCHED              EQU 50
 1506  0000000                   CAP_SENSOR_TBL0_KEY2_TH_UNTOUCHED              EQU 50
 1507  0000000                   CAP_SENSOR_TBL0_KEY3_TH_UNTOUCHED              EQU 50
 1508  0000000                   CAP_SENSOR_TBL0_KEY4_TH_UNTOUCHED              EQU 50
 1509  0000000                   CAP_SENSOR_TBL0_KEY5_TH_UNTOUCHED              EQU 50
 1510  0000000                   CAP_SENSOR_TBL0_KEY6_TH_UNTOUCHED              EQU 50
 1511  0000000                   CAP_SENSOR_TBL0_KEY7_TH_UNTOUCHED              EQU 50
 1512  0000000                   CAP_SENSOR_TBL0_KEY8_TH_UNTOUCHED              EQU 50
 1513  0000000                   CAP_SENSOR_TBL0_KEY9_TH_UNTOUCHED              EQU 50
 1514  0000000                   CAP_SENSOR_TBL0_KEY10_TH_UNTOUCHED             EQU 50
 1515  0000000                   CAP_SENSOR_TBL0_KEY11_TH_UNTOUCHED             EQU 50
 1516  0000000                   CAP_SENSOR_TBL0_KEY12_TH_UNTOUCHED             EQU 50
 1517  0000000                   CAP_SENSOR_TBL0_KEY13_TH_UNTOUCHED             EQU 50
 1518  0000000                   CAP_SENSOR_TBL0_KEY14_TH_UNTOUCHED             EQU 50
 1519  0000000                   CAP_SENSOR_TBL0_KEY15_TH_UNTOUCHED             EQU 50
 1520  0000000                   CAP_SENSOR_TBL0_KEY16_TH_UNTOUCHED             EQU 50
 1521  0000000                   CAP_SENSOR_TBL0_KEY17_TH_UNTOUCHED             EQU 50
 1522  0000000                   CAP_SENSOR_TBL0_KEY18_TH_UNTOUCHED             EQU 50
 1523  0000000                   CAP_SENSOR_TBL0_KEY19_TH_UNTOUCHED             EQU 50
 1524  0000000                   CAP_SENSOR_TBL0_KEY20_TH_UNTOUCHED             EQU 50
 1525  0000000                   CAP_SENSOR_TBL0_KEY21_TH_UNTOUCHED             EQU 50
 1526  0000000                   CAP_SENSOR_TBL0_KEY22_TH_UNTOUCHED             EQU 50
 1527  0000000                   CAP_SENSOR_TBL0_KEY23_TH_UNTOUCHED             EQU 50
 1528  0000000                   





 1529  0000000                   CAP_SENSOR_TBL0_KEY0_TH_NOISEFILTER              EQU 12
 1530  0000000                   CAP_SENSOR_TBL0_KEY1_TH_NOISEFILTER              EQU 12
 1531  0000000                   CAP_SENSOR_TBL0_KEY2_TH_NOISEFILTER              EQU 12
 1532  0000000                   CAP_SENSOR_TBL0_KEY3_TH_NOISEFILTER              EQU 12
 1533  0000000                   CAP_SENSOR_TBL0_KEY4_TH_NOISEFILTER              EQU 12
 1534  0000000                   CAP_SENSOR_TBL0_KEY5_TH_NOISEFILTER              EQU 12
 1535  0000000                   CAP_SENSOR_TBL0_KEY6_TH_NOISEFILTER              EQU 12
 1536  0000000                   CAP_SENSOR_TBL0_KEY7_TH_NOISEFILTER              EQU 12
 1537  0000000                   CAP_SENSOR_TBL0_KEY8_TH_NOISEFILTER              EQU 12
 1538  0000000                   CAP_SENSOR_TBL0_KEY9_TH_NOISEFILTER              EQU 12
 1539  0000000                   CAP_SENSOR_TBL0_KEY10_TH_NOISEFILTER             EQU 12
 1540  0000000                   CAP_SENSOR_TBL0_KEY11_TH_NOISEFILTER             EQU 12
 1541  0000000                   CAP_SENSOR_TBL0_KEY12_TH_NOISEFILTER             EQU 12
 1542  0000000                   CAP_SENSOR_TBL0_KEY13_TH_NOISEFILTER             EQU 12
 1543  0000000                   CAP_SENSOR_TBL0_KEY14_TH_NOISEFILTER             EQU 12
 1544  0000000                   CAP_SENSOR_TBL0_KEY15_TH_NOISEFILTER             EQU 12
 1545  0000000                   CAP_SENSOR_TBL0_KEY16_TH_NOISEFILTER             EQU 12
 1546  0000000                   CAP_SENSOR_TBL0_KEY17_TH_NOISEFILTER             EQU 12
 1547  0000000                   CAP_SENSOR_TBL0_KEY18_TH_NOISEFILTER             EQU 12
 1548  0000000                   CAP_SENSOR_TBL0_KEY19_TH_NOISEFILTER             EQU 12
 1549  0000000                   CAP_SENSOR_TBL0_KEY20_TH_NOISEFILTER             EQU 12
 1550  0000000                   CAP_SENSOR_TBL0_KEY21_TH_NOISEFILTER             EQU 12
 1551  0000000                   CAP_SENSOR_TBL0_KEY22_TH_NOISEFILTER             EQU 12
 1552  0000000                   CAP_SENSOR_TBL0_KEY23_TH_NOISEFILTER             EQU 12
 1553  0000000                   
 1554  0000000                   
 1555  0000000                   AVG_ADJ_CNT_NUM               EQU 0
 1556  0000000                   
 1557  0000000                   
 1558  0000000                   CAP_SENSOR_SEL_PIN0     EQU 0
 1559  0000000                   CAP_SENSOR_SEL_PIN1     EQU 0
 1560  0000000                   CAP_SENSOR_SEL_PIN2     EQU 0
 1561  0000000                   CAP_SENSOR_SEL_PIN3     EQU 0
 1562  0000000                   
 1563  0000000                   
 1564  0000000                   CAP_RTP_DISABLE         EQU 0
 1565  0000000                   CAP_CHARGE_MODE         EQU 0
 1566  0000000                   CAP_SKIP_FIRST_SUM      EQU 1
 1567  0000000                   
 1568  0000000                   ;;;; Selection Pin for sleep time table
 1569  0000000                   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 1570  0000000                   CAP_SleepTime_Sel_Num       EQU 0
 1571  0000000                   WITH_SLEEP_SEL_PIN_NUM      EQU 0
 1572  0000000                   
 1573  0000000                   CAP_SENSOR_ST_SEL_PIN0     EQU 0
 1574  0000000                   CAP_SENSOR_ST_SEL_PIN1     EQU 0
 1575  0000000                   CAP_SENSOR_ST_SEL_PIN2     EQU 0
 1576  0000000                   CAP_SENSOR_ST_SEL_PIN3     EQU 0
 1577  0000000                   
 1578  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX0              EQU 79
 1579  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX1              EQU 0
 1580  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX2              EQU 0
 1581  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX3              EQU 0
 1582  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX4              EQU 0
 1583  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX5              EQU 0
 1584  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX6              EQU 0
 1585  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX7              EQU 0





 1586  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX8              EQU 0
 1587  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX9              EQU 0
 1588  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX10             EQU 0
 1589  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX11             EQU 0
 1590  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX12             EQU 0
 1591  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX13             EQU 0
 1592  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX14             EQU 0
 1593  0000000                   CAP_SENSOR_SLEEP_TIME_INDEX15             EQU 0
 1594  0000000                   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 1595  0000000                   
 1596  0000000                   CAP_SCAN_NUBER          EQU 16
 1597  0000000                   ;;;; Cap Sensor
 1598  0000000                   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 1599  0000000                   CAP_SENSOR_KEY0_BP              EQU 0
 1600  0000000                   CAP_SENSOR_KEY1_BP              EQU 0
 1601  0000000                   CAP_SENSOR_KEY2_BP              EQU 0
 1602  0000000                   CAP_SENSOR_KEY3_BP              EQU 0
 1603  0000000                   CAP_SENSOR_KEY4_BP              EQU 0
 1604  0000000                   CAP_SENSOR_KEY5_BP              EQU 0
 1605  0000000                   CAP_SENSOR_KEY6_BP              EQU 0
 1606  0000000                   CAP_SENSOR_KEY7_BP              EQU 0
 1607  0000000                   CAP_SENSOR_KEY8_BP              EQU 0
 1608  0000000                   CAP_SENSOR_KEY9_BP              EQU 0
 1609  0000000                   CAP_SENSOR_KEY10_BP             EQU 0
 1610  0000000                   CAP_SENSOR_KEY11_BP             EQU 0
 1611  0000000                   CAP_SENSOR_KEY12_BP             EQU 0
 1612  0000000                   CAP_SENSOR_KEY13_BP             EQU 0
 1613  0000000                   CAP_SENSOR_KEY14_BP             EQU 0
 1614  0000000                   CAP_SENSOR_KEY15_BP             EQU 0
 1615  0000000                   CAP_SENSOR_KEY16_BP             EQU 0
 1616  0000000                   CAP_SENSOR_KEY17_BP             EQU 0
 1617  0000000                   CAP_SENSOR_KEY18_BP             EQU 0
 1618  0000000                   CAP_SENSOR_KEY19_BP             EQU 0
 1619  0000000                   CAP_SENSOR_KEY20_BP             EQU 0
 1620  0000000                   CAP_SENSOR_KEY21_BP             EQU 0
 1621  0000000                   CAP_SENSOR_KEY22_BP             EQU 0
 1622  0000000                   CAP_SENSOR_KEY23_BP             EQU 0
 1623  0000000                   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 1624  0000000                   
 1625  0000000                   
 1626  0000000                   ;;;; UART
 1627  0000000                   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 1628  0000000                   WITH_UART_TX                     EQU         0
 1629  0000000                   WITH_UART_RX                     EQU         0
 1630  0000000                   WITH_UART_SWITCH                 EQU         0
 1631  0000000                   UART_BAUDRATE_DIVIDER            EQU         354
 1632  0000000                   TDLY_VALUE                       EQU         0
 1633  0000000                   PARITY_BIT                       EQU         0
 1634  0000000                   UART_TXDLY_CNT                   EQU         3
 1635  0000000                   
 1636  0000000                   
 1637  0000000                   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 1638  0000000                   
 1639  0000000                   ;;;; Address LED
 1640  0000000                   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 1641  0000000                   WITH_SLD_ENABLE			EQU		00H
 1642  0000000                   WITH_SLD_SWITCH 		EQU		00H





 1643  0000000                   SLD_CTL_TYPE			EQU		00H
 1644  0000000                   SLD_ORDER_BIT			EQU		01H
 1645  0000000                   SLD_ONE_WIRE_HIDA0		EQU		06H
 1646  0000000                   SLD_ONE_WIRE_HIDA1		EQU		0CH
 1647  0000000                   SLD_ONE_WIRE_LODA0		EQU		12H
 1648  0000000                   SLD_ONE_WIRE_LODA1		EQU		0CH
 1649  0000000                   SLD_TWO_WIRE_CLK_RATE	EQU		00H         
 1650  0000000                   
 1651  0000000                   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 1652  0000000                   
 1653  0000000                   	INCLUDE	"D:\SOURCECODE\_AVERY_M031\M031BSP_NSP_TWOWIRESAMPLE\NSP_PROJECT\RINGRING_NSP960B\CPUIF\RAMVAR_PUBLIC.INI.APP"
 1654  0000000                   	PUBLIC CH_STATUS_SP
 1655  0000000                   	PUBLIC CH_STATUS1_SP
 1656  0000000                   	PUBLIC CH_ISR_SYNTH_START_SP
 1657  0000000                   	PUBLIC CH_PREVIOUS_PCM_VOL_SP
 1658  0000000                   	PUBLIC CH_PREVIOUS_PCM_SP
 1659  0000000                   	PUBLIC CH_R_FINAL_VOLUME_SP
 1660  0000000                   	PUBLIC CH_PAUSE_PCM_SP
 1661  0000000                   	PUBLIC CH_DATA_ADDR_SP
 1662  0000000                   	PUBLIC CH_RAMP_BUF1_SP
 1663  0000000                   	PUBLIC CH_DATA_BANK_SP
 1664  0000000                   	PUBLIC CH_PHRASE_REPEAT_NUM_SP
 1665  0000000                   	PUBLIC CH_SP_PCM_TEMP_SP
 1666  0000000                   	PUBLIC CH_SENTENCE_START_ADDR_SP
 1667  0000000                   	PUBLIC CH_RAMP_BUF2_SP
 1668  0000000                   	PUBLIC CH_SENTENCE_START_BANK_SP
 1669  0000000                   	PUBLIC CH_VOL_MUL_ADDR_SP
 1670  0000000                   	PUBLIC CH_STATUS_SIL
 1671  0000000                   	PUBLIC CH_STATUS1_SIL
 1672  0000000                   	PUBLIC CH_ISR_SYNTH_START_SIL
 1673  0000000                   	PUBLIC CH_PREVIOUS_PCM_VOL_SIL
 1674  0000000                   	PUBLIC CH_OLD_SAMPLE_SIL
 1675  0000000                   	PUBLIC CH_R_FINAL_VOLUME_SIL
 1676  0000000                   	PUBLIC CH_PAUSE_PCM_SIL
 1677  0000000                   	PUBLIC CH_DATA_ADDR_SIL
 1678  0000000                   	PUBLIC CH_DATA_BANK_SIL
 1679  0000000                   	PUBLIC CH_PHRASE_REPEAT_NUM_SIL
 1680  0000000                   	PUBLIC CH_SP_PCM_TEMP_SIL
 1681  0000000                   	PUBLIC CH_SENTENCE_START_ADDR_SIL
 1682  0000000                   	PUBLIC CH_SENTENCE_START_BANK_SIL
 1683  0000000                   	PUBLIC CH_COUNTER_SIL
 1684  0000000                   	PUBLIC CH_COUNTER2_SIL
 1685  0000000                   	PUBLIC CH_STATUS_MS
 1686  0000000                   	PUBLIC CH_STATUS_EVO
 1687  0000000                   	PUBLIC GLOBAL_PLAY
 1688  0000000                   	PUBLIC COMMON_FLAG
 1689  0000000                   	PUBLIC COMMON_FLAG2
 1690  0000000                   	PUBLIC SUB_INDEX
 1691  0000000                   	PUBLIC COMMAND_OPERAND
 1692  0000000                   	PUBLIC RAMP_CHANNEL
 1693  0000000                   	PUBLIC RAMP_OPERAND
 1694  0000000                   	PUBLIC TEMP_REG1
 1695  0000000                   	PUBLIC TEMP_REG2
 1696  0000000                   	PUBLIC SP_TEMP
 1697  0000000                   	PUBLIC GLOBAL_VOL_SP0
 1698  0000000                   	PUBLIC GLOBAL_VOL_SP1
 1699  0000000                   	PUBLIC GLOBAL_VOL_SP2





 1700  0000000                   	PUBLIC CH1_GLOBAL_TMC
 1701  0000000                   	PUBLIC CH1_GLOBAL_TMV
 1702  0000000                   	PUBLIC CH2_GLOBAL_TMC
 1703  0000000                   	PUBLIC CH2_GLOBAL_TMV
 1704  0000000                   	PUBLIC CH3_GLOBAL_TMC
 1705  0000000                   	PUBLIC CH3_GLOBAL_TMV
 1706  0000000                   	PUBLIC MS_START
 1707  0000000                   	PUBLIC CH_SYNTH_CHANNEL0
 1708  0000000                   	PUBLIC CH_SYNTH_CHANNEL1
 1709  0000000                   	PUBLIC CH_SYNTH_CHANNEL2
 1710  0000000                   	PUBLIC GLOBAL_CHANNEL_VOLM0
 1711  0000000                   	PUBLIC GLOBAL_CHANNEL_VOLM1
 1712  0000000                   	PUBLIC GLOBAL_CHANNEL_VOLM2
 1713  0000000                   	PUBLIC GLOBAL_CHANNEL_INS0
 1714  0000000                   	PUBLIC GLOBAL_CHANNEL_INS1
 1715  0000000                   	PUBLIC GLOBAL_CHANNEL_INS2
 1716  0000000                   	PUBLIC CH1_PLAY_SEGMENT
 1717  0000000                   	PUBLIC CH2_PLAY_SEGMENT
 1718  0000000                   	PUBLIC CH3_PLAY_SEGMENT
 1719  0000000                   	PUBLIC ISP_TEMP
 1720  0000000                   	PUBLIC USER_START
 1721  0000000                   	PUBLIC DPD_USER_START
 1722  0000000                   
 1723  0000000                   	INCLUDE	"D:\SOURCECODE\_AVERY_M031\M031BSP_NSP_TWOWIRESAMPLE\NSP_PROJECT\RINGRING_NSP960B\CPUIF\RAMVAR.INI.APP"
 1724  0000000                   ;  1WITH_SPI_SWITCH
 1725  0000000                   ;  0WITH_CHIP_SERIES
 1726  0000000                   ;  1WITH_VOL_ADJ
 1727  0000000                   ;  0WITH_MULTI_CHANNEL
 1728  0000000                   ;  0WITH_VOL_REDUCE
 1729  0000000                   ;  0WITH_16BIT_MODE
 1730  0000000                   ;  1WITH_32K_BANK
 1731  0000000                   ;  0WITH_T_BUFFER
 1732  0000000                   ;  0WITH_READ_DATA_TYPE
 1733  0000000                   ;  0WITH_PCM_OUTPUT_TYPE
 1734  0000000                   ;  2WITH_PCM_OUTPUT_SIZE
 1735  0000000                   ;  0WITH_CMD
 1736  0000000                   ;  0WITH_FW_MIXER
 1737  0000000                   ;  2WITH_COMPRESSED_MIDI
 1738  0000000                   ;  0WITH_MULTIPLIER
 1739  0000000                   ;  1WITH_HEAD_TAIL_PROCESS
 1740  0000000                   ;  0WITH_ALL_MIXER_SFR
 1741  0000000                   ;  1WITH_ISR_VS0A
 1742  0000000                   ;  0WITH_ISR_VS0B
 1743  0000000                   ;  0WITH_ISR_VS1A
 1744  0000000                   ;  0WITH_ISR_VS1B
 1745  0000000                   ;  0WITH_ISR_VS2A
 1746  0000000                   ;  0WITH_ISR_VS2B
 1747  0000000                   ;  1WITH_VS0A
 1748  0000000                   ;  0WITH_VS0B
 1749  0000000                   ;  0WITH_VS1A
 1750  0000000                   ;  0WITH_VS1B
 1751  0000000                   ;  0WITH_VS2A
 1752  0000000                   ;  0WITH_VS2B
 1753  0000000                   ;  0WITH_VS0C
 1754  0000000                   ;  0WITH_VS0D
 1755  0000000                   ;  0WITH_VS3
 1756  0000000                   ;  0WITH_VS4





 1757  0000000                   ;  0WITH_VS5
 1758  0000000                   ;  0WITH_VS6
 1759  0000000                   ;  0WITH_VS7
 1760  0000000                   ;  0WITH_VS8
 1761  0000000                   ;  0WITH_VS9
 1762  0000000                   ;  0WITH_VSA
 1763  0000000                   ;  0WITH_VSB
 1764  0000000                   ;  0WITH_VSC
 1765  0000000                   ;  0WITH_VSD
 1766  0000000                   ;  0WITH_VSE
 1767  0000000                   ;  0WITH_VSF
 1768  0000000                   ;  0WITH_MD4
 1769  0000000                   ;  0WITH_HNM4
 1770  0000000                   ;  0WITH_NM4
 1771  0000000                   ;  0WITH_NM4S
 1772  0000000                   ;  0WITH_MDM
 1773  0000000                   ;  0WITH_APM
 1774  0000000                   ;  0WITH_LP8
 1775  0000000                   ;  0WITH_VC4
 1776  0000000                   ;  0WITH_MDR
 1777  0000000                   ;  0WITH_E2A
 1778  0000000                   ;  0WITH_EMM
 1779  0000000                   ;  0WITH_MD6
 1780  0000000                   ;  0WITH_P10
 1781  0000000                   ;  0WITH_PC8
 1782  0000000                   ;  1WITH_SIL
 1783  0000000                   ;  0WITH_VMDPC8
 1784  0000000                   ;  0WITH_PCSPC8
 1785  0000000                   ;  0WITH_TONE
 1786  0000000                   ;  0WITH_HQPC8
 1787  0000000                   ;  0WITH_HQ567
 1788  0000000                   ;  0WITH_VMD567
 1789  0000000                   ;  0WITH_HQ567_HW
 1790  0000000                   ;  0WITH_HQ569_HW
 1791  0000000                   ;  0WITH_YAD
 1792  0000000                   ;  0WITH_P16
 1793  0000000                   ;  0WITH_VC8
 1794  0000000                   ;  0WITH_PC8VMDPCS
 1795  0000000                   ;  0WITH_LP8VMDPCS
 1796  0000000                   ;  0WITH_P16VMDPCS
 1797  0000000                   ;  0WITH_POLYPHONY
 1798  0000000                   ;  0WITH_MIDI_CHANNEL
 1799  0000000                   ;  0WITH_VOL_ADJ_MS
 1800  0000000                   ;  1WITH_PAUSE_RESUME
 1801  0000000                   ;  0WITH_CHANNEL_PRESSURE
 1802  0000000                   ;  0WITH_NOTE_OFFSET
 1803  0000000                   ;  0WITH_CHANGE_TEMPO
 1804  0000000                   ;  1WITH_ONEKEYONENOTE
 1805  0000000                   ;  0WITH_VELOCITY
 1806  0000000                   ;  0WITH_MS_EXT_MIDI
 1807  0000000                   ;  0WITH_SYNC_CH1_MS
 1808  0000000                   ;  0WITH_GLOBAL_CHANNEL_VOLM
 1809  0000000                   ;  0WITH_GLOBAL_CHANNEL_INS
 1810  0000000                   ;  0WITH_PITCH_BEND
 1811  0000000                   ;  0WITH_VIBRATO
 1812  0000000                   ;  0WITH_MODULATION_DEPTH
 1813  0000000                   ;  0WITH_CHANNEL_SUSTAIN





 1814  0000000                   ;  0WITH_SP_MIDI
 1815  0000000                   ;  0WITH_PERCUSSION
 1816  0000000                   ;  0WITH_DYNAMIC_CH
 1817  0000000                   ;  0WITH_MS_ENABLE_CHANNEL
 1818  0000000                   ;  1WITH_SP
 1819  0000000                   ;  0WITH_MS
 1820  0000000                   ;  0WITH_EVO
 1821  0000000                   ;  1WITH_SPEAKER_OUTPUT_TYPE
 1822  0000000                   ;  0WITH_SPEAKER_SWITCH
 1823  0000000                   ;  0WITH_SIM_SP
 1824  0000000                   ;  1WITH_SIM_TYPE
 1825  0000000                   ;  0WITH_EXT32MBIT
 1826  0000000                   ;  0WITH_EXT64M_SPI
 1827  0000000                   ;  1WITH_SP_NUM
 1828  0000000                   ;  0WITH_ONE_HQ
 1829  0000000                   ;  1WITH_PLAYE
 1830  0000000                   ;  1WITH_VS0A_SIL
 1831  0000000                   ;  0WITH_VS0B_SIL
 1832  0000000                   ;  0WITH_VS1A_SIL
 1833  0000000                   ;  0WITH_VS1B_SIL
 1834  0000000                   ;  0WITH_VS2A_SIL
 1835  0000000                   ;  0WITH_VS2B_SIL
 1836  0000000                   ;  0WITH_VS0A_MD4
 1837  0000000                   ;  0WITH_VS0B_MD4
 1838  0000000                   ;  0WITH_VS1A_MD4
 1839  0000000                   ;  0WITH_VS1B_MD4
 1840  0000000                   ;  0WITH_VS2A_MD4
 1841  0000000                   ;  0WITH_VS2B_MD4
 1842  0000000                   ;  0WITH_VS0A_HNM4
 1843  0000000                   ;  0WITH_VS0B_HNM4
 1844  0000000                   ;  0WITH_VS1A_HNM4
 1845  0000000                   ;  0WITH_VS1B_HNM4
 1846  0000000                   ;  0WITH_VS2A_HNM4
 1847  0000000                   ;  0WITH_VS2B_HNM4
 1848  0000000                   ;  0WITH_VS0A_NM4
 1849  0000000                   ;  0WITH_VS0B_NM4
 1850  0000000                   ;  0WITH_VS1A_NM4
 1851  0000000                   ;  0WITH_VS1B_NM4
 1852  0000000                   ;  0WITH_VS2A_NM4
 1853  0000000                   ;  0WITH_VS2B_NM4
 1854  0000000                   ;  0WITH_VS0A_NM4S
 1855  0000000                   ;  0WITH_VS0B_NM4S
 1856  0000000                   ;  0WITH_VS1A_NM4S
 1857  0000000                   ;  0WITH_VS1B_NM4S
 1858  0000000                   ;  0WITH_VS2A_NM4S
 1859  0000000                   ;  0WITH_VS2B_NM4S
 1860  0000000                   ;  0WITH_VS0A_MDM
 1861  0000000                   ;  0WITH_VS0B_MDM
 1862  0000000                   ;  0WITH_VS1A_MDM
 1863  0000000                   ;  0WITH_VS1B_MDM
 1864  0000000                   ;  0WITH_VS2A_MDM
 1865  0000000                   ;  0WITH_VS2B_MDM
 1866  0000000                   ;  0WITH_VS0A_APM
 1867  0000000                   ;  0WITH_VS0B_APM
 1868  0000000                   ;  0WITH_VS1A_APM
 1869  0000000                   ;  0WITH_VS1B_APM
 1870  0000000                   ;  0WITH_VS2A_APM





 1871  0000000                   ;  0WITH_VS2B_APM
 1872  0000000                   ;  0WITH_VS0A_LP8
 1873  0000000                   ;  0WITH_VS0B_LP8
 1874  0000000                   ;  0WITH_VS1A_LP8
 1875  0000000                   ;  0WITH_VS1B_LP8
 1876  0000000                   ;  0WITH_VS2A_LP8
 1877  0000000                   ;  0WITH_VS2B_LP8
 1878  0000000                   ;  0WITH_VS0A_VC4
 1879  0000000                   ;  0WITH_VS0B_VC4
 1880  0000000                   ;  0WITH_VS1A_VC4
 1881  0000000                   ;  0WITH_VS1B_VC4
 1882  0000000                   ;  0WITH_VS2A_VC4
 1883  0000000                   ;  0WITH_VS2B_VC4
 1884  0000000                   ;  0WITH_VS0A_MDR
 1885  0000000                   ;  0WITH_VS0B_MDR
 1886  0000000                   ;  0WITH_VS1A_MDR
 1887  0000000                   ;  0WITH_VS1B_MDR
 1888  0000000                   ;  0WITH_VS2A_MDR
 1889  0000000                   ;  0WITH_VS2B_MDR
 1890  0000000                   ;  0WITH_VS0A_E2A
 1891  0000000                   ;  0WITH_VS0B_E2A
 1892  0000000                   ;  0WITH_VS1A_E2A
 1893  0000000                   ;  0WITH_VS1B_E2A
 1894  0000000                   ;  0WITH_VS2A_E2A
 1895  0000000                   ;  0WITH_VS2B_E2A
 1896  0000000                   ;  0WITH_VS0A_EMM
 1897  0000000                   ;  0WITH_VS0B_EMM
 1898  0000000                   ;  0WITH_VS1A_EMM
 1899  0000000                   ;  0WITH_VS1B_EMM
 1900  0000000                   ;  0WITH_VS2A_EMM
 1901  0000000                   ;  0WITH_VS2B_EMM
 1902  0000000                   ;  0WITH_VS0A_MD6
 1903  0000000                   ;  0WITH_VS0B_MD6
 1904  0000000                   ;  0WITH_VS1A_MD6
 1905  0000000                   ;  0WITH_VS1B_MD6
 1906  0000000                   ;  0WITH_VS2A_MD6
 1907  0000000                   ;  0WITH_VS2B_MD6
 1908  0000000                   ;  0WITH_VS0A_P10
 1909  0000000                   ;  0WITH_VS0B_P10
 1910  0000000                   ;  0WITH_VS1A_P10
 1911  0000000                   ;  0WITH_VS1B_P10
 1912  0000000                   ;  0WITH_VS2A_P10
 1913  0000000                   ;  0WITH_VS2B_P10
 1914  0000000                   ;  0WITH_VS0A_PC8
 1915  0000000                   ;  0WITH_VS0B_PC8
 1916  0000000                   ;  0WITH_VS1A_PC8
 1917  0000000                   ;  0WITH_VS1B_PC8
 1918  0000000                   ;  0WITH_VS2A_PC8
 1919  0000000                   ;  0WITH_VS2B_PC8
 1920  0000000                   ;  0WITH_VS0A_VMDPC8
 1921  0000000                   ;  0WITH_VS0B_VMDPC8
 1922  0000000                   ;  0WITH_VS1A_VMDPC8
 1923  0000000                   ;  0WITH_VS1B_VMDPC8
 1924  0000000                   ;  0WITH_VS2A_VMDPC8
 1925  0000000                   ;  0WITH_VS2B_VMDPC8
 1926  0000000                   ;  0WITH_VS0A_PCSPC8
 1927  0000000                   ;  0WITH_VS0B_PCSPC8





 1928  0000000                   ;  0WITH_VS1A_PCSPC8
 1929  0000000                   ;  0WITH_VS1B_PCSPC8
 1930  0000000                   ;  0WITH_VS2A_PCSPC8
 1931  0000000                   ;  0WITH_VS2B_PCSPC8
 1932  0000000                   ;  0WITH_VS0A_TONE
 1933  0000000                   ;  0WITH_VS0B_TONE
 1934  0000000                   ;  0WITH_VS1A_TONE
 1935  0000000                   ;  0WITH_VS1B_TONE
 1936  0000000                   ;  0WITH_VS2A_TONE
 1937  0000000                   ;  0WITH_VS2B_TONE
 1938  0000000                   ;  0WITH_VS0A_HQPC8
 1939  0000000                   ;  0WITH_VS0B_HQPC8
 1940  0000000                   ;  0WITH_VS1A_HQPC8
 1941  0000000                   ;  0WITH_VS1B_HQPC8
 1942  0000000                   ;  0WITH_VS2A_HQPC8
 1943  0000000                   ;  0WITH_VS2B_HQPC8
 1944  0000000                   ;  0WITH_CH0_EVO
 1945  0000000                   ;  0WITH_CH1_EVO
 1946  0000000                   ;  0WITH_CH2_EVO
 1947  0000000                   ;  0WITH_FILTER
 1948  0000000                   ;  0WITH_NOISE_SHAPING
 1949  0000000                   ;  0WITH_DAC_ENABLE
 1950  0000000                   ;  1WITH_SP0XL_RESOLUTION
 1951  0000000                   ;  7WITH_SPEN_EFFECTIVE_BITS
 1952  0000000                   ;  0WITH_RDPC_VALUE
 1953  0000000                   ;  0WITH_MS_CODA
 1954  0000000                   ;  1WITH_SP_MIDI_SIMUL
 1955  0000000                   ;  1WITH_SP_SKIP
 1956  0000000                   ;  1WITH_SP_GLOBAL_SR
 1957  0000000                   ;  0WITH_RAM_OVER_STACK
 1958  0000000                   ; 32WITH_STACK_SIZE
 1959  0000000                   ;  0WITH_HWENGINE_SHARED_RAM_SIZE
 1960  0000000                   ;  0WITH_COLOR_FLY_CURVENUMS
 1961  0000000                   ;  0WITH_SPI_GPIO
 1962  0000000                   ;  0WITH_SPI_SPIO
 1963  0000000                   ;  1WITH_ISP_READ_WRITE
 1964  0000000                   ;  1WITH_ISP_UPDATE
 1965  0000000                   ;  0WITH_PROTECTION_PAGE_UPDATE
 1966  0000000                   ;  0WITH_BOOT_LOADER
 1967  0000000                   ;  0WITH_PSF_PROJECT
 1968  0000000                   ;  0WITH_PLAY_INDEX
 1969  0000000                   ;  0WITH_FW_CAP_SENSOR_KEYS
 1970  0000000                   ;  0WITH_TOUCH_WAKEUP_EN
 1971  0000000                   ;  0WITH_TOUCH_WAKEUP_KEYNUMS
 1972  0000000                   ;  0CAP_AVG_WITH_CHECK_BUSY
 1973  0000000                   ;  0WITH_FW_SEN_OPTION_PIN
 1974  0000000                   ;  1WITH_CAPSENSOR_MULTISENTABLE
 1975  0000000                   ;  0WITH_SLEEP_SEL_PIN_NUM
 1976  0000000                   ;  0WITH_UART_TX
 1977  0000000                   ;  0WITH_UART_RX
 1978  0000000                   ;  0WITH_UART_SWITCH
 1979  0000000                   ;  0WITH_SLD_ENABLE
 1980  0000000                   ;  0WITH_SLD_SWITCH
 1981  0000000                   
 1982  0000000                   ;Support WITH_SP channel variables ========================
 1983  0000000                   CH_STATUS_SP                             EQU  0H ;  1,  0
 1984  0000000                   CH_STATUS1_SP                            EQU  1H ;  1,  1





 1985  0000000                   CH_ISR_SYNTH_START_SP                    EQU  2H ;  2,  2
 1986  0000000                   CH_PREVIOUS_PCM_VOL_SP                   EQU  4H ;  2,  4
 1987  0000000                   CH_PREVIOUS_PCM_SP                       EQU  6H ;  2,  6
 1988  0000000                   CH_R_FINAL_VOLUME_SP                     EQU  8H ;  1,  8
 1989  0000000                   CH_PAUSE_PCM_SP                          EQU  9H ;  2,  9
 1990  0000000                   CH_DATA_ADDR_SP                          EQU  BH ;  2, 11
 1991  0000000                   CH_RAMP_BUF1_SP                          EQU  BH ;  2, 11
 1992  0000000                   CH_DATA_BANK_SP                          EQU  DH ;  1, 13
 1993  0000000                   CH_PHRASE_REPEAT_NUM_SP                  EQU  EH ;  1, 14
 1994  0000000                   CH_SP_PCM_TEMP_SP                        EQU  FH ;  2, 15
 1995  0000000                   CH_SENTENCE_START_ADDR_SP                EQU 11H ;  2, 17
 1996  0000000                   CH_RAMP_BUF2_SP                          EQU 11H ;  2, 17
 1997  0000000                   CH_SENTENCE_START_BANK_SP                EQU 13H ;  1, 19
 1998  0000000                   CH_VOL_MUL_ADDR_SP                       EQU 14H ;  2, 20
 1999  0000000                   ; Size = 22  ==============================================
 2000  0000000                   
 2001  0000000                   ;Not support WITH_APM channel variables ========================
 2002  0000000                   
 2003  0000000                   ;Not support WITH_EAM channel variables ========================
 2004  0000000                   
 2005  0000000                   ;Not support WITH_E2A channel variables ========================
 2006  0000000                   
 2007  0000000                   ;Not support WITH_VC4 channel variables ========================
 2008  0000000                   
 2009  0000000                   ;Not support WITH_YAD channel variables ========================
 2010  0000000                   
 2011  0000000                   ;Support WITH_SIL channel variables ========================
 2012  0000000                   CH_STATUS_SIL                            EQU  0H ;  1,  0
 2013  0000000                   CH_STATUS1_SIL                           EQU  1H ;  1,  1
 2014  0000000                   CH_ISR_SYNTH_START_SIL                   EQU  2H ;  2,  2
 2015  0000000                   CH_PREVIOUS_PCM_VOL_SIL                  EQU  4H ;  2,  4
 2016  0000000                   CH_OLD_SAMPLE_SIL                        EQU  6H ;  2,  6
 2017  0000000                   CH_R_FINAL_VOLUME_SIL                    EQU  8H ;  1,  8
 2018  0000000                   CH_PAUSE_PCM_SIL                         EQU  9H ;  2,  9
 2019  0000000                   CH_DATA_ADDR_SIL                         EQU  BH ;  2, 11
 2020  0000000                   CH_DATA_BANK_SIL                         EQU  DH ;  1, 13
 2021  0000000                   CH_PHRASE_REPEAT_NUM_SIL                 EQU  EH ;  1, 14
 2022  0000000                   CH_SP_PCM_TEMP_SIL                       EQU  FH ;  2, 15
 2023  0000000                   CH_SENTENCE_START_ADDR_SIL               EQU 11H ;  2, 17
 2024  0000000                   CH_SENTENCE_START_BANK_SIL               EQU 13H ;  1, 19
 2025  0000000                   CH_COUNTER_SIL                           EQU 14H ;  1, 20
 2026  0000000                   CH_COUNTER2_SIL                          EQU 15H ;  1, 21
 2027  0000000                   ; Size = 22  ==============================================
 2028  0000000                   
 2029  0000000                   ;Not support WITH_MDM channel variables ========================
 2030  0000000                   
 2031  0000000                   ;Not support WITH_EMM channel variables ========================
 2032  0000000                   
 2033  0000000                   ;Not support WITH_MD6 channel variables ========================
 2034  0000000                   
 2035  0000000                   ;Not support WITH_PC8 channel variables ========================
 2036  0000000                   
 2037  0000000                   ;Not support WITH_LP8 channel variables ========================
 2038  0000000                   
 2039  0000000                   ;Not support WITH_P10 channel variables ========================
 2040  0000000                   
 2041  0000000                   ;Not support WITH_P16 channel variables ========================





 2042  0000000                   
 2043  0000000                   ;Not support WITH_VC8 channel variables ========================
 2044  0000000                   
 2045  0000000                   ;Not support WITH_MD4 channel variables ========================
 2046  0000000                   
 2047  0000000                   ;Not support WITH_MDR channel variables ========================
 2048  0000000                   
 2049  0000000                   ;Not support WITH_NM4 channel variables ========================
 2050  0000000                   
 2051  0000000                   ;Not support WITH_NM4S channel variables ========================
 2052  0000000                   
 2053  0000000                   ;Not support WITH_HNM4 channel variables ========================
 2054  0000000                   CH_STATUS_MS                             EQU  0H ;  0,   0
 2055  0000000                   
 2056  0000000                   
 2057  0000000                   ;Support WITH_EVO channel variables ========================
 2058  0000000                   CH_STATUS_EVO                            EQU  0H ;  1,   0
 2059  0000000                   
 2060  0000000                   ;     RAM addresses =======================================
 2061  0000000                   GLOBAL_PLAY                              EQU  0H ;  1,   0
 2062  0000000                   COMMON_FLAG                              EQU  1H ;  1,   1
 2063  0000000                   COMMON_FLAG2                             EQU  2H ;  1,   2
 2064  0000000                   SUB_INDEX                                EQU  3H ;  0,   3
 2065  0000000                   COMMAND_OPERAND                          EQU  3H ;  1,   3
 2066  0000000                   RAMP_CHANNEL                             EQU  3H ;  1,   3
 2067  0000000                   RAMP_OPERAND                             EQU  3H ;  1,   3
 2068  0000000                   TEMP_REG1                                EQU  4H ;  2,   4
 2069  0000000                   TEMP_REG2                                EQU  6H ;  2,   6
 2070  0000000                   SP_TEMP                                  EQU  8H ;  7,   8
 2071  0000000                   GLOBAL_VOL_SP0                           EQU  FH ;  1,  15
 2072  0000000                   GLOBAL_VOL_SP1                           EQU  FH ;  1,  15
 2073  0000000                   GLOBAL_VOL_SP2                           EQU  FH ;  1,  15
 2074  0000000                   CH1_GLOBAL_TMC                           EQU 10H ;  1,  16
 2075  0000000                   CH1_GLOBAL_TMV                           EQU 11H ;  1,  17
 2076  0000000                   CH2_GLOBAL_TMC                           EQU 12H ;  1,  18
 2077  0000000                   CH2_GLOBAL_TMV                           EQU 12H ;  1,  18
 2078  0000000                   CH3_GLOBAL_TMC                           EQU 12H ;  1,  18
 2079  0000000                   CH3_GLOBAL_TMV                           EQU 12H ;  1,  18
 2080  0000000                   MS_START                                 EQU 12H ;  0,  18
 2081  0000000                   CH_SYNTH_CHANNEL0                        EQU 12H ;  0,  18
 2082  0000000                   CH_SYNTH_CHANNEL1                        EQU 12H ;  0,  18
 2083  0000000                   CH_SYNTH_CHANNEL2                        EQU 12H ;  0,  18
 2084  0000000                   GLOBAL_CHANNEL_VOLM0                     EQU 12H ;  0,  18
 2085  0000000                   GLOBAL_CHANNEL_VOLM1                     EQU 12H ;  0,  18
 2086  0000000                   GLOBAL_CHANNEL_VOLM2                     EQU 12H ;  0,  18
 2087  0000000                   GLOBAL_CHANNEL_INS0                      EQU 12H ;  0,  18
 2088  0000000                   GLOBAL_CHANNEL_INS1                      EQU 12H ;  0,  18
 2089  0000000                   GLOBAL_CHANNEL_INS2                      EQU 12H ;  0,  18
 2090  0000000                   CH1_PLAY_SEGMENT                         EQU 12H ;  0,  18
 2091  0000000                   CH2_PLAY_SEGMENT                         EQU 12H ;  0,  18
 2092  0000000                   CH3_PLAY_SEGMENT                         EQU 12H ;  0,  18
 2093  0000000                   ISP_TEMP                                 EQU 12H ; 20,  18
 2094  0000000                   USER_START                               EQU 26H ; 38
 2095  0000000                   DPD_USER_START                           EQU F00H
 2096  0000000                   
 2097  0000000                   
 2098  0000000                   	INCLUDE	"C:\NUVOTON\NSPPLAYLISTEDITOR\V1.13.000\NSP_SDS\SDS_NSP\INCLUDE\SYNTHCONSTANT_PUBLIC.INI.APP"





 2099  0000000                   ;	PUBLIC TONE_MELODY_TYPE
 2100  0000000                   ;	PUBLIC VMDPC8_MELODY_TYPE
 2101  0000000                   ;	PUBLIC HQPC8_MELODY_TYPE
 2102  0000000                   ;	PUBLIC PCSPC8_MELODY_TYPE
 2103  0000000                   ;	PUBLIC END_MELODY_TYPE
 2104  0000000                   ;========================================================================
 2105  0000000                   ;	PUBLIC TONE_MELODY_TYPE_2
 2106  0000000                   ;	PUBLIC VMDPC8_MELODY_TYPE_2
 2107  0000000                   ;	PUBLIC HQPC8_MELODY_TYPE_2
 2108  0000000                   ;	PUBLIC PCSPC8_MELODY_TYPE_2
 2109  0000000                   ;========================================================================
 2110  0000000                   ;	PUBLIC RESTYPE_APM
 2111  0000000                   ;	PUBLIC RESTYPE_PC8	
 2112  0000000                   ;	PUBLIC RESTYPE_P10
 2113  0000000                   ;	PUBLIC RESTYPE_SIL
 2114  0000000                   ;	PUBLIC RESTYPE_MDM
 2115  0000000                   ;	PUBLIC RESTYPE_EMM
 2116  0000000                   ;	PUBLIC RESTYPE_LP8
 2117  0000000                   ;	PUBLIC RESTYPE_MD6
 2118  0000000                   ;	PUBLIC RESTYPE_E2A
 2119  0000000                   ;	PUBLIC RESTYPE_VC4
 2120  0000000                   ;	PUBLIC RESTYPE_MD4		
 2121  0000000                   ;	PUBLIC RESTYPE_MDR
 2122  0000000                   ;	PUBLIC RESTYPE_NM4
 2123  0000000                   ;	PUBLIC RESTYPE_HNM4
 2124  0000000                   ;	PUBLIC RESTYPE_NM4S	
 2125  0000000                   ;
 2126  0000000                   	PUBLIC RESTYPE_EVO
 2127  0000000                   	PUBLIC RESTYPE_MIDI0
 2128  0000000                   	PUBLIC RESTYPE_NUO
 2129  0000000                   	PUBLIC RESTYPE_NUOS
 2130  0000000                   	PUBLIC RESTYPE_MD4
 2131  0000000                   	PUBLIC RESTYPE_SIL
 2132  0000000                   	PUBLIC RESTYPE_P16
 2133  0000000                   ;============================================================================
 2134  0000000                   ;	PUBLIC CHANNEL_ID_START
 2135  0000000                   ;	PUBLIC CHANNEL_VS0A
 2136  0000000                   ;	PUBLIC CHANNEL_VS0B
 2137  0000000                   ;	PUBLIC CHANNEL_VS0
 2138  0000000                   ;-------------------------------------------------------------------------
 2139  0000000                   ;	PUBLIC CHANNEL_VS1A
 2140  0000000                   ;	PUBLIC CHANNEL_VS1B
 2141  0000000                   ;	PUBLIC CHANNEL_VS1
 2142  0000000                   ;-------------------------------------------------------------------------
 2143  0000000                   ;	PUBLIC CHANNEL_VS2A
 2144  0000000                   ;	PUBLIC CHANNEL_VS2B
 2145  0000000                   ;	PUBLIC CHANNEL_VS2
 2146  0000000                   ;-------------------------------------------------------------------------
 2147  0000000                   	PUBLIC CHANNEL_MS
 2148  0000000                   ;-------------------------------------------------------------------------
 2149  0000000                   ;	PUBLIC CHANNEL_EVO0			
 2150  0000000                   ;	PUBLIC CHANNEL_EVO1
 2151  0000000                   ;	PUBLIC CHANNEL_EVO2	
 2152  0000000                   ;-------------------------------------------------------------------------			
 2153  0000000                   	PUBLIC CHANNEL_NONE
 2154  0000000                   ;============================================================================
 2155  0000000                   ;	PUBLIC CHANNEL_VS0A_2





 2156  0000000                   ;	PUBLIC CHANNEL_VS0B_2
 2157  0000000                   ;	PUBLIC CHANNEL_VS0_2
 2158  0000000                   ;	PUBLIC CHANNEL_VS1A_2
 2159  0000000                   ;	PUBLIC CHANNEL_VS1B_2
 2160  0000000                   ;	PUBLIC CHANNEL_VS1_2
 2161  0000000                   ;	PUBLIC CHANNEL_VS2A_2
 2162  0000000                   ;	PUBLIC CHANNEL_VS2B_2
 2163  0000000                   ;	PUBLIC CHANNEL_MS_2
 2164  0000000                   	PUBLIC CHANNEL_VS0A
 2165  0000000                   	PUBLIC CHANNEL_VS1A
 2166  0000000                   	PUBLIC CHANNEL_VS2A
 2167  0000000                   	PUBLIC CHANNEL_MS
 2168  0000000                   	PUBLIC CHANNEL_EVO0
 2169  0000000                   	PUBLIC CHANNEL_EVO1
 2170  0000000                   ;========================================================================
 2171  0000000                   ; Speech and Melody Common flags
 2172  0000000                   ;------------------------------------------------------------------------
 2173  0000000                   	PUBLIC SP_BZ
 2174  0000000                   
 2175  0000000                   	PUBLIC SP_DC_RAMP_UP_FOR_MS
 2176  0000000                   	PUBLIC SP_INIT
 2177  0000000                   
 2178  0000000                   	PUBLIC SP_NOTE
 2179  0000000                   
 2180  0000000                   	PUBLIC SP_DC_RAMP_DOWN
 2181  0000000                   	PUBLIC SP_EXT_NOTE
 2182  0000000                   
 2183  0000000                   	PUBLIC SP_PAUSE
 2184  0000000                   
 2185  0000000                   	PUBLIC SP_DECAY
 2186  0000000                   	PUBLIC SP_RESUME
 2187  0000000                   
 2188  0000000                   	PUBLIC SP_DC_RAMP_UP
 2189  0000000                   
 2190  0000000                   	PUBLIC SP_ADSR
 2191  0000000                   	PUBLIC SP_DRUM
 2192  0000000                   	PUBLIC SP_AUD
 2193  0000000                   ;------------------------------------------------------------------------
 2194  0000000                   ; Speech flag1
 2195  0000000                   ;------------------------------------------------------------------------
 2196  0000000                   	PUBLIC SP_HW_DECODE
 2197  0000000                   	PUBLIC SP_HW_STOP
 2198  0000000                   	PUBLIC SP_HW_PAUSE
 2199  0000000                   	PUBLIC SP_HW_INIT
 2200  0000000                   	PUBLIC SP_CHANNEL_FADE
 2201  0000000                   	PUBLIC SP_PLAY_BACK
 2202  0000000                   	PUBLIC SP_SIM_LOOP
 2203  0000000                   	PUBLIC SP_DIS_UIO_EVENT
 2204  0000000                   ;---------------------------------------------------------------------------------------
 2205  0000000                   ; Melody flags
 2206  0000000                   ;---------------------------------------------------------------------------------------
 2207  0000000                   	PUBLIC MS_BZ
 2208  0000000                   
 2209  0000000                   	PUBLIC MS_DC_RAMP_UP
 2210  0000000                   	PUBLIC MS_COMD_PHRASE
 2211  0000000                   
 2212  0000000                   	PUBLIC MS_LE





 2213  0000000                   
 2214  0000000                   	PUBLIC MS_PAUSE
 2215  0000000                   	PUBLIC MS_PS
 2216  0000000                   
 2217  0000000                   	PUBLIC MS_DC_RAMP_DOWN
 2218  0000000                   	PUBLIC MS_COMD_EVENT
 2219  0000000                   
 2220  0000000                   	PUBLIC MS_STOP
 2221  0000000                   
 2222  0000000                   	PUBLIC MS_CNP
 2223  0000000                   ;---------------------------------------------------------------------------------------
 2224  0000000                   ; EVO flags
 2225  0000000                   ;---------------------------------------------------------------------------------------
 2226  0000000                   	PUBLIC EVO_BZ
 2227  0000000                   
 2228  0000000                   	PUBLIC EVO_PAUSE
 2229  0000000                   
 2230  0000000                   	PUBLIC EVO_EVENT_TYPE
 2231  0000000                   	PUBLIC EVO_NOP_EVENT
 2232  0000000                   	PUBLIC EVO_COMD_EVENT
 2233  0000000                   	PUBLIC EVO_STOP_EVENT
 2234  0000000                   ;=========================================GLOBAL_PLAY bits
 2235  0000000                   	PUBLIC SP1_BZ
 2236  0000000                   	PUBLIC SP2_BZ
 2237  0000000                   	PUBLIC SP3_BZ
 2238  0000000                   	PUBLIC EVO1_BZ
 2239  0000000                   	PUBLIC EVO2_BZ
 2240  0000000                   	PUBLIC EVO3_BZ
 2241  0000000                   	PUBLIC MIDI_BZ
 2242  0000000                   	PUBLIC MS_EXT
 2243  0000000                   ;========================================COMMON_FLAG bits
 2244  0000000                   	PUBLIC TAIL_OFF_DAC
 2245  0000000                   	PUBLIC GLOBAL_VOL_MS_FLAG
 2246  0000000                   ;	PUBLIC NOISE_SHAPING_FLAG
 2247  0000000                   ;========================================================================
 2248  0000000                   	PUBLIC ENV_STATE_ATTACK
 2249  0000000                   	PUBLIC ENV_STATE_DECAY
 2250  0000000                   	PUBLIC ENV_STATE_SUSTAIN
 2251  0000000                   	PUBLIC ENV_STATE_RELEASE
 2252  0000000                   ;========================================================================
 2253  0000000                   	PUBLIC HEAD_TAIL_STEP_COUNT
 2254  0000000                   	PUBLIC PLAY_PHRASE_LEN
 2255  0000000                   	PUBLIC PLAY_PHRASE_MDR_LEN
 2256  0000000                   ;===========================================================================
 2257  0000000                   	PUBLIC DRUM_CHANNEL_ID
 2258  0000000                   
 2259  0000000                   	PUBLIC SP_CH0
 2260  0000000                   	PUBLIC SP_CH1
 2261  0000000                   	PUBLIC SP_CH2
 2262  0000000                   
 2263  0000000                   	PUBLIC MS_CH0
 2264  0000000                   	PUBLIC MS_CH1
 2265  0000000                   	PUBLIC MS_CH2
 2266  0000000                   ;==========================================================================	
 2267  0000000                   	PUBLIC SPEECH_TYPE
 2268  0000000                   	PUBLIC EVO_TYPE	
 2269  0000000                   	PUBLIC GLOBAL_SR_FLAG





 2270  0000000                   ;===========================================================================
 2271  0000000                   ;	PUBLIC TM0_NM4_PLAYING
 2272  0000000                   ;	PUBLIC TM0_NM4S_PLAYING
 2273  0000000                   
 2274  0000000                   	INCLUDE	"C:\NUVOTON\NSPPLAYLISTEDITOR\V1.13.000\NSP_SDS\SDS_NSP\INCLUDE\SYNTHCONSTANT.INI.APP"
 2275  0000000                   ;	.IF (WITH_TONE .EQ. 1)
 2276  0000000                   ;TONE_MELODY_TYPE				EQU 00H
 2277  0000000                   ;	.ELSE
 2278  0000000                   ;TONE_MELODY_TYPE				EQU -1H
 2279  0000000                   ;	.ENDIF
 2280  0000000                   ;	
 2281  0000000                   ;	.IF (WITH_VMDPC8 .EQ. 1)
 2282  0000000                   ;VMDPC8_MELODY_TYPE				EQU TONE_MELODY_TYPE+1
 2283  0000000                   ;	.ELSE
 2284  0000000                   ;VMDPC8_MELODY_TYPE				EQU TONE_MELODY_TYPE
 2285  0000000                   ;	.ENDIF
 2286  0000000                   ;
 2287  0000000                   ;	.IF (WITH_HQPC8 .EQ. 1)
 2288  0000000                   ;HQPC8_MELODY_TYPE				EQU VMDPC8_MELODY_TYPE+1
 2289  0000000                   ;	.ELSE
 2290  0000000                   ;HQPC8_MELODY_TYPE				EQU VMDPC8_MELODY_TYPE
 2291  0000000                   ;	.ENDIF
 2292  0000000                   ;
 2293  0000000                   ;	.IF (WITH_PCSPC8 .EQ. 1)
 2294  0000000                   ;PCSPC8_MELODY_TYPE				EQU HQPC8_MELODY_TYPE+1
 2295  0000000                   ;	.ELSE
 2296  0000000                   ;PCSPC8_MELODY_TYPE				EQU HQPC8_MELODY_TYPE
 2297  0000000                   ;	.ENDIF
 2298  0000000                   ;
 2299  0000000                   ;END_MELODY_TYPE					EQU PCSPC8_MELODY_TYPE
 2300  0000000                   ;;========================================================================
 2301  0000000                   ;TONE_MELODY_TYPE_2				EQU TONE_MELODY_TYPE*2
 2302  0000000                   ;VMDPC8_MELODY_TYPE_2			EQU VMDPC8_MELODY_TYPE*2
 2303  0000000                   ;HQPC8_MELODY_TYPE_2				EQU HQPC8_MELODY_TYPE*2
 2304  0000000                   ;PCSPC8_MELODY_TYPE_2			EQU PCSPC8_MELODY_TYPE*2
 2305  0000000                   ;;========================================================================
 2306  0000000                   ;	.IF (WITH_APM .EQ. 1)
 2307  0000000                   ;RESTYPE_APM						EQU 00H
 2308  0000000                   ;	.ELSE
 2309  0000000                   ;RESTYPE_APM						EQU -1D
 2310  0000000                   ;	.ENDIF
 2311  0000000                   ;	
 2312  0000000                   ;	.IF (WITH_PC8 .EQ. 1)
 2313  0000000                   ;RESTYPE_PC8						EQU RESTYPE_APM+1
 2314  0000000                   ;	.ELSE
 2315  0000000                   ;RESTYPE_PC8						EQU RESTYPE_APM
 2316  0000000                   ;	.ENDIF
 2317  0000000                   ;
 2318  0000000                   ;	.IF (WITH_P10 .EQ. 1)
 2319  0000000                   ;RESTYPE_P10						EQU RESTYPE_PC8+1
 2320  0000000                   ;	.ELSE
 2321  0000000                   ;RESTYPE_P10						EQU RESTYPE_PC8
 2322  0000000                   ;	.ENDIF
 2323  0000000                   ;
 2324  0000000                   ;	.IF (WITH_SIL .EQ. 1)
 2325  0000000                   ;RESTYPE_SIL						EQU RESTYPE_P10+1
 2326  0000000                   ;	.ELSE





 2327  0000000                   ;RESTYPE_SIL						EQU RESTYPE_P10
 2328  0000000                   ;	.ENDIF
 2329  0000000                   ;
 2330  0000000                   ;	.IF (WITH_MDM .EQ. 1)
 2331  0000000                   ;RESTYPE_MDM						EQU RESTYPE_SIL+1
 2332  0000000                   ;	.ELSE
 2333  0000000                   ;RESTYPE_MDM						EQU RESTYPE_SIL
 2334  0000000                   ;	.ENDIF
 2335  0000000                   ;
 2336  0000000                   ;	.IF (WITH_EMM .EQ. 1)
 2337  0000000                   ;RESTYPE_EMM						EQU RESTYPE_MDM+1
 2338  0000000                   ;	.ELSE
 2339  0000000                   ;RESTYPE_EMM						EQU RESTYPE_MDM
 2340  0000000                   ;	.ENDIF
 2341  0000000                   ;
 2342  0000000                   ;	.IF (WITH_LP8 .EQ. 1)
 2343  0000000                   ;RESTYPE_LP8						EQU RESTYPE_EMM+1
 2344  0000000                   ;	.ELSE
 2345  0000000                   ;RESTYPE_LP8						EQU RESTYPE_EMM
 2346  0000000                   ;	.ENDIF
 2347  0000000                   ;
 2348  0000000                   ;	.IF (WITH_MD6 .EQ. 1)
 2349  0000000                   ;RESTYPE_MD6						EQU RESTYPE_LP8+1
 2350  0000000                   ;	.ELSE
 2351  0000000                   ;RESTYPE_MD6						EQU RESTYPE_LP8
 2352  0000000                   ;	.ENDIF
 2353  0000000                   ;
 2354  0000000                   ;	.IF (WITH_E2A .EQ. 1)
 2355  0000000                   ;RESTYPE_E2A						EQU RESTYPE_MD6+1
 2356  0000000                   ;	.ELSE
 2357  0000000                   ;RESTYPE_E2A						EQU RESTYPE_MD6
 2358  0000000                   ;	.ENDIF
 2359  0000000                   ;
 2360  0000000                   ;	.IF (WITH_VC4 .EQ. 1)
 2361  0000000                   ;RESTYPE_VC4						EQU RESTYPE_E2A+1
 2362  0000000                   ;	.ELSE
 2363  0000000                   ;RESTYPE_VC4						EQU RESTYPE_E2A
 2364  0000000                   ;	.ENDIF
 2365  0000000                   ;	
 2366  0000000                   ;	.IF (WITH_MD4 .EQ. 1)
 2367  0000000                   ;RESTYPE_MD4						EQU RESTYPE_VC4+1
 2368  0000000                   ;	.ELSE
 2369  0000000                   ;RESTYPE_MD4						EQU RESTYPE_VC4
 2370  0000000                   ;	.ENDIF
 2371  0000000                   ;
 2372  0000000                   ;	
 2373  0000000                   ;	.IF (WITH_MDR .EQ. 1)
 2374  0000000                   ;RESTYPE_MDR						EQU RESTYPE_MD4+1
 2375  0000000                   ;	.ELSE
 2376  0000000                   ;RESTYPE_MDR						EQU RESTYPE_MD4
 2377  0000000                   ;	.ENDIF
 2378  0000000                   ;	
 2379  0000000                   ;	.IF (WITH_NM4 .EQ. 1)
 2380  0000000                   ;RESTYPE_NM4						EQU RESTYPE_MDR+1
 2381  0000000                   ;	.ELSE
 2382  0000000                   ;RESTYPE_NM4						EQU RESTYPE_MDR
 2383  0000000                   ;	.ENDIF





 2384  0000000                   ;	
 2385  0000000                   ;	.IF (WITH_HNM4 .EQ. 1)
 2386  0000000                   ;RESTYPE_HNM4						EQU RESTYPE_NM4+1
 2387  0000000                   ;	.ELSE
 2388  0000000                   ;RESTYPE_HNM4						EQU RESTYPE_NM4
 2389  0000000                   ;	.ENDIF
 2390  0000000                   ;	
 2391  0000000                   ;	.IF (WITH_NM4S .EQ. 1)
 2392  0000000                   ;RESTYPE_NM4S						EQU RESTYPE_HNM4+1
 2393  0000000                   ;	.ELSE
 2394  0000000                   ;RESTYPE_NM4S						EQU RESTYPE_HNM4
 2395  0000000                   ;	.ENDIF
 2396  0000000                   ;
 2397  0000000                   ;RESTYPE_EVO						EQU RESTYPE_NM4S+1
 2398  0000000                   ;RESTYPE_MIDI0						EQU RESTYPE_EVO+1
 2399  0000000                   RESTYPE_MIDI0						EQU 0
 2400  0000000                   RESTYPE_NUO							EQU 1
 2401  0000000                   RESTYPE_MD4							EQU 2
 2402  0000000                   RESTYPE_EVO							EQU 3
 2403  0000000                   RESTYPE_NUOS						EQU 4
 2404  0000000                   RESTYPE_P16							EQU 5
 2405  0000000                   RESTYPE_SIL							EQU 8
 2406  0000000                   
 2407  0000000                   ;============================================================================
 2408  0000000                   ;CHANNEL_ID_START				EQU 00H
 2409  0000000                   ;CHANNEL_VS0A					EQU CHANNEL_ID_START
 2410  0000000                   ;
 2411  0000000                   ;	.IF (WITH_VS0B .EQ. 1)
 2412  0000000                   ;CHANNEL_VS0B					EQU CHANNEL_VS0A+1
 2413  0000000                   ;	.ELSE
 2414  0000000                   ;CHANNEL_VS0B					EQU CHANNEL_VS0A
 2415  0000000                   ;	.ENDIF
 2416  0000000                   ;	
 2417  0000000                   ;CHANNEL_VS0					EQU CHANNEL_VS0A
 2418  0000000                   ;;-------------------------------------------------------------------------
 2419  0000000                   ;	.IF (WITH_VS1A .EQ. 1)
 2420  0000000                   ;CHANNEL_VS1A					EQU CHANNEL_VS0B+1
 2421  0000000                   ;	.ELSE
 2422  0000000                   ;CHANNEL_VS1A					EQU CHANNEL_VS0B
 2423  0000000                   ;	.ENDIF
 2424  0000000                   ;
 2425  0000000                   ;	.IF (WITH_VS1B .EQ. 1)
 2426  0000000                   ;CHANNEL_VS1B					EQU CHANNEL_VS1A+1
 2427  0000000                   ;	.ELSE
 2428  0000000                   ;CHANNEL_VS1B					EQU CHANNEL_VS1A
 2429  0000000                   ;	.ENDIF
 2430  0000000                   ;
 2431  0000000                   ;CHANNEL_VS1					EQU CHANNEL_VS1A
 2432  0000000                   ;;-------------------------------------------------------------------------
 2433  0000000                   ;	.IF (WITH_VS2A .EQ. 1)
 2434  0000000                   ;CHANNEL_VS2A					EQU CHANNEL_VS1B+1
 2435  0000000                   ;	.ELSE
 2436  0000000                   ;CHANNEL_VS2A					EQU CHANNEL_VS1B
 2437  0000000                   ;	.ENDIF
 2438  0000000                   ;
 2439  0000000                   ;	.IF (WITH_VS2B .EQ. 1)
 2440  0000000                   ;CHANNEL_VS2B					EQU CHANNEL_VS2A+1





 2441  0000000                   ;	.ELSE
 2442  0000000                   ;CHANNEL_VS2B					EQU CHANNEL_VS2A
 2443  0000000                   ;	.ENDIF
 2444  0000000                   ;
 2445  0000000                   ;CHANNEL_VS2					EQU CHANNEL_VS2A
 2446  0000000                   ;;-------------------------------------------------------------------------
 2447  0000000                   ;CHANNEL_MS					EQU CHANNEL_VS2B+1
 2448  0000000                   ;;-------------------------------------------------------------------------
 2449  0000000                   ;CHANNEL_EVO0					EQU CHANNEL_ID_START
 2450  0000000                   ;
 2451  0000000                   ;	.IF (WITH_CH1_EVO .EQ. 1)
 2452  0000000                   ;CHANNEL_EVO1					EQU CHANNEL_EVO0+1
 2453  0000000                   ;	.ELSE
 2454  0000000                   ;CHANNEL_EVO1					EQU CHANNEL_EVO0
 2455  0000000                   ;	.ENDIF
 2456  0000000                   ;
 2457  0000000                   ;	.IF (WITH_CH2_EVO .EQ. 1)
 2458  0000000                   ;CHANNEL_EVO2					EQU CHANNEL_EVO1+1
 2459  0000000                   ;	.ELSE
 2460  0000000                   ;CHANNEL_EVO2					EQU CHANNEL_EVO1
 2461  0000000                   ;	.ENDIF
 2462  0000000                   ;-------------------------------------------------------------------------
 2463  0000000                   CHANNEL_NONE					EQU 80H
 2464  0000000                   
 2465  0000000                   .IF	(CHIPSERIES = 'N589A')
 2466  0000000                   CHANNEL_MS						EQU 2
 2467  0000000                   CHANNEL_VS0A					EQU 0
 2468  0000000                   CHANNEL_VS1A					EQU 1
 2469  0000000                   CHANNEL_VS2A					EQU CHANNEL_NONE
 2470  0000000                   CHANNEL_EVO0					EQU 3
 2471  0000000                   CHANNEL_EVO1					EQU 4
 2472  0000000                   .ENDIF
 2473  0000000                   
 2474  0000000                   .IF	(CHIPSERIES = 'N589B')
 2475  0000000                   CHANNEL_MS						EQU CHANNEL_NONE
 2476  0000000                   CHANNEL_VS0A					EQU 0
 2477  0000000                   CHANNEL_VS1A					EQU 1
 2478  0000000                   CHANNEL_VS2A					EQU CHANNEL_NONE
 2479  0000000                   CHANNEL_EVO0					EQU 2
 2480  0000000                   CHANNEL_EVO1					EQU 3
 2481  0000000                   .ENDIF
 2482  0000000                   
 2483  0000000                   .IF	(CHIPSERIES = 'N589C')
 2484  0000000                   CHANNEL_MS						EQU CHANNEL_NONE
 2485  0000000                   CHANNEL_VS0A					EQU 0
 2486  0000000                   CHANNEL_VS1A					EQU 1
 2487  0000000                   CHANNEL_VS2A					EQU CHANNEL_NONE
 2488  0000000                   CHANNEL_EVO0					EQU 2
 2489  0000000                   CHANNEL_EVO1					EQU 3
 2490  0000000                   .ENDIF
 2491  0000000                   
 2492  0000000                   .IF	(CHIPSERIES = 'N589D')
 2493  0000000                   CHANNEL_MS						EQU CHANNEL_NONE
 2494  0000000                   CHANNEL_VS0A					EQU 0
 2495  0000000                   CHANNEL_VS1A					EQU CHANNEL_NONE
 2496  0000000                   CHANNEL_VS2A					EQU CHANNEL_NONE
 2497  0000000                   CHANNEL_EVO0					EQU 1





 2498  0000000                   CHANNEL_EVO1					EQU 2
 2499  0000000                   .ENDIF
 2500  0000000                   
 2501  0000000                   ;============================================================================
 2502  0000000                   ;CHANNEL_VS0A_2					EQU CHANNEL_VS0A*2
 2503  0000000                   ;CHANNEL_VS0B_2					EQU CHANNEL_VS0B*2
 2504  0000000                   ;CHANNEL_VS0_2					EQU CHANNEL_VS0A_2
 2505  0000000                   ;CHANNEL_VS1A_2					EQU CHANNEL_VS1A*2
 2506  0000000                   ;CHANNEL_VS1B_2					EQU CHANNEL_VS1B*2
 2507  0000000                   ;CHANNEL_VS1_2					EQU CHANNEL_VS1*2
 2508  0000000                   ;CHANNEL_VS2A_2					EQU CHANNEL_VS2A*2
 2509  0000000                   ;CHANNEL_VS2B_2					EQU CHANNEL_VS2B*2
 2510  0000000                   ;CHANNEL_VS2_2					EQU CHANNEL_VS2*2
 2511  0000000                   ;CHANNEL_MS_2					EQU CHANNEL_MS*2
 2512  0000000                   ;========================================================================
 2513  0000000                   ; Speech / melody/EVO channel flags
 2514  0000000                   ;========================================================================
 2515  0000000                   ; Speech Flag : SP_BZ/SP_DC_RAMP_DWON/SP_DC_RAMP_UP/SP_PAUSE
 2516  0000000                   ; Speech Flag1: SP_HW_DECODE/SP_SIM_LOOP/SP_CHANNEL_FADE/SP_DIS_UIO_EVENT/SP_PLAY_BACK
 2517  0000000                   ; Melody Flag : SP_BZ/SP_DC_RAMP_DWON/SP_DC_RAMP_UP/SP_INIT/SP_NOTE/SP_CH_ST/SP_DECAY
 2518  0000000                   ;        Type : SP_ADSR
 2519  0000000                   ;------------------------------------------------------------------------
 2520  0000000                   ; Speech and Melody Common flags
 2521  0000000                   ;------------------------------------------------------------------------
 2522  0000000                   SP_BZ							EQU 01H
 2523  0000000                   ; SP_BZ == 1 => channel in busy
 2524  0000000                   ; SP_BZ == 0 => channel in free
 2525  0000000                   
 2526  0000000                   SP_DC_RAMP_UP_FOR_MS			EQU 02H
 2527  0000000                   ;SP_DC_RAMP_UP_FOR_MS == 1 => the speech timer do ramp up for melody
 2528  0000000                   ;SP_DC_RAMP_UP_FOR_MS == 0 => the speech timer do ramp up for itself, not melody
 2529  0000000                   SP_INIT							EQU 02H
 2530  0000000                   ; SP_INIT == 1 => "Note On" and has not been Initialized.
 2531  0000000                   ; SP_INIT == 1 => "Note On" and has been Initialized.
 2532  0000000                   
 2533  0000000                   SP_NOTE							EQU 04H
 2534  0000000                   ; SP_NOTE == 1 => "Note On"
 2535  0000000                   ; SP_NOTE == 0 => "Note Off"
 2536  0000000                   
 2537  0000000                   SP_DC_RAMP_DOWN					EQU 08H
 2538  0000000                   SP_EXT_NOTE						EQU 08H
 2539  0000000                   
 2540  0000000                   SP_PAUSE						EQU 10H
 2541  0000000                   ; Note : For Speech Pause/Resume
 2542  0000000                   
 2543  0000000                   SP_DECAY						EQU 20H
 2544  0000000                   ; I-f a playing MS channel is assigned for next note, set this flag for decaying evp
 2545  0000000                   ; to 0, then play the asigned note
 2546  0000000                   SP_RESUME						EQU 20H
 2547  0000000                   
 2548  0000000                   SP_DC_RAMP_UP					EQU 40H
 2549  0000000                   
 2550  0000000                   SP_DRUM							EQU 80H
 2551  0000000                   SP_AUD							EQU 80H
 2552  0000000                   SP_ADSR							EQU 80H
 2553  0000000                   ; Note : Only work as WITH_VOL_ADJ == 1. This flag must be bit7.
 2554  0000000                   ; SP_BPVA == 1 => Bypass volume adjustment for improving performence.





 2555  0000000                   ; SP_BPVA == 0 => Execute volume adjustment.
 2556  0000000                   
 2557  0000000                   ;------------------------------------------------------------------------
 2558  0000000                   ; Speech flag1
 2559  0000000                   ;------------------------------------------------------------------------
 2560  0000000                   SP_HW_DECODE					EQU	80H
 2561  0000000                   ;SP_HW_DECODE = 1 => HW decode NM4
 2562  0000000                   ;SP_HW_DECODE = 0 => FW decode SPEECH
 2563  0000000                   
 2564  0000000                   SP_HW_STOP					EQU	40H
 2565  0000000                   ;SP_HW_STOP = 1 => stop doing
 2566  0000000                   ;SP_HW_STOP = 0 => 
 2567  0000000                   
 2568  0000000                   SP_HW_PAUSE					EQU	20H
 2569  0000000                   ;SP_HW_PAUSE = 1 => HW pause decode NM4
 2570  0000000                   ;SP_HW_PAUSE = 0 => 
 2571  0000000                   
 2572  0000000                   SP_HW_INIT					EQU	10H
 2573  0000000                   ;SP_HW_INIT = 1 => HW stop -> HW init
 2574  0000000                   ;SP_HW_INIT = 0 => user play init
 2575  0000000                   
 2576  0000000                   SP_CHANNEL_FADE					EQU	08H
 2577  0000000                   ;SP_CHANNEL_FADE = 1 => Doing speech channel fade
 2578  0000000                   ;SP_CHANNEL_FADE = 0 => not Doing speech channel fade
 2579  0000000                   
 2580  0000000                   SP_PLAY_BACK					EQU	04H
 2581  0000000                   ;SP_PLAY_BACK = 1 => MDR play backwards
 2582  0000000                   ;SP_PLAY_BACK = 0 => speech play forewards
 2583  0000000                   
 2584  0000000                   SP_SIM_LOOP					EQU	02H
 2585  0000000                   ;SP_SIM_LOOP = 1 => Doing SIM POLLING
 2586  0000000                   ;SP_SIM_LOOP = 0 => not Doing SIM POLLING	
 2587  0000000                   
 2588  0000000                   SP_DIS_UIO_EVENT				EQU	01H
 2589  0000000                   ;SP_DIS_UIO_EVENT = 1 => disable channel UIO event
 2590  0000000                   ;SP_DIS_UIO_EVENT = 0 => enable channel UIO event
 2591  0000000                   ;---------------------------------------------------------------------------------------
 2592  0000000                   ; Melody flags
 2593  0000000                   ;---------------------------------------------------------------------------------------
 2594  0000000                   MS_BZ							EQU 01H
 2595  0000000                   ; MS_BZ == 1 => channel in busy
 2596  0000000                   ; MS_BZ == 0 => channel in free
 2597  0000000                   
 2598  0000000                   MS_DC_RAMP_UP					EQU 02H
 2599  0000000                   MS_COMD_PHRASE					EQU 02H
 2600  0000000                   
 2601  0000000                   MS_LE							EQU 04H
 2602  0000000                   ; Note: Internal use only
 2603  0000000                   ; MS_LE == 1 => Midi end encounter and repeat play the current phrase
 2604  0000000                   ; MS_LE == 0 => Midi end encounter and do not repeat play the current phrase
 2605  0000000                   
 2606  0000000                   MS_PS							EQU 08H
 2607  0000000                   MS_PAUSE						EQU 08H  
 2608  0000000                   ; MS_PAUSE = MS_PS == 1 => Pause MIDI playing.
 2609  0000000                   ; MS_PAUSE = MS_PS == 0 => Do not pause MIDI playing.
 2610  0000000                   
 2611  0000000                   MS_DC_RAMP_DOWN					EQU 10H





 2612  0000000                   MS_COMD_EVENT					EQU 10H
 2613  0000000                   
 2614  0000000                   MS_STOP							EQU 20H
 2615  0000000                   ; MS_STOP == 0 => MS is playing or idle.
 2616  0000000                   ; MS_STOP == 1 => MS is in stoping, all polyphonies will be sharp decaying.
 2617  0000000                   ;                 FXF timer will be stop as all polyphonies are decayed done.
 2618  0000000                   
 2619  0000000                   MS_CNP							EQU 40H
 2620  0000000                   ; Check Next Phrase flag
 2621  0000000                   ;------------------------------------------------------------------------
 2622  0000000                   ; EVO flags,MSB 2 bit:4 timers of FXF13
 2623  0000000                   ;------------------------------------------------------------------------
 2624  0000000                   EVO_BZ							EQU 80H
 2625  0000000                   ; EVO_BZ == 1 => EVOx in busy
 2626  0000000                   ; EVO_BZ == 0 => EVOx in free
 2627  0000000                   
 2628  0000000                   EVO_PAUSE						EQU 40H  
 2629  0000000                   ; EVO_PAUSE = 1 => Pause EVO playing.
 2630  0000000                   ; EVO_PAUSE = 0 => Do not pause EVO playing.
 2631  0000000                   
 2632  0000000                   EVO_EVENT_TYPE					EQU 03H
 2633  0000000                   ; NOP EVENT: 00xx xxxxH
 2634  0000000                   ; COMMAND_EVENT: 01xx xxxxH
 2635  0000000                   ; STOP_EVENT : 10xx xxxxH		
 2636  0000000                   ; EVO_NOP = 1 =>NOP event
 2637  0000000                   EVO_NOP_EVENT					EQU 00H
 2638  0000000                   EVO_COMD_EVENT					EQU 01H
 2639  0000000                   EVO_STOP_EVENT					EQU 02H
 2640  0000000                   ;bit 4,5 used for 4 times of FXF13
 2641  0000000                   ;=========================================GLOBAL_PLAY bits
 2642  0000000                   SP1_BZ					EQU 01H
 2643  0000000                   SP2_BZ					EQU 02H
 2644  0000000                   SP3_BZ					EQU 04H
 2645  0000000                   EVO1_BZ					EQU 08H
 2646  0000000                   EVO2_BZ					EQU 10H
 2647  0000000                   EVO3_BZ					EQU 20H
 2648  0000000                   MIDI_BZ					EQU 40H
 2649  0000000                   MS_EXT					EQU 80H
 2650  0000000                   ;========================================COMMON_FLAG bits
 2651  0000000                   TAIL_OFF_DAC   					EQU 80H
 2652  0000000                   GLOBAL_VOL_MS_FLAG  			EQU 40H
 2653  0000000                   ;=========================================COMMON_FLAG2 bits
 2654  0000000                   ;bit 1/2/3 for en/dis UIO event
 2655  0000000                   DIS_UIO_EVENT_FLAG_CH0			EQU 02H
 2656  0000000                   DIS_UIO_EVENT_FLAG_CH1			EQU 04H
 2657  0000000                   DIS_UIO_EVENT_FLAG_CH2			EQU 08H
 2658  0000000                   
 2659  0000000                   PLAY_BACK_CH0				EQU 10H
 2660  0000000                   PLAY_BACK_CH1				EQU 20H
 2661  0000000                   PLAY_BACK_CH2	
 2662  0000000                   ;========================================================================
 2663  0000000                   ENV_STATE_ATTACK				EQU 0
 2664  0000000                   ENV_STATE_DECAY					EQU 1
 2665  0000000                   ENV_STATE_SUSTAIN				EQU 2
 2666  0000000                   ENV_STATE_RELEASE				EQU 3
 2667  0000000                   ;========================================================================
 2668  0000000                   HEAD_TAIL_STEP_COUNT			EQU 40H





 2669  0000000                   ;===========================================================================
 2670  0000000                   	.IF (WITH_EXT64M_SPI .EQ. 1)
 2671  0000000                   PLAY_PHRASE_LEN					EQU 08H
 2672  0000000                   	.ELSE
 2673  0000000                   PLAY_PHRASE_LEN					EQU 07H
 2674  0000000                   	.ENDIF
 2675  0000000                   
 2676  0000000                   	.IF (WITH_EXT64M_SPI .EQ. 1)
 2677  0000000                   PLAY_PHRASE_MDR_LEN				EQU 0CH
 2678  0000000                   	.ELSE
 2679  0000000                   PLAY_PHRASE_MDR_LEN				EQU 0AH
 2680  0000000                   	.ENDIF
 2681  0000000                   ;===========================================================================
 2682  0000000                   DRUM_CHANNEL_ID					EQU 03H	
 2683  0000000                   
 2684  0000000                   SP_CH0							EQU 00H
 2685  0000000                   SP_CH1							EQU 01H
 2686  0000000                   SP_CH2							EQU 02H
 2687  0000000                   
 2688  0000000                   MS_CH0							EQU 00H
 2689  0000000                   MS_CH1							EQU 01H
 2690  0000000                   MS_CH2							EQU 02H
 2691  0000000                   ;===========================================================================
 2692  0000000                   SPEECH_TYPE          			EQU 00H
 2693  0000000                   EVO_TYPE                		EQU 01H
 2694  0000000                   ;==============================================================CHn_GLOBAL_TMC
 2695  0000000                   GLOBAL_SR_FLAG  			EQU 80H
 2696  0000000                   ;===========================================================================
 2697  0000000                   .IF	(CHIPSERIES = 'N588M')
 2698  0000000                   ;TM0_NM4_PLAYING			EQU	(RESTYPE_NM4<<4)+1
 2699  0000000                   ;TM0_NM4S_PLAYING		EQU	(RESTYPE_NM4S<<4)+1
 2700  0000000                   .ENDIF
 2701  0000000                   .IF	(CHIPSERIES = 'N588K')
 2702  0000000                   ;TM0_NM4_PLAYING			EQU	(RESTYPE_NM4<<4)+0
 2703  0000000                   ;TM0_NM4S_PLAYING		EQU	(RESTYPE_NM4S<<4)+0
 2704  0000000                   .ENDIF
 2705  0000000                   
 2706  0000000                   
 2707  0000000                   	INCLUDE	"C:\NUVOTON\NSPPLAYLISTEDITOR\V1.13.000\NSP_SDS\SDS_NSP\INCLUDE\MACROS.INI.APP"
 2708  0000000                   	SYMBOLS
 2709  0000000                   	LINKLIST
 2710  0000000                   	DEBUG  	ASM
 2711  0000000                   	LINEAR	ON
 2712  0000000                   	LONGA	OFF
 2713  0000000                   	LONGI	OFF
 2714  0000000                   
 2715  0000000                   ;==============================================================================
 2716  0000000                   ; Macros
 2717  0000000                   ;==============================================================================
 2718  0000000                   STZ16 MACRO VAR_ADDR
 2719  0000000                   	STZ VAR_ADDR
 2720  0000000                   	STZ VAR_ADDR+1
 2721  0000000                   	ENDM
 2722  0000000                   ;----------------------------------------------------------------	
 2723  0000000                   STZ24 MACRO VAR_ADDR
 2724  0000000                   	STZ VAR_ADDR
 2725  0000000                   	STZ VAR_ADDR+1





 2726  0000000                   	STZ VAR_ADDR+2
 2727  0000000                   	ENDM
 2728  0000000                   ;----------------------------------------------------------------	
 2729  0000000                   ADD16_8_DP MACRO VAR_ADDR, VAR_ADDR2
 2730  0000000                   	CLC
 2731  0000000                   	LDA VAR_ADDR
 2732  0000000                   	ADC VAR_ADDR2
 2733  0000000                   	STA VAR_ADDR
 2734  0000000                   	LDA VAR_ADDR+1
 2735  0000000                   	ADC #0
 2736  0000000                   	STA VAR_ADDR+1
 2737  0000000                   	ENDM
 2738  0000000                   ;----------------------------------------------------------------	
 2739  0000000                   ADD16_16 MACRO VAR_ADDR, NUM
 2740  0000000                   	CLC
 2741  0000000                   	LDA VAR_ADDR
 2742  0000000                   	ADC #.LOW.NUM
 2743  0000000                   	STA VAR_ADDR
 2744  0000000                   	LDA VAR_ADDR+1
 2745  0000000                   	ADC #.HIGH.NUM
 2746  0000000                   	STA VAR_ADDR+1
 2747  0000000                   	ENDM
 2748  0000000                   ;----------------------------------------------------------------	
 2749  0000000                   ADD24_16 MACRO VAR_ADDR, NUM
 2750  0000000                   	CLC
 2751  0000000                   	LDA VAR_ADDR
 2752  0000000                   	ADC #.LOW.NUM
 2753  0000000                   	STA VAR_ADDR
 2754  0000000                   	LDA VAR_ADDR+1
 2755  0000000                   	ADC #.HIGH.NUM
 2756  0000000                   	STA VAR_ADDR+1
 2757  0000000                   	LDA VAR_ADDR+2
 2758  0000000                   	ADC #0
 2759  0000000                   	STA VAR_ADDR+2
 2760  0000000                   	ENDM
 2761  0000000                   ;----------------------------------------------------------------	
 2762  0000000                   ADD16_16_DP MACRO VAR_ADDR, VAR_ADDR2
 2763  0000000                   	CLC
 2764  0000000                   	LDA VAR_ADDR
 2765  0000000                   	ADC VAR_ADDR2
 2766  0000000                   	STA VAR_ADDR
 2767  0000000                   	LDA VAR_ADDR+1
 2768  0000000                   	ADC VAR_ADDR2+1
 2769  0000000                   	STA VAR_ADDR+1
 2770  0000000                   	ENDM
 2771  0000000                   ;----------------------------------------------------------------	
 2772  0000000                   ADD24_16_DP MACRO VAR_ADDR, VAR_ADDR2
 2773  0000000                   	CLC
 2774  0000000                   	LDA VAR_ADDR
 2775  0000000                   	ADC VAR_ADDR2
 2776  0000000                   	STA VAR_ADDR
 2777  0000000                   	LDA VAR_ADDR+1
 2778  0000000                   	ADC VAR_ADDR2+1
 2779  0000000                   	STA VAR_ADDR+1
 2780  0000000                   	LDA VAR_ADDR+2
 2781  0000000                   	ADC #0
 2782  0000000                   	STA VAR_ADDR+2





 2783  0000000                   	ENDM
 2784  0000000                   ;----------------------------------------------------------------	
 2785  0000000                   ADD24_24 MACRO VAR_ADDR, NUM
 2786  0000000                   	CLC
 2787  0000000                   	LDA VAR_ADDR
 2788  0000000                   	ADC #.LOW.NUM
 2789  0000000                   	STA VAR_ADDR
 2790  0000000                   	LDA VAR_ADDR+1
 2791  0000000                   	ADC #.HIGH.NUM
 2792  0000000                   	STA VAR_ADDR+1
 2793  0000000                   	LDA VAR_ADDR+2
 2794  0000000                   	ADC #.HIGH8.NUM
 2795  0000000                   	STA VAR_ADDR+2
 2796  0000000                   	ENDM
 2797  0000000                   ;----------------------------------------------------------------	
 2798  0000000                   ADD24_24_DP MACRO VAR_ADDR1, VAR_ADDR2
 2799  0000000                   	CLC
 2800  0000000                   	LDA VAR_ADDR1
 2801  0000000                   	ADC VAR_ADDR2
 2802  0000000                   	STA VAR_ADDR1
 2803  0000000                   	LDA VAR_ADDR1+1
 2804  0000000                   	ADC VAR_ADDR2+1
 2805  0000000                   	STA VAR_ADDR1+1
 2806  0000000                   	LDA VAR_ADDR1+2
 2807  0000000                   	ADC VAR_ADDR2+2
 2808  0000000                   	STA VAR_ADDR1+2
 2809  0000000                   	ENDM
 2810  0000000                   ;----------------------------------------------------------------
 2811  0000000                   SBC16_16 MACRO VAR_ADDR, NUM
 2812  0000000                   	SEC
 2813  0000000                   	LDA VAR_ADDR
 2814  0000000                   	SBC #.LOW.NUM
 2815  0000000                   	STA VAR_ADDR
 2816  0000000                   	LDA VAR_ADDR+1
 2817  0000000                   	SBC #.HIGH.NUM
 2818  0000000                   	STA VAR_ADDR+1
 2819  0000000                   	ENDM
 2820  0000000                   ;----------------------------------------------------------------
 2821  0000000                   SBC16_16_DP MACRO VAR_ADDR1, VAR_ADDR2
 2822  0000000                   	SEC
 2823  0000000                   	LDA VAR_ADDR1
 2824  0000000                   	SBC VAR_ADDR2
 2825  0000000                   	STA VAR_ADDR1
 2826  0000000                   	LDA VAR_ADDR1+1
 2827  0000000                   	SBC VAR_ADDR2+1
 2828  0000000                   	STA VAR_ADDR1+1
 2829  0000000                   	ENDM
 2830  0000000                   ;----------------------------------------------------------------
 2831  0000000                   SBC24_24 MACRO VAR_ADDR, NUM
 2832  0000000                   	SEC
 2833  0000000                   	LDA VAR_ADDR
 2834  0000000                   	SBC #.LOW.NUM
 2835  0000000                   	STA VAR_ADDR
 2836  0000000                   	LDA VAR_ADDR+1
 2837  0000000                   	SBC #.HIGH.NUM
 2838  0000000                   	STA VAR_ADDR+1
 2839  0000000                   	LDA VAR_ADDR+2





 2840  0000000                   	SBC #.HIGH8.NUM
 2841  0000000                   	STA VAR_ADDR+2
 2842  0000000                   	ENDM
 2843  0000000                   ;----------------------------------------------------------------
 2844  0000000                   SBC24_24_DP MACRO VAR_ADDR1, VAR_ADDR2
 2845  0000000                   	SEC
 2846  0000000                   	LDA VAR_ADDR1
 2847  0000000                   	SBC VAR_ADDR2
 2848  0000000                   	STA VAR_ADDR1
 2849  0000000                   	LDA VAR_ADDR1+1
 2850  0000000                   	SBC VAR_ADDR2+1
 2851  0000000                   	STA VAR_ADDR1+1
 2852  0000000                   	LDA VAR_ADDR1+2
 2853  0000000                   	SBC VAR_ADDR2+2
 2854  0000000                   	STA VAR_ADDR1+2
 2855  0000000                   	ENDM
 2856  0000000                   ;----------------------------------------------------------------
 2857  0000000                   MOV16_16 MACRO VAR_ADDR, NUM
 2858  0000000                   	LDA	#.LOW.NUM
 2859  0000000                   	STA VAR_ADDR
 2860  0000000                   	LDA	#.HIGH.NUM
 2861  0000000                   	STA VAR_ADDR+1
 2862  0000000                   	ENDM
 2863  0000000                   ;----------------------------------------------------------------
 2864  0000000                   MOV16_16_DP MACRO VAR_ADDR1, VAR_ADDR2
 2865  0000000                   	LDA	VAR_ADDR2
 2866  0000000                   	STA VAR_ADDR1
 2867  0000000                   	LDA	VAR_ADDR2+1
 2868  0000000                   	STA VAR_ADDR1+1
 2869  0000000                   	ENDM
 2870  0000000                   ;----------------------------------------------------------------
 2871  0000000                   MOV24_24 MACRO VAR_ADDR, NUM
 2872  0000000                   	LDA	#.LOW.NUM
 2873  0000000                   	STA VAR_ADDR
 2874  0000000                   	LDA	#.HIGH.NUM
 2875  0000000                   	STA VAR_ADDR+1
 2876  0000000                   	LDA	#.HIGH8.NUM
 2877  0000000                   	STA VAR_ADDR+2
 2878  0000000                   	ENDM
 2879  0000000                   ;----------------------------------------------------------------
 2880  0000000                   MOV24_24_DP MACRO VAR_ADDR1, VAR_ADDR2
 2881  0000000                   	LDA	VAR_ADDR2
 2882  0000000                   	STA VAR_ADDR1
 2883  0000000                   	LDA	VAR_ADDR2+1
 2884  0000000                   	STA VAR_ADDR1+1
 2885  0000000                   	LDA	VAR_ADDR2+2
 2886  0000000                   	STA VAR_ADDR1+2
 2887  0000000                   	ENDM
 2888  0000000                   ;------------------------------------------------------------------------------
 2889  0000000                   ; Like JSR (addr,X) operation
 2890  0000000                   ;------------------------------------------------------------------------------
 2891  0000000                   ;----------------------------------------------------------------
 2892  0000000                   ; JSR ISR for Return Addr
 2893  0000000                   ;----------------------------------------------------------------
 2894  0000000                   JSR_ISR_AII MACRO ISR_ADDR
 2895  0000000                   	LDA #.HIGH.RETURN_ADDR_#
 2896  0000000                   	PHA





 2897  0000000                   	LDA #.LOW.RETURN_ADDR_#
 2898  0000000                   	PHA
 2899  0000000                   	PHP
 2900  0000000                   	JMP ISR_ADDR
 2901  0000000                   RETURN_ADDR_#:
 2902  0000000                   	ENDM
 2903  0000000                   
 2904  0000000                   ;----------------------------------------------------------------
 2905  0000000                   ; PHA for Return Addr
 2906  0000000                   ;----------------------------------------------------------------
 2907  0000000                   JSR_AII MACRO JSR_ADDR
 2908  0000000                   	LDA #.HIGH.RETURN_ADDR_#
 2909  0000000                   	PHA
 2910  0000000                   	LDA #.LOW.RETURN_ADDR_#
 2911  0000000                   	PHA
 2912  0000000                   	JMP JSR_ADDR
 2913  0000000                   RETURN_ADDR_#:
 2914  0000000                   	NOP
 2915  0000000                   	ENDM
 2916  0000000                   ;----------------------------------------------------------------
 2917  0000000                   ; PHA for Return Addr with X
 2918  0000000                   ;----------------------------------------------------------------
 2919  0000000                   JSR_AII_X MACRO JSR_ADDR
 2920  0000000                   	LDA #.HIGH.RETURN_ADDR_#
 2921  0000000                   	PHA
 2922  0000000                   	LDA #.LOW.RETURN_ADDR_#
 2923  0000000                   	PHA
 2924  0000000                   	JMP (JSR_ADDR,X)
 2925  0000000                   RETURN_ADDR_#:
 2926  0000000                   	NOP
 2927  0000000                   	ENDM
 2928  0000000                   ;----------------------------------------------------------------
 2929  0000000                   ; PHY for Return Addr
 2930  0000000                   ;----------------------------------------------------------------
 2931  0000000                   JSR_AII_PHY_X MACRO JSR_ADDR
 2932  0000000                   	LDY #.HIGH.RETURN_ADDR_Y_#
 2933  0000000                   	PHY
 2934  0000000                   	LDY #.LOW.RETURN_ADDR_Y_#
 2935  0000000                   	PHY
 2936  0000000                   	JMP (JSR_ADDR,X)
 2937  0000000                   RETURN_ADDR_Y_#:
 2938  0000000                   	NOP
 2939  0000000                   	ENDM
 2940  0000000                   ;--------------------------------------------------------------------------
 2941  0000000                   JSR_AII_X_SA MACRO JSR_ADDR,BUF_ADDR
 2942  0000000                   ;	.IF (WITH_16BIT_MODE .EQ. 1)
 2943  0000000                   ;	JSR (JSR_ADDR,X)
 2944  0000000                   ;	.ELSE
 2945  0000000                   	STA <BUF_ADDR
 2946  0000000                   	LDA #.HIGH.RETURN_ADDR_#
 2947  0000000                   	PHA
 2948  0000000                   ;	LDA #.LOW.RETURN_ADDR_#-1
 2949  0000000                   	LDA #.LOW.RETURN_ADDR_#
 2950  0000000                   	PHA
 2951  0000000                   	LDA <BUF_ADDR
 2952  0000000                   	JMP (JSR_ADDR,X)
 2953  0000000                   RETURN_ADDR_#:





 2954  0000000                   	NOP
 2955  0000000                   ;	.ENDIF
 2956  0000000                   	ENDM
 2957  0000000                   ;===============================================================
 2958  0000000                   ;
 2959  0000000                   ;===============================================================
 2960  0000000                   T_XY MACRO
 2961  0000000                   	PHX
 2962  0000000                   	PLY
 2963  0000000                   
 2964  0000000                   	ENDM
 2965  0000000                   ;--------------------------------------------------------------------------
 2966  0000000                   T_YX MACRO
 2967  0000000                   	PHY
 2968  0000000                   	PLX
 2969  0000000                   
 2970  0000000                   	ENDM
 2971  0000000                   ;------------------------------------------------------------------------------
 2972  0000000                   PSF_RESPONSE_LIMIT MACRO 
 2973  0000000                   .IF (WITH_PSF_PROJECT .EQ. 1)
 2974  0000000                   .IFDEF ABANDON_STACK
 2975  0000000                   	LDA #80H
 2976  0000000                   	BIT <ABANDON_STACK_FLAG
 2977  0000000                   	BEQ PSF_RESPONSE_LIMIT_END#
 2978  0000000                   	LDA #01H
 2979  0000000                   PSF_RESPONSE_LIMIT_END#:
 2980  0000000                   	TSB <ABANDON_STACK_FLAG
 2981  0000000                   .ENDIF
 2982  0000000                   .ENDIF
 2983  0000000                   	ENDM
 2984  0000000                   ;----------------------------------------------------------------
 2985  0000000                   PSF_RESPONSE_LIMIT_RELEASE MACRO 
 2986  0000000                   .IF (WITH_PSF_PROJECT .EQ. 1)
 2987  0000000                   .IFDEF ABANDON_STACK
 2988  0000000                   	LDA #01H
 2989  0000000                   	BIT <ABANDON_STACK_FLAG
 2990  0000000                   	BNE PSF_RESPONSE_LIMIT_RELEASE_END#
 2991  0000000                   	LDA #80H
 2992  0000000                   PSF_RESPONSE_LIMIT_RELEASE_END#:
 2993  0000000                   	TRB <ABANDON_STACK_FLAG
 2994  0000000                   .ENDIF
 2995  0000000                   .ENDIF
 2996  0000000                   	ENDM	
 2997  0000000                   ;----------------------------------------------------------------
 2998  0000000                   PSF_RESPONSE_LIMIT_JSR MACRO JSR_ADDR
 2999  0000000                   	PSF_RESPONSE_LIMIT
 3000  0000000                   	JSR JSR_ADDR
 3001  0000000                   	PSF_RESPONSE_LIMIT_RELEASE
 3002  0000000                   	ENDM
 3003  0000000                   
 3004  0000000                   
 3005  0000000                   
 3006  0000000                   ;INCLUDE	SYNTH_MACROS.INI
 3007  0000000                   	INCLUDE	"C:\NUVOTON\NSPPLAYLISTEDITOR\V1.13.000\NSP_SDS\SDS_NSP\INCLUDE\HWE_DEFINE.INI.APP"
 3008  0000000                   ;******* SHARED MEMORY *******************************
 3009  0000000                   	INCLUDE	"D:\SOURCECODE\_AVERY_M031\M031BSP_NSP_TWOWIRESAMPLE\NSP_PROJECT\RINGRING_NSP960B\CPUIF\HWE_SHARE_RAM.INI.APP"
 3010  0000000                   HWE_SLD_LEN_BA	EQU	SHM_RAM_BEGIN+102





 3011  0000000                   HWE_SLD_ADDR_BA	EQU	SHM_RAM_BEGIN+102
 3012  0000000                   HWE_CACHE1_EVENT_CHUNK	EQU	SHM_RAM_BEGIN+102
 3013  0000000                   HWE_CACHE1_BA	EQU	SHM_RAM_BEGIN+110
 3014  0000000                   HWE_COLOR_FLY_BA	EQU	SHM_RAM_BEGIN+112
 3015  0000000                   HWE_STATUS_BA		EQU	SHM_RAM_BEGIN+123
 3016  0000000                   HWE_CTRL_BA		EQU	SHM_RAM_BEGIN+125
 3017  0000000                   HWE_CMD_BA		EQU	SHM_RAM_BEGIN+126
 3018  0000000                   HWE_CH1_BA		EQU	SHM_RAM_BEGIN+132
 3019  0000000                   HWE_CH2_BA		EQU	SHM_RAM_BEGIN+133
 3020  0000000                   HWE_CH3_BA		EQU	SHM_RAM_BEGIN+134
 3021  0000000                   HWE_CH_BUSY_BA		EQU	SHM_RAM_BEGIN+140
 3022  0000000                   HWE_INT_TYPE_BA		EQU	SHM_RAM_BEGIN+141
 3023  0000000                   HWE_PLAYBYIDX_BA		EQU	SHM_RAM_BEGIN+117
 3024  0000000                   HWE_NRPN_BA		EQU	SHM_RAM_BEGIN+115
 3025  0000000                   HWE_ENVELOPE_BA		EQU	SHM_RAM_BEGIN+112
 3026  0000000                   
 3027  0000000                   ;SHM_BA					EQU	SHM_RAM_BEGIN
 3028  0000000                   ;HWE_STATUS_BA			EQU	SHM_BA+0
 3029  0000000                   ;HWE_CTRL_BA				EQU	SHM_BA+2
 3030  0000000                   ;HWE_CMD_BA				EQU	SHM_BA+3
 3031  0000000                   ;HWE_CH1_BA				EQU	SHM_BA+9
 3032  0000000                   ;HWE_CH2_BA				EQU	SHM_BA+10
 3033  0000000                   ;HWE_CH3_BA				EQU	SHM_BA+11
 3034  0000000                   ;HWE_CH_BUSY_BA			EQU SHM_BA+17
 3035  0000000                   ;HWE_INT_TYPE_BA			EQU	SHM_BA+18
 3036  0000000                   ;HWE_PLAYBYIDX_BA		EQU SHM_BA+19
 3037  0000000                   ;HWE_NRPN_BA				EQU	SHM_BA+25
 3038  0000000                   ;HWE_ENVELOPE_BA			EQU SHM_BA+27
 3039  0000000                   ;HWE_COLOR_FLY_BA		EQU	SHM_BA+30
 3040  0000000                   ;HWE_CACHE1_BA			EQU	HWE_COLOR_FLY_BA+36
 3041  0000000                   ;HWE_CACHE1_EVENT_CHUNK	EQU HWE_CACHE1_BA+2
 3042  0000000                   ;HWE_SLD_ADDR_BA			EQU	SHM_BA+134
 3043  0000000                   ;HWE_SLD_LEN_BA			EQU HWE_SLD_ADDR_BA+4
 3044  0000000                   
 3045  0000000                   HWE_STATUS_L			EQU 00H
 3046  0000000                   HWE_STATUS_H			EQU 01H
 3047  0000000                   
 3048  0000000                   VOL_CHANGE_GRADUALLY	EQU 01H
 3049  0000000                   VOL_CHANGE_IMMEDIATELY	EQU 00H
 3050  0000000                   
 3051  0000000                   CMD_IDX					EQU 00H
 3052  0000000                   CMD_CH_IDX				EQU 01H
 3053  0000000                   CMD_PARAMETER			EQU 02H
 3054  0000000                   
 3055  0000000                   MIDI_STATUS_OFFSET		EQU	00H
 3056  0000000                   MIDI_TEMP_RATIO_OFFSET	EQU	01H
 3057  0000000                   MIDI_PITCH_OFFSET		EQU 03H
 3058  0000000                   
 3059  0000000                   CACHE_CH				EQU	00H
 3060  0000000                   CACHE_COUNT				EQU	01H
 3061  0000000                   CACHE_EVENT_CHUNK		EQU	02H
 3062  0000000                   
 3063  0000000                   CTL_START_FLAG			EQU 01H
 3064  0000000                   CTL_STANDBY_FLAG		EQU	02H
 3065  0000000                   CTL_SP_CHANGE_FLAG		EQU	04H
 3066  0000000                   CTL_EN_EXT_FLAG			EQU 08H
 3067  0000000                   





 3068  0000000                   ;SLD_CACHE_NUM			EQU 00H
 3069  0000000                   ;SLD_CACHE_EVENT_CHUNK	EQU	02H
 3070  0000000                   
 3071  0000000                   ;******* SYNTHESISER CMD *****************************
 3072  0000000                   CMD_IDLE				EQU 00H
 3073  0000000                   CMD_PLAY				EQU 01H
 3074  0000000                   CMD_STOP				EQU 02H
 3075  0000000                   CMD_PAUSE				EQU 03H
 3076  0000000                   CMD_RESUME				EQU 04H
 3077  0000000                   CMD_MUTE				EQU 05H
 3078  0000000                   CMD_UNMUTE				EQU 06H
 3079  0000000                   CMD_SET_VOL				EQU 07H
 3080  0000000                   CMD_SET_SR				EQU 08H
 3081  0000000                   CMD_SET_PLAY_SEGMENT	EQU 09H
 3082  0000000                   CMD_EN_GLOBAL_VOL		EQU 0CH
 3083  0000000                   CMD_DIS_GLOBAL_VOL		EQU 0DH
 3084  0000000                   CMD_EN_GLOBAL_SR		EQU 0EH
 3085  0000000                   CMD_DIS_GLOBAL_SR		EQU 0FH
 3086  0000000                   CMD_NOTE_ON				EQU 10H
 3087  0000000                   CMD_NOTE_OFF			EQU 11H
 3088  0000000                   CMD_SET_TEMPO			EQU 12H
 3089  0000000                   CMD_SET_PITCH_MS		EQU 13H
 3090  0000000                   CMD_EN_VIBRATO			EQU 14H
 3091  0000000                   CMD_DIS_VIBRATO			EQU 15H
 3092  0000000                   CMD_EN_MODULATION		EQU 16H
 3093  0000000                   CMD_DIS_MODULATION		EQU 17H
 3094  0000000                   CMD_SET_NOTE_PITCH_BEND	EQU 18H
 3095  0000000                   CMD_EN_GLOBAL_INS		EQU 19H
 3096  0000000                   CMD_DIS_GLOBAL_INS		EQU 1AH
 3097  0000000                   CMD_SET_EVP						EQU 1BH
 3098  0000000                   CMD_EN_GLOBAL_PITCH_OFFSET		EQU 1CH
 3099  0000000                   CMD_DIS_GLOBAL_PITCH_OFFSET		EQU 1DH
 3100  0000000                   CMD_EN_ONEKEYONENOTE			EQU 1EH
 3101  0000000                   CMD_DIS_ONEKEYONENOTE			EQU 1FH
 3102  0000000                   CMD_ONEKEYONENOTE_NEXT			EQU 20H
 3103  0000000                   
 3104  0000000                   CMD_EN_COLORFLY					EQU	23H
 3105  0000000                   CMD_DIS_COLORFLY				EQU	24H
 3106  0000000                   CMD_SET_COLORFLY_PARAM			EQU	25H
 3107  0000000                   
 3108  0000000                   CMD_SET_SPEED_SP				EQU 26H
 3109  0000000                   CMD_SET_PITCH_SP				EQU 27H
 3110  0000000                   CMD_PLAY_BY_INDEX				EQU	28H
 3111  0000000                   CMD_PLAY_IN_REVERSE_SP			EQU 29H
 3112  0000000                   CMD_EXT_NOTE_VOL				EQU 2AH
 3113  0000000                   CMD_CHK_EXT_NOTE_BUSY			EQU 2BH
 3114  0000000                   
 3115  0000000                   CMD_INIT_SYS					EQU	0A8H
 3116  0000000                   CMD_LOGIC_BA					EQU 0A9H
 3117  0000000                   CMD_TABLE_BA					EQU 0AAH
 3118  0000000                   
 3119  0000000                   CH_STATUS_GLOBAL_VOL	EQU 01H
 3120  0000000                   CH_STATUS_GLOBAL_SR		EQU 02H
 3121  0000000                   ;CH_STATUS_BZ			EQU 20H
 3122  0000000                   CH_STATUS_PASUE			EQU 40H
 3123  0000000                   CH_STATUS_MUTE			EQU 80H
 3124  0000000                   





 3125  0000000                   CH_SP1_BZ					EQU 01H
 3126  0000000                   CH_SP2_BZ					EQU 02H
 3127  0000000                   CH_SP3_BZ					EQU 04H
 3128  0000000                   CH_EVO1_BZ					EQU 08H
 3129  0000000                   CH_EVO2_BZ					EQU 10H
 3130  0000000                   CH_EVO3_BZ					EQU 20H
 3131  0000000                   CH_MIDI_BZ					EQU 40H
 3132  0000000                   CH_MS_EXT					EQU 80H
 3133  0000000                   
 3134  0000000                   .IF	(CHIPSERIES = 'N589A')
 3135  0000000                   EVO_CHANNEL_BASE		EQU 03H
 3136  0000000                   .ENDIF
 3137  0000000                   .IF	(CHIPSERIES = 'N589B').OR.(CHIPSERIES = 'N589C')
 3138  0000000                   EVO_CHANNEL_BASE		EQU 02H
 3139  0000000                   .ENDIF
 3140  0000000                   .IF	(CHIPSERIES = 'N589D')
 3141  0000000                   EVO_CHANNEL_BASE		EQU 01H
 3142  0000000                   .ENDIF
 3143  0000000                   
 3144  0000000                   WITH_HWE_DEBUG			EQU	0
 3145  0000000                   
 3146  0000000                   ;******* ERROR MESSAGE *******************************
 3147  0000000                   
 3148  0000000                   ERROR_HWE_READY			EQU 00FFH
 3149  0000000                   
 3150  0000000                   
 3151  0000000                   
 3152  0000000                   
 3153  0000000                   
 3154  0000000                   
 3155  0000000                   
 3156  0000000                   	INCLUDE	"C:\NUVOTON\NSPPLAYLISTEDITOR\V1.13.000\NSP_SDS\SDS_NSP\INCLUDE\FLASH_MACROS.INI.APP"
 3157  0000000                   ;***********************************************************************
 3158  0000000                   ;* @file		FLASH_MACROS.ini
 3159  0000000                   ;* @versioin	2.1
 3160  0000000                   ;* @date		2020-01-20
 3161  0000000                   ;* brief 		The file provides all the ISP functions
 3162  0000000                   ;***********************************************************************
 3163  0000000                   
 3164  0000000                   	CHIP	65C02
 3165  0000000                   	INCLUDE	"C:\NUVOTON\NSPPLAYLISTEDITOR\V1.13.000\NSP_SDS\SDS_NSP\INCLUDE\ISP_MACROS.INI.APP"
 3166  0000000                   ;========================================================
 3167  0000000                   ;-----ISP------------------------------------------------
 3168  0000000                   IS_ILLEGAL_DATA_FORMAT MACRO SADDR
 3169  0000000                   	LDX #0
 3170  0000000                   ; mask sure the address is 4 bytes alignment.
 3171  0000000                   	LDA #.LOW.SADDR
 3172  0000000                   	AND #03H
 3173  0000000                   	BEQ IS_ILLEGAL_DATA_END#
 3174  0000000                   
 3175  0000000                   ERROR_DATA_FORMAT#:
 3176  0000000                   	LDX #E1H
 3177  0000000                   IS_ILLEGAL_DATA_END#:
 3178  0000000                   	TXA
 3179  0000000                   	ENDM
 3180  0000000                   ;----------------------------------------------------
 3181  0000000                   IS_ILLEGAL_PAGE_FORMAT MACRO SADDR





 3182  0000000                   	LDX #0
 3183  0000000                   ; mask sure the address is 512 bytes alignment.
 3184  0000000                   	LDA #.LOW.SADDR
 3185  0000000                   	AND #FFH
 3186  0000000                   	BNE ERROR_PAGE_FORMAT#
 3187  0000000                   	LDA #.HIGH.SADDR
 3188  0000000                   	AND #01H
 3189  0000000                   	BNE ERROR_PAGE_FORMAT#
 3190  0000000                   	JMP IS_ILLEGAL_PAGE_END#
 3191  0000000                   
 3192  0000000                   ERROR_PAGE_FORMAT#:
 3193  0000000                   	LDX #E2H
 3194  0000000                   IS_ILLEGAL_PAGE_END#:
 3195  0000000                   	TXA
 3196  0000000                   	ENDM
 3197  0000000                   ;----------------------------------------------------
 3198  0000000                   IS_ILLEGAL_DATA MACRO SADDR
 3199  0000000                   ; mask sure the address is 4 bytes alignment.
 3200  0000000                   	LDA #.LOW.SADDR
 3201  0000000                   	AND #03H
 3202  0000000                   	BEQ IS_ILLEGAL_DATA_END#
 3203  0000000                   	LDA #1
 3204  0000000                   IS_ILLEGAL_DATA_END#:
 3205  0000000                   	ENDM
 3206  0000000                   
 3207  0000000                   ;----------------------------------------------------
 3208  0000000                   IS_ILLEGAL_DATA_DP MACRO PADDR3
 3209  0000000                   ; mask sure the address is 4 bytes alignment.
 3210  0000000                   	LDA PADDR3
 3211  0000000                   	AND #03H
 3212  0000000                   	BEQ IS_ILLEGAL_DATA_END#
 3213  0000000                   	LDA #1
 3214  0000000                   IS_ILLEGAL_DATA_END#:
 3215  0000000                   	ENDM
 3216  0000000                   
 3217  0000000                   ;--------------------------------------------------------
 3218  0000000                   ; @beief	ISP unlock
 3219  0000000                   ;--------------------------------------------------------
 3220  0000000                   ISP_UNLOCK MACRO
 3221  0000000                   .IFDEF DATA_FLASH_SIZE_512
 3222  0000000                   	ISP_UNLOCK1
 3223  0000000                   .ELSE
 3224  0000000                   	.IFDEF DATA_FLASH_SIZE_1024
 3225  0000000                   		ISP_UNLOCK1
 3226  0000000                   	.ELSE
 3227  0000000                   		ISP_UNLOCK2
 3228  0000000                   	.ENDIF
 3229  0000000                   .ENDIF
 3230  0000000                   	ENDM
 3231  0000000                   
 3232  0000000                   ;----------------------------------------------------
 3233  0000000                   ISP_UNLOCK1 MACRO
 3234  0000000                   	LDA #59H
 3235  0000000                   	STA !ISPULK1
 3236  0000000                   	LDA #16H
 3237  0000000                   	STA !ISPULK1
 3238  0000000                   	LDA #88H





 3239  0000000                   	STA !ISPULK1
 3240  0000000                   	ENDM
 3241  0000000                   ;----------------------------------------------------
 3242  0000000                   ISP_UNLOCK2 MACRO
 3243  0000000                   	LDA #A6H
 3244  0000000                   	STA !ISPULK
 3245  0000000                   	LDA #E9H
 3246  0000000                   	STA !ISPULK
 3247  0000000                   	LDA #77H
 3248  0000000                   	STA !ISPULK
 3249  0000000                   	ENDM
 3250  0000000                   ;--------------------------------------------------------
 3251  0000000                   ; @beief	ISP lock
 3252  0000000                   ;--------------------------------------------------------
 3253  0000000                   ISP_LOCK MACRO
 3254  0000000                   .IFDEF DATA_FLASH_SIZE_512
 3255  0000000                   	ISP_LOCK1
 3256  0000000                   .ELSE
 3257  0000000                   	.IFDEF DATA_FLASH_SIZE_1024
 3258  0000000                   		ISP_LOCK1
 3259  0000000                   	.ELSE
 3260  0000000                   		ISP_LOCK2
 3261  0000000                   	.ENDIF
 3262  0000000                   .ENDIF
 3263  0000000                   	ENDM
 3264  0000000                   ;----------------------------------------------------
 3265  0000000                   ISP_LOCK1 MACRO
 3266  0000000                   	STZ !ISPULK1
 3267  0000000                   	ENDM
 3268  0000000                   ;----------------------------------------------------
 3269  0000000                   ISP_LOCK2 MACRO
 3270  0000000                   	STZ !ISPULK
 3271  0000000                   	ENDM	
 3272  0000000                   ;--------------------------------------------------------
 3273  0000000                   ; @brief	Set address
 3274  0000000                   ;--------------------------------------------------------
 3275  0000000                   ISP_SET_ADDR MACRO SENTENCE_ADDR
 3276  0000000                   	LDA	#.LOW.SENTENCE_ADDR
 3277  0000000                   	STA ISPADR0
 3278  0000000                   	LDA	#.HIGH.SENTENCE_ADDR
 3279  0000000                   	STA ISPADR1
 3280  0000000                   	LDA	#.HIGH8.SENTENCE_ADDR
 3281  0000000                   	STA ISPADR2
 3282  0000000                   	ENDM
 3283  0000000                   ;----------------------------------------------------	
 3284  0000000                   ISP_SET_ADDR_DP MACRO PDATA3
 3285  0000000                   	LDA PDATA3
 3286  0000000                   	STA ISPADR0
 3287  0000000                   	LDA PDATA3+1
 3288  0000000                   	STA ISPADR1
 3289  0000000                   	LDA PDATA3+2
 3290  0000000                   	STA ISPADR2
 3291  0000000                   	ENDM
 3292  0000000                   ;----------------------------------------------------
 3293  0000000                   ISP_SET_ADDR_DP_ILI MACRO PDATA
 3294  0000000                   	LDY #0
 3295  0000000                   	LDA (PDATA), Y





 3296  0000000                   	STA ISPADR0
 3297  0000000                   	LDY #1
 3298  0000000                   	LDA (PDATA), Y
 3299  0000000                   	STA ISPADR1
 3300  0000000                   	LDY #2
 3301  0000000                   	LDA (PDATA), Y
 3302  0000000                   	STA ISPADR2
 3303  0000000                   	ENDM	
 3304  0000000                   ;--------------------------------------------------------
 3305  0000000                   ; @brief	Set data
 3306  0000000                   ;--------------------------------------------------------	
 3307  0000000                   ISP_SET_DATA MACRO SENTENCE_DATA
 3308  0000000                   	LDA	#.LOW.SENTENCE_DATA
 3309  0000000                   	STA ISPDAT0
 3310  0000000                   	LDA	#.HIGH.SENTENCE_DATA
 3311  0000000                   	STA ISPDAT1
 3312  0000000                   	LDA	#.HIGH8.SENTENCE_DATA
 3313  0000000                   	STA ISPDAT2
 3314  0000000                   	LDA	#.SEGHIGH.SENTENCE_DATA
 3315  0000000                   	STA ISPDAT3
 3316  0000000                   	ENDM
 3317  0000000                   
 3318  0000000                   ;--------------------------------------------------
 3319  0000000                   ISP_SET_DATA_DP MACRO PDATA4
 3320  0000000                   	LDA PDATA4
 3321  0000000                   	STA ISPDAT0
 3322  0000000                   	LDA PDATA4+1
 3323  0000000                   	STA ISPDAT1
 3324  0000000                   	LDA PDATA4+2
 3325  0000000                   	STA ISPDAT2
 3326  0000000                   	LDA PDATA4+3
 3327  0000000                   	STA ISPDAT3
 3328  0000000                   	ENDM
 3329  0000000                   
 3330  0000000                   ;----------------------------------------------------	
 3331  0000000                   ISP_SET_DATA_DP_ILI MACRO PDATA
 3332  0000000                   	LDY #0
 3333  0000000                   	LDA (PDATA), Y
 3334  0000000                   	STA ISPDAT0
 3335  0000000                   	LDY #1
 3336  0000000                   	LDA (PDATA), Y
 3337  0000000                   	STA ISPDAT1
 3338  0000000                   	LDY #2
 3339  0000000                   	LDA (PDATA), Y
 3340  0000000                   	STA ISPDAT2
 3341  0000000                   	LDY #3
 3342  0000000                   	LDA (PDATA), Y
 3343  0000000                   	STA ISPDAT3
 3344  0000000                   	ENDM
 3345  0000000                   ;----------------------------------------------------	
 3346  0000000                   ISP_SET_DATA_DP_ILI_X MACRO PDATA, NUM
 3347  0000000                   
 3348  0000000                   	LDY #0
 3349  0000000                   ISP_SET_DATA_DP_ILI_X_LOOP#:
 3350  0000000                   	LDA (PDATA), Y
 3351  0000000                   	STA ISPDAT0, Y
 3352  0000000                   





 3353  0000000                   	INY
 3354  0000000                   	CPY NUM
 3355  0000000                   	BEQ ISP_SET_DATA_DP_ILI_X_LOOP_END#
 3356  0000000                   
 3357  0000000                   	JMP ISP_SET_DATA_DP_ILI_X_LOOP#
 3358  0000000                   
 3359  0000000                   ISP_SET_DATA_DP_ILI_X_LOOP_END#:
 3360  0000000                   
 3361  0000000                   	ENDM	
 3362  0000000                   ;--------------------------------------------------------
 3363  0000000                   ; @brief	Get data
 3364  0000000                   ;--------------------------------------------------------	
 3365  0000000                   ISP_GET_DATA_DP MACRO PDATA4
 3366  0000000                   	LDA ISPDAT0
 3367  0000000                   	STA PDATA4
 3368  0000000                   	LDA ISPDAT1
 3369  0000000                   	STA PDATA4+1
 3370  0000000                   	LDA ISPDAT2
 3371  0000000                   	STA PDATA4+2
 3372  0000000                   	LDA ISPDAT3
 3373  0000000                   	STA PDATA4+3
 3374  0000000                   
 3375  0000000                   	ENDM
 3376  0000000                   ;----------------------------------------------------	
 3377  0000000                   ISP_GET_DATA_DP_X MACRO PDATA, NUM
 3378  0000000                   
 3379  0000000                   	LDY #0
 3380  0000000                   ISP_GET_DATA_DP_X_LOOP#:
 3381  0000000                   	LDA ISPDAT0,Y
 3382  0000000                   	STA PDATA,Y
 3383  0000000                   
 3384  0000000                   	INY
 3385  0000000                   	CPY NUM
 3386  0000000                   	BEQ ISP_GET_DATA_DP_X_LOOP_END#
 3387  0000000                   
 3388  0000000                   	JMP ISP_GET_DATA_DP_X_LOOP#
 3389  0000000                   
 3390  0000000                   ISP_GET_DATA_DP_X_LOOP_END#:
 3391  0000000                   	ENDM
 3392  0000000                   ;----------------------------------------------------	
 3393  0000000                   ISP_GET_DATA_DP_ILI MACRO PDATA
 3394  0000000                   	LDY #0
 3395  0000000                   	LDA ISPDAT0
 3396  0000000                   	STA (PDATA),Y
 3397  0000000                   	LDY #1
 3398  0000000                   	LDA ISPDAT1
 3399  0000000                   	STA (PDATA),Y
 3400  0000000                   	LDY #2
 3401  0000000                   	LDA ISPDAT2
 3402  0000000                   	STA (PDATA),Y
 3403  0000000                   	LDY #3
 3404  0000000                   	LDA ISPDAT3
 3405  0000000                   	STA (PDATA),Y
 3406  0000000                   
 3407  0000000                   	ENDM
 3408  0000000                   ;----------------------------------------------------	
 3409  0000000                   ISP_GET_DATA_DP_ILI_X MACRO PDATA, NUM





 3410  0000000                   
 3411  0000000                   	LDY #0
 3412  0000000                   ISP_GET_DATA_DP_ILI_X_LOOP#:
 3413  0000000                   	LDA ISPDAT0,Y
 3414  0000000                   	STA (PDATA),Y
 3415  0000000                   
 3416  0000000                   	INY
 3417  0000000                   	CPY NUM
 3418  0000000                   	BEQ ISP_GET_DATA_DP_ILI_X_LOOP_END#
 3419  0000000                   
 3420  0000000                   	JMP ISP_GET_DATA_DP_ILI_X_LOOP#
 3421  0000000                   
 3422  0000000                   ISP_GET_DATA_DP_ILI_X_LOOP_END#:
 3423  0000000                   	ENDM
 3424  0000000                   ;--------------------------------------------------------
 3425  0000000                   ; @brief	ISP read data
 3426  0000000                   ;--------------------------------------------------------
 3427  0000000                   ISP_READ_DATA MACRO SADDR, PDATA4
 3428  0000000                   	ISP_UNLOCK
 3429  0000000                   
 3430  0000000                   	ISP_SET_ADDR SADDR
 3431  0000000                   
 3432  0000000                   	LDA	#(ISP_EN + ISP_ERR_FLAG)
 3433  0000000                   	TSB !ISPCON
 3434  0000000                   	LDA #ISP_CMD_READ
 3435  0000000                   	STA !ISPCMD	
 3436  0000000                   
 3437  0000000                   	LDA #ISP_DONE
 3438  0000000                   	TSB !ISPTRG
 3439  0000000                   
 3440  0000000                   	LDA !ISPCON
 3441  0000000                   	AND #ISP_ERR_FLAG
 3442  0000000                   	BEQ POLLING_ISP_READ_TRG#
 3443  0000000                   	LDA #01H
 3444  0000000                   	JMP	ISP_READ_DATA_END#
 3445  0000000                   
 3446  0000000                   POLLING_ISP_READ_TRG#:
 3447  0000000                   	LDA !ISPTRG
 3448  0000000                   	AND #ISP_DONE
 3449  0000000                   	BNE POLLING_ISP_READ_TRG#
 3450  0000000                   
 3451  0000000                   	ISP_GET_DATA_DP PDATA4
 3452  0000000                   
 3453  0000000                   READ_OK#:
 3454  0000000                   	LDA #00H
 3455  0000000                   
 3456  0000000                   ISP_READ_DATA_END#:
 3457  0000000                   	PHA
 3458  0000000                   	ISP_LOCK
 3459  0000000                   	PLA
 3460  0000000                   	ENDM
 3461  0000000                   
 3462  0000000                   ;----------------------------------------------------
 3463  0000000                   ISP_READ_DATA_DP MACRO PADDR3, PDATA4
 3464  0000000                   	ISP_UNLOCK
 3465  0000000                   
 3466  0000000                   	ISP_SET_ADDR_DP PADDR3





 3467  0000000                   
 3468  0000000                   	LDA	#(ISP_EN + ISP_ERR_FLAG)
 3469  0000000                   	TSB !ISPCON
 3470  0000000                   	LDA #ISP_CMD_READ
 3471  0000000                   	STA !ISPCMD	
 3472  0000000                   
 3473  0000000                   	LDA #ISP_DONE
 3474  0000000                   	TSB !ISPTRG
 3475  0000000                   
 3476  0000000                   	LDA !ISPCON
 3477  0000000                   	AND #ISP_ERR_FLAG
 3478  0000000                   	BEQ POLLING_ISP_READ_TRG#
 3479  0000000                   	LDA #01H
 3480  0000000                   	JMP	ISP_READ_DATA_END#
 3481  0000000                   
 3482  0000000                   POLLING_ISP_READ_TRG#:
 3483  0000000                   	LDA !ISPTRG
 3484  0000000                   	AND #ISP_DONE
 3485  0000000                   	BNE POLLING_ISP_READ_TRG#
 3486  0000000                   
 3487  0000000                   	ISP_GET_DATA_DP PDATA4
 3488  0000000                   
 3489  0000000                   READ_OK#:
 3490  0000000                   	LDA #00H
 3491  0000000                   
 3492  0000000                   ISP_READ_DATA_END#:
 3493  0000000                   	PHA
 3494  0000000                   	ISP_LOCK
 3495  0000000                   	PLA
 3496  0000000                   	ENDM
 3497  0000000                   ;----------------------------------------------------
 3498  0000000                   ISP_READ_DATA_DP_X MACRO PADDR3, PDATA, NUM
 3499  0000000                   	ISP_UNLOCK
 3500  0000000                   
 3501  0000000                   	ISP_SET_ADDR_DP PADDR3
 3502  0000000                   
 3503  0000000                   	LDA	#(ISP_EN + ISP_ERR_FLAG)
 3504  0000000                   	TSB !ISPCON
 3505  0000000                   	LDA #ISP_CMD_READ
 3506  0000000                   	STA !ISPCMD	
 3507  0000000                   
 3508  0000000                   	LDA #ISP_DONE
 3509  0000000                   	TSB !ISPTRG
 3510  0000000                   
 3511  0000000                   	LDA !ISPCON
 3512  0000000                   	AND #ISP_ERR_FLAG
 3513  0000000                   	BEQ POLLING_ISP_READ_TRG#
 3514  0000000                   	LDA #01H
 3515  0000000                   	JMP	ISP_READ_DATA_END#
 3516  0000000                   
 3517  0000000                   POLLING_ISP_READ_TRG#:
 3518  0000000                   	LDA !ISPTRG
 3519  0000000                   	AND #ISP_DONE
 3520  0000000                   	BNE POLLING_ISP_READ_TRG#
 3521  0000000                   
 3522  0000000                   	ISP_GET_DATA_DP_X PDATA, NUM
 3523  0000000                   





 3524  0000000                   READ_OK#:
 3525  0000000                   	LDA #00H
 3526  0000000                   
 3527  0000000                   ISP_READ_DATA_END#:
 3528  0000000                   	PHA
 3529  0000000                   	ISP_LOCK
 3530  0000000                   	PLA
 3531  0000000                   
 3532  0000000                   	ENDM
 3533  0000000                   ;----------------------------------------------------
 3534  0000000                   ISP_READ_DATA_DP_ILI MACRO PADDR3, PDATA
 3535  0000000                   	ISP_UNLOCK
 3536  0000000                   
 3537  0000000                   	ISP_SET_ADDR_DP PADDR3
 3538  0000000                   
 3539  0000000                   	LDA	#(ISP_EN + ISP_ERR_FLAG)
 3540  0000000                   	TSB !ISPCON
 3541  0000000                   	LDA #ISP_CMD_READ
 3542  0000000                   	STA !ISPCMD	
 3543  0000000                   
 3544  0000000                   	LDA #ISP_DONE
 3545  0000000                   	TSB !ISPTRG
 3546  0000000                   
 3547  0000000                   	LDA !ISPCON
 3548  0000000                   	AND #ISP_ERR_FLAG
 3549  0000000                   	BEQ POLLING_ISP_READ_TRG#
 3550  0000000                   	LDA #01H
 3551  0000000                   	JMP	ISP_READ_DATA_END#
 3552  0000000                   
 3553  0000000                   POLLING_ISP_READ_TRG#:
 3554  0000000                   	LDA !ISPTRG
 3555  0000000                   	AND #ISP_DONE
 3556  0000000                   	BNE POLLING_ISP_READ_TRG#
 3557  0000000                   
 3558  0000000                   	ISP_GET_DATA_DP_ILI .LOW.PDATA
 3559  0000000                   
 3560  0000000                   READ_OK#:
 3561  0000000                   	LDA #00H
 3562  0000000                   
 3563  0000000                   ISP_READ_DATA_END#:
 3564  0000000                   	PHA
 3565  0000000                   	ISP_LOCK
 3566  0000000                   	PLA
 3567  0000000                   
 3568  0000000                   	ENDM
 3569  0000000                   ;----------------------------------------------------
 3570  0000000                   ISP_READ_DATA_DP_ILI_X MACRO PADDR3, PDATA, NUM
 3571  0000000                   	ISP_UNLOCK
 3572  0000000                   
 3573  0000000                   	ISP_SET_ADDR_DP PADDR3
 3574  0000000                   
 3575  0000000                   	LDA	#(ISP_EN + ISP_ERR_FLAG)
 3576  0000000                   	TSB !ISPCON
 3577  0000000                   	LDA #ISP_CMD_READ
 3578  0000000                   	STA !ISPCMD	
 3579  0000000                   
 3580  0000000                   	LDA #ISP_DONE





 3581  0000000                   	TSB !ISPTRG
 3582  0000000                   
 3583  0000000                   	LDA !ISPCON
 3584  0000000                   	AND #ISP_ERR_FLAG
 3585  0000000                   	BEQ POLLING_ISP_READ_TRG#
 3586  0000000                   	LDA #01H
 3587  0000000                   	JMP	ISP_READ_DATA_END#
 3588  0000000                   
 3589  0000000                   POLLING_ISP_READ_TRG#:
 3590  0000000                   	LDA !ISPTRG
 3591  0000000                   	AND #ISP_DONE
 3592  0000000                   	BNE POLLING_ISP_READ_TRG#
 3593  0000000                   
 3594  0000000                   	ISP_GET_DATA_DP_ILI_X .LOW.PDATA, NUM
 3595  0000000                   
 3596  0000000                   READ_OK#:
 3597  0000000                   	LDA #00H
 3598  0000000                   
 3599  0000000                   ISP_READ_DATA_END#:
 3600  0000000                   	PHA
 3601  0000000                   	ISP_LOCK
 3602  0000000                   	PLA
 3603  0000000                   
 3604  0000000                   	ENDM
 3605  0000000                   ;--------------------------------------------------------
 3606  0000000                   ; @brief	ISP verify data
 3607  0000000                   ;--------------------------------------------------------
 3608  0000000                   ISP_VERIFY_DATA MACRO SADDR, PDATA4
 3609  0000000                   	ISP_UNLOCK
 3610  0000000                   
 3611  0000000                   	ISP_SET_ADDR SADDR
 3612  0000000                   
 3613  0000000                   	LDA	#(ISP_EN + ISP_ERR_FLAG)
 3614  0000000                   	TSB !ISPCON
 3615  0000000                   	LDA #ISP_CMD_READ
 3616  0000000                   	STA !ISPCMD	
 3617  0000000                   
 3618  0000000                   	LDA #ISP_DONE
 3619  0000000                   	TSB !ISPTRG
 3620  0000000                   
 3621  0000000                   	LDA !ISPCON
 3622  0000000                   	AND #ISP_ERR_FLAG
 3623  0000000                   	BEQ POLLING_ISP_READ_TRG#
 3624  0000000                   	LDA #01H
 3625  0000000                   	JMP	ISP_VERIFY_DATA_END#
 3626  0000000                   
 3627  0000000                   POLLING_ISP_READ_TRG#:
 3628  0000000                   	LDA !ISPTRG
 3629  0000000                   	AND #ISP_DONE
 3630  0000000                   	BNE POLLING_ISP_READ_TRG#
 3631  0000000                   
 3632  0000000                   ; VERIFY DATA
 3633  0000000                   	PHX
 3634  0000000                   	LDX #0
 3635  0000000                   VERIFY_DAT_LOOP#:
 3636  0000000                   	LDA ISPDAT0,X
 3637  0000000                   	CMP PDATA4,X





 3638  0000000                   	BEQ 3
 3639  0000000                   	JMP VERIFY_NG#
 3640  0000000                   
 3641  0000000                   	INX
 3642  0000000                   	CPX #4
 3643  0000000                   	BEQ 3 
 3644  0000000                   	JMP VERIFY_DAT_LOOP#
 3645  0000000                   VERIFY_OK#:
 3646  0000000                   	LDA #00H
 3647  0000000                   	JMP VERIFY_DATA_END#
 3648  0000000                   VERIFY_NG#:
 3649  0000000                   	LDA #04H
 3650  0000000                   VERIFY_DATA_END#
 3651  0000000                   	PLX
 3652  0000000                   
 3653  0000000                   ISP_VERIFY_DATA_END#:
 3654  0000000                   	PHA
 3655  0000000                   	ISP_LOCK
 3656  0000000                   	PLA
 3657  0000000                   	ENDM
 3658  0000000                   ;----------------------------------------------------
 3659  0000000                   ISP_VERIFY_DATA_DP MACRO PADDR3, PDATA4
 3660  0000000                   	ISP_UNLOCK
 3661  0000000                   
 3662  0000000                   	ISP_SET_ADDR_DP PADDR3
 3663  0000000                   
 3664  0000000                   	LDA	#(ISP_EN + ISP_ERR_FLAG)
 3665  0000000                   	TSB !ISPCON
 3666  0000000                   	LDA #ISP_CMD_READ
 3667  0000000                   	STA !ISPCMD
 3668  0000000                   
 3669  0000000                   	LDA #ISP_DONE
 3670  0000000                   	TSB !ISPTRG
 3671  0000000                   
 3672  0000000                   	LDA !ISPCON
 3673  0000000                   	AND #ISP_ERR_FLAG
 3674  0000000                   	BEQ POLLING_ISP_READ_TRG#
 3675  0000000                   	LDA #01H
 3676  0000000                   	JMP	ISP_VERIFY_DATA_DP_END#
 3677  0000000                   
 3678  0000000                   POLLING_ISP_READ_TRG#:
 3679  0000000                   	LDA !ISPTRG
 3680  0000000                   	AND #ISP_DONE
 3681  0000000                   	BNE POLLING_ISP_READ_TRG#
 3682  0000000                   
 3683  0000000                   ; VERIFY DATA
 3684  0000000                   	PHX
 3685  0000000                   	LDX #0
 3686  0000000                   VERIFY_DAT_LOOP#:
 3687  0000000                   	LDA ISPDAT0,X
 3688  0000000                   	CMP PDATA4,X
 3689  0000000                   	BEQ 3
 3690  0000000                   	JMP VERIFY_NG#
 3691  0000000                   
 3692  0000000                   	INX
 3693  0000000                   	CPX #4
 3694  0000000                   	BEQ 3 





 3695  0000000                   	JMP VERIFY_DAT_LOOP#
 3696  0000000                   VERIFY_OK#:
 3697  0000000                   	LDA #00H
 3698  0000000                   	JMP VERIFY_DATA_END#
 3699  0000000                   VERIFY_NG#:
 3700  0000000                   	LDA #04H
 3701  0000000                   VERIFY_DATA_END#
 3702  0000000                   	PLX
 3703  0000000                   
 3704  0000000                   ISP_VERIFY_DATA_DP_END#:
 3705  0000000                   	PHA
 3706  0000000                   	ISP_LOCK
 3707  0000000                   	PLA
 3708  0000000                   	ENDM
 3709  0000000                   ;----------------------------------------------------
 3710  0000000                   ISP_VERIFY_DATA_DP_ILI MACRO PADDR3, PDATA4
 3711  0000000                   	ISP_UNLOCK
 3712  0000000                   
 3713  0000000                   	ISP_SET_ADDR_DP PADDR3
 3714  0000000                   
 3715  0000000                   	LDA	#(ISP_EN + ISP_ERR_FLAG)
 3716  0000000                   	TSB !ISPCON
 3717  0000000                   	LDA #ISP_CMD_READ
 3718  0000000                   	STA !ISPCMD
 3719  0000000                   
 3720  0000000                   	LDA #ISP_DONE
 3721  0000000                   	TSB !ISPTRG
 3722  0000000                   
 3723  0000000                   	LDA !ISPCON
 3724  0000000                   	AND #ISP_ERR_FLAG
 3725  0000000                   	BEQ POLLING_ISP_READ_TRG#
 3726  0000000                   	LDA #01H
 3727  0000000                   	JMP	ISP_VERIFY_DATA_DP_ILI_END#
 3728  0000000                   
 3729  0000000                   POLLING_ISP_READ_TRG#:
 3730  0000000                   	LDA !ISPTRG
 3731  0000000                   	AND #ISP_DONE
 3732  0000000                   	BNE POLLING_ISP_READ_TRG#
 3733  0000000                   
 3734  0000000                   ; VERIFY DATA
 3735  0000000                   	PHY
 3736  0000000                   	LDY #0
 3737  0000000                   VERIFY_DAT_LOOP#:
 3738  0000000                   	LDA ISPDAT0,Y
 3739  0000000                   	CMP (PDATA4),Y
 3740  0000000                   	BEQ 3
 3741  0000000                   	JMP VERIFY_NG#
 3742  0000000                   
 3743  0000000                   	INY
 3744  0000000                   	CPY #4
 3745  0000000                   	BEQ 3 
 3746  0000000                   	JMP VERIFY_DAT_LOOP#
 3747  0000000                   VERIFY_OK#:
 3748  0000000                   	LDA #00H
 3749  0000000                   	JMP VERIFY_DATA_END#
 3750  0000000                   VERIFY_NG#:
 3751  0000000                   	LDA #04H





 3752  0000000                   VERIFY_DATA_END#
 3753  0000000                   	PLY
 3754  0000000                   
 3755  0000000                   ISP_VERIFY_DATA_DP_ILI_END#:
 3756  0000000                   	PHA
 3757  0000000                   	ISP_LOCK
 3758  0000000                   	PLA
 3759  0000000                   	ENDM
 3760  0000000                   ;----------------------------------------------------
 3761  0000000                   ISP_VERIFY_DATA_DP_ILI_X MACRO PADDR3, PDATA4, NUM
 3762  0000000                   	ISP_UNLOCK
 3763  0000000                   
 3764  0000000                   	ISP_SET_ADDR_DP PADDR3
 3765  0000000                   
 3766  0000000                   	LDA	#(ISP_EN + ISP_ERR_FLAG)
 3767  0000000                   	TSB !ISPCON
 3768  0000000                   	LDA #ISP_CMD_READ
 3769  0000000                   	STA !ISPCMD
 3770  0000000                   
 3771  0000000                   	LDA #ISP_DONE
 3772  0000000                   	TSB !ISPTRG
 3773  0000000                   
 3774  0000000                   	LDA !ISPCON
 3775  0000000                   	AND #ISP_ERR_FLAG
 3776  0000000                   	BEQ POLLING_ISP_READ_TRG#
 3777  0000000                   	LDA #01H
 3778  0000000                   	JMP	ISP_VERIFY_DATA_DP_ILI_X_END#
 3779  0000000                   
 3780  0000000                   POLLING_ISP_READ_TRG#:
 3781  0000000                   	LDA !ISPTRG
 3782  0000000                   	AND #ISP_DONE
 3783  0000000                   	BNE POLLING_ISP_READ_TRG#
 3784  0000000                   
 3785  0000000                   ; VERIFY DATA
 3786  0000000                   	PHY
 3787  0000000                   	LDY #0
 3788  0000000                   VERIFY_DAT_LOOP#:
 3789  0000000                   	LDA ISPDAT0,Y
 3790  0000000                   	CMP (PDATA4),Y
 3791  0000000                   	BEQ 3
 3792  0000000                   	JMP VERIFY_NG#
 3793  0000000                   
 3794  0000000                   	INY
 3795  0000000                   	CPY NUM
 3796  0000000                   	BEQ 3 
 3797  0000000                   	JMP VERIFY_DAT_LOOP#
 3798  0000000                   VERIFY_OK#:
 3799  0000000                   	LDA #00H
 3800  0000000                   	JMP VERIFY_DATA_END#
 3801  0000000                   VERIFY_NG#:
 3802  0000000                   	LDA #04H
 3803  0000000                   VERIFY_DATA_END#
 3804  0000000                   	PLY
 3805  0000000                   
 3806  0000000                   ISP_VERIFY_DATA_DP_ILI_X_END#:
 3807  0000000                   	PHA
 3808  0000000                   	ISP_LOCK





 3809  0000000                   	PLA
 3810  0000000                   	ENDM
 3811  0000000                   ;--------------------------------------------------------
 3812  0000000                   ; @brief	ISP write data
 3813  0000000                   ;--------------------------------------------------------
 3814  0000000                   ISP_WRITE_DATA MACRO SADDR, PDATA4
 3815  0000000                   	ISP_UNLOCK
 3816  0000000                   
 3817  0000000                   	ISP_SET_DATA_DP PDATA4
 3818  0000000                   	ISP_SET_ADDR SADDR
 3819  0000000                   
 3820  0000000                   	LDA	#(ISP_EN + ISP_EN_PP + ISP_ERR_FLAG)
 3821  0000000                   	TSB !ISPCON
 3822  0000000                   	LDA #ISP_CMD_PROGRAM
 3823  0000000                   	STA !ISPCMD	
 3824  0000000                   
 3825  0000000                   	LDA #ISP_DONE
 3826  0000000                   	TSB !ISPTRG
 3827  0000000                   
 3828  0000000                   	LDA !ISPCON
 3829  0000000                   	AND #ISP_ERR_FLAG
 3830  0000000                   	BEQ POLLING_ISP_WRITE_TRG#
 3831  0000000                   	LDA #03H
 3832  0000000                   	JMP	ISP_WRITE_DATA_END#
 3833  0000000                   
 3834  0000000                   POLLING_ISP_WRITE_TRG#:
 3835  0000000                   	LDA !ISPTRG
 3836  0000000                   	AND #ISP_DONE
 3837  0000000                   	BNE POLLING_ISP_WRITE_TRG#
 3838  0000000                   
 3839  0000000                   WRITE_OK#:
 3840  0000000                   	LDA #00H
 3841  0000000                   
 3842  0000000                   ISP_WRITE_DATA_END#:
 3843  0000000                   	PHA
 3844  0000000                   	ISP_LOCK
 3845  0000000                   	PLA
 3846  0000000                   	ENDM
 3847  0000000                   ;----------------------------------------------------
 3848  0000000                   ISP_WRITE_DATA_DP MACRO PADDR3, PDATA4
 3849  0000000                   	ISP_UNLOCK
 3850  0000000                   
 3851  0000000                   	ISP_SET_DATA_DP PDATA4
 3852  0000000                   	ISP_SET_ADDR_DP PADDR3
 3853  0000000                   
 3854  0000000                   	LDA	#(ISP_EN + ISP_EN_PP + ISP_ERR_FLAG)
 3855  0000000                   	TSB !ISPCON
 3856  0000000                   	LDA #ISP_CMD_PROGRAM
 3857  0000000                   	STA !ISPCMD	
 3858  0000000                   
 3859  0000000                   	LDA #ISP_DONE
 3860  0000000                   	TSB !ISPTRG
 3861  0000000                   
 3862  0000000                   	LDA !ISPCON
 3863  0000000                   	AND #ISP_ERR_FLAG
 3864  0000000                   	BEQ POLLING_ISP_WRITE_TRG#
 3865  0000000                   	LDA #03H





 3866  0000000                   	JMP	ISP_WRITE_DATA_END#
 3867  0000000                   
 3868  0000000                   POLLING_ISP_WRITE_TRG#:
 3869  0000000                   	LDA !ISPTRG
 3870  0000000                   	AND #ISP_DONE
 3871  0000000                   	BNE POLLING_ISP_WRITE_TRG#
 3872  0000000                   
 3873  0000000                   WRITE_OK#:
 3874  0000000                   	LDA #00H
 3875  0000000                   
 3876  0000000                   ISP_WRITE_DATA_END#:
 3877  0000000                   	PHA
 3878  0000000                   	ISP_LOCK
 3879  0000000                   	PLA
 3880  0000000                   	ENDM
 3881  0000000                   
 3882  0000000                   ;----------------------------------------------------
 3883  0000000                   ISP_WRITE_DATA_DP_ILI MACRO PADDR3, PDATA
 3884  0000000                   	ISP_UNLOCK
 3885  0000000                   
 3886  0000000                   	ISP_SET_DATA_DP_ILI .LOW.PDATA
 3887  0000000                   	ISP_SET_ADDR_DP PADDR3
 3888  0000000                   
 3889  0000000                   	LDA	#(ISP_EN + ISP_EN_PP + ISP_ERR_FLAG)
 3890  0000000                   	TSB !ISPCON
 3891  0000000                   	LDA #ISP_CMD_PROGRAM
 3892  0000000                   	STA !ISPCMD	
 3893  0000000                   
 3894  0000000                   	LDA #ISP_DONE
 3895  0000000                   	TSB !ISPTRG
 3896  0000000                   
 3897  0000000                   	LDA !ISPCON
 3898  0000000                   	AND #ISP_ERR_FLAG
 3899  0000000                   	BEQ POLLING_ISP_WRITE_TRG#
 3900  0000000                   	LDA #03H
 3901  0000000                   	JMP	ISP_WRITE_DATA_END#
 3902  0000000                   
 3903  0000000                   POLLING_ISP_WRITE_TRG#:
 3904  0000000                   	LDA !ISPTRG
 3905  0000000                   	AND #ISP_DONE
 3906  0000000                   	BNE POLLING_ISP_WRITE_TRG#
 3907  0000000                   
 3908  0000000                   WRITE_OK#:
 3909  0000000                   	LDA #00H
 3910  0000000                   
 3911  0000000                   ISP_WRITE_DATA_END#:
 3912  0000000                   	PHA
 3913  0000000                   	ISP_LOCK
 3914  0000000                   	PLA
 3915  0000000                   	ENDM
 3916  0000000                   ;----------------------------------------------------
 3917  0000000                   ISP_WRITE_DATA_DP_ILI_X MACRO PADDR3, PDATA, NUM
 3918  0000000                   	ISP_UNLOCK
 3919  0000000                   
 3920  0000000                   	LDA #FFH
 3921  0000000                   	STA !ISPDAT0
 3922  0000000                   	STA !ISPDAT1





 3923  0000000                   	STA !ISPDAT2
 3924  0000000                   	STA !ISPDAT3
 3925  0000000                   
 3926  0000000                   	ISP_SET_DATA_DP_ILI_X .LOW.PDATA, NUM
 3927  0000000                   	ISP_SET_ADDR_DP PADDR3
 3928  0000000                   
 3929  0000000                   	LDA	#(ISP_EN + ISP_EN_PP + ISP_ERR_FLAG)
 3930  0000000                   	TSB !ISPCON
 3931  0000000                   	LDA #ISP_CMD_PROGRAM
 3932  0000000                   	STA !ISPCMD	
 3933  0000000                   
 3934  0000000                   	LDA #ISP_DONE
 3935  0000000                   	TSB !ISPTRG
 3936  0000000                   
 3937  0000000                   	LDA !ISPCON
 3938  0000000                   	AND #ISP_ERR_FLAG
 3939  0000000                   	BEQ POLLING_ISP_WRITE_TRG#
 3940  0000000                   	LDA #03H
 3941  0000000                   	JMP	ISP_WRITE_DATA_END#
 3942  0000000                   
 3943  0000000                   POLLING_ISP_WRITE_TRG#:
 3944  0000000                   	LDA !ISPTRG
 3945  0000000                   	AND #ISP_DONE
 3946  0000000                   	BNE POLLING_ISP_WRITE_TRG#
 3947  0000000                   
 3948  0000000                   WRITE_OK#:
 3949  0000000                   	LDA #00H
 3950  0000000                   
 3951  0000000                   ISP_WRITE_DATA_END#:
 3952  0000000                   	PHA
 3953  0000000                   	ISP_LOCK
 3954  0000000                   	PLA
 3955  0000000                   	ENDM
 3956  0000000                   ;--------------------------------------------------------
 3957  0000000                   ; @brief	ISP erase page
 3958  0000000                   ;--------------------------------------------------------
 3959  0000000                   ISP_ERASE_PAGE MACRO SADDR
 3960  0000000                   	ISP_UNLOCK
 3961  0000000                   
 3962  0000000                   	ISP_SET_ADDR SADDR
 3963  0000000                   
 3964  0000000                   	LDA	#(ISP_EN + ISP_EN_PP + ISP_ERR_FLAG)
 3965  0000000                   	TSB !ISPCON
 3966  0000000                   	LDA #ISP_CMD_ERASE_PAGE
 3967  0000000                   	STA !ISPCMD	
 3968  0000000                   
 3969  0000000                   	LDA #ISP_DONE
 3970  0000000                   	TSB !ISPTRG
 3971  0000000                   
 3972  0000000                   	LDA !ISPCON
 3973  0000000                   	AND #ISP_ERR_FLAG
 3974  0000000                   	BEQ POLLING_ISP_ERASE_TRG#
 3975  0000000                   	LDA #05H
 3976  0000000                   	JMP	ISP_ERASE_PAGE_END#
 3977  0000000                   
 3978  0000000                   POLLING_ISP_ERASE_TRG#:
 3979  0000000                   	LDA !ISPTRG





 3980  0000000                   	AND #ISP_DONE
 3981  0000000                   	BNE POLLING_ISP_ERASE_TRG#
 3982  0000000                   
 3983  0000000                   ERASE_OK#:
 3984  0000000                   	LDA #00H
 3985  0000000                   
 3986  0000000                   ISP_ERASE_PAGE_END#:
 3987  0000000                   	PHA
 3988  0000000                   	ISP_LOCK
 3989  0000000                   	PLA
 3990  0000000                   	ENDM
 3991  0000000                   ;----------------------------------------------------
 3992  0000000                   ISP_ERASE_PAGE_DP MACRO PADDR3
 3993  0000000                   	ISP_UNLOCK
 3994  0000000                   
 3995  0000000                   	ISP_SET_ADDR_DP PADDR3
 3996  0000000                   
 3997  0000000                   	LDA	#(ISP_EN + ISP_EN_PP + ISP_ERR_FLAG)
 3998  0000000                   	TSB !ISPCON
 3999  0000000                   	LDA #ISP_CMD_ERASE_PAGE
 4000  0000000                   	STA !ISPCMD	
 4001  0000000                   
 4002  0000000                   	LDA #ISP_DONE
 4003  0000000                   	TSB !ISPTRG
 4004  0000000                   
 4005  0000000                   	LDA !ISPCON
 4006  0000000                   	AND #ISP_ERR_FLAG
 4007  0000000                   	BEQ POLLING_ISP_ERASE_TRG#
 4008  0000000                   	LDA #05H
 4009  0000000                   	JMP	ISP_ERASE_PAGE_END#
 4010  0000000                   
 4011  0000000                   POLLING_ISP_ERASE_TRG#:
 4012  0000000                   	LDA !ISPTRG
 4013  0000000                   	AND #ISP_DONE
 4014  0000000                   	BNE POLLING_ISP_ERASE_TRG#
 4015  0000000                   
 4016  0000000                   ERASE_OK#:
 4017  0000000                   	LDA #00H
 4018  0000000                   
 4019  0000000                   ISP_ERASE_PAGE_END#:
 4020  0000000                   	PHA
 4021  0000000                   	ISP_LOCK
 4022  0000000                   	PLA
 4023  0000000                   	ENDM
 4024  0000000                   
 4025  0000000                   ;--------------------------------------------------------
 4026  0000000                   ; @brief	ISP read ID	
 4027  0000000                   ;--------------------------------------------------------
 4028  0000000                   ISP_READ_CID MACRO PDATA
 4029  0000000                   	ISP_UNLOCK
 4030  0000000                   
 4031  0000000                   	LDA	#(ISP_EN + ISP_ERR_FLAG)
 4032  0000000                   	TSB !ISPCON
 4033  0000000                   	LDA #ISP_CMD_CID
 4034  0000000                   	STA !ISPCMD	
 4035  0000000                   
 4036  0000000                   	LDA #ISP_DONE





 4037  0000000                   	TSB !ISPTRG
 4038  0000000                   
 4039  0000000                   	LDA !ISPCON
 4040  0000000                   	AND #ISP_ERR_FLAG
 4041  0000000                   	BEQ POLLING_ISP_READ_CID_TRG#
 4042  0000000                   	JMP	ISP_READ_CID_END#
 4043  0000000                   
 4044  0000000                   POLLING_ISP_READ_CID_TRG#:
 4045  0000000                   	LDA !ISPTRG
 4046  0000000                   	AND #ISP_DONE
 4047  0000000                   	BNE POLLING_ISP_READ_TRG#
 4048  0000000                   
 4049  0000000                   	LDA !ISPDAT0
 4050  0000000                   	STA PDATA
 4051  0000000                   
 4052  0000000                   ISP_READ_CID_END#:
 4053  0000000                   	ISP_LOCK
 4054  0000000                   	ENDM
 4055  0000000                   ;----------------------------------------------------
 4056  0000000                   ISP_READ_DID MACRO PDATA
 4057  0000000                   	ISP_UNLOCK
 4058  0000000                   
 4059  0000000                   	LDA	#(ISP_EN + ISP_ERR_FLAG)
 4060  0000000                   	TSB !ISPCON
 4061  0000000                   	LDA #ISP_CMD_DID
 4062  0000000                   	STA !ISPCMD	
 4063  0000000                   
 4064  0000000                   	LDA #ISP_DONE
 4065  0000000                   	TSB !ISPTRG
 4066  0000000                   
 4067  0000000                   	LDA !ISPCON
 4068  0000000                   	AND #ISP_ERR_FLAG
 4069  0000000                   	BEQ POLLING_ISP_READ_DID_TRG#
 4070  0000000                   	JMP	ISP_READ_DID_END#
 4071  0000000                   
 4072  0000000                   POLLING_ISP_READ_DID_TRG#:
 4073  0000000                   	LDA !ISPTRG
 4074  0000000                   	AND #ISP_DONE
 4075  0000000                   	BNE POLLING_ISP_READ_TRG#
 4076  0000000                   
 4077  0000000                   	LDA !ISPDAT0
 4078  0000000                   	STA PDATA
 4079  0000000                   
 4080  0000000                   ISP_READ_DID_END#:
 4081  0000000                   	ISP_LOCK
 4082  0000000                   
 4083  0000000                   	ENDM
 4084  0000000                   
 4085  0000000                   
 4086  0000000                   
 4087  0000000                   	EXTERN FLASH_ERASE_PAGE_PROC
 4088  0000000                   	EXTERN FLASH_READ_PAGE_PROC
 4089  0000000                   	EXTERN FLASH_WRITE_PAGE_PROC
 4090  0000000                   	EXTERN FLASH_COPY_PAGE_PROC
 4091  0000000                   	EXTERN FLASH_BLANK_CHECK_PAGE_PROC
 4092  0000000                   	EXTERN FLASH_BACKUP_REPLACE_PAGE_PROC
 4093  0000000                   	EXTERN FLASH_PAGE_INJECT_ID_PROC





 4094  0000000                   
 4095  0000000                   	EXTERN PROTECTION_PAGE_READ_PROC
 4096  0000000                   	EXTERN PROTECTION_PAGE_UPDATE_PROC
 4097  0000000                   
 4098  0000000                   	EXTERN FLASH_SECTION_UPDATE_PROC
 4099  0000000                   	EXTERN FLASH_SECTION_READ_PROC
 4100  0000000                   ;-------------------------------------------;
 4101  0000000                   ; Defince                               	;
 4102  0000000                   ;-------------------------------------------;
 4103  0000000                   .IF (WITH_ISP_READ_WRITE .EQ. 1)
 4104  0000000                   SRC_BUF4				EQU		ISP_TEMP
 4105  0000000                   DST_PAGE_START_ADDR3	EQU		ISP_TEMP+4
 4106  0000000                   SRC_LEN2				EQU		ISP_TEMP+7
 4107  0000000                   .ENDIF
 4108  0000000                   .IF (WITH_ISP_UPDATE .EQ. 1)
 4109  0000000                   DST_BUF4				EQU		ISP_TEMP+9
 4110  0000000                   SRC_PAGE_START_ADDR3	EQU		ISP_TEMP+13
 4111  0000000                   OFFSET2					EQU		ISP_TEMP+16
 4112  0000000                   COUNT2					EQU 	ISP_TEMP+18
 4113  0000000                   .ENDIF
 4114  0000000                   .IF (WITH_PROTECTION_PAGE_UPDATE .EQ. 1)
 4115  0000000                   .IF (PROTECTION_PAGE_WORKING_MODE .EQ. 1)	
 4116  0000000                   OFFSET_TEMP				EQU		ISP_TEMP+20
 4117  0000000                   LEN_TEMP				EQU		ISP_TEMP+22
 4118  0000000                   PBUF_TEMP				EQU		ISP_TEMP+24
 4119  0000000                   .ENDIF
 4120  0000000                   .IF (PROTECTION_PAGE_WORKING_MODE .EQ. 2)
 4121  0000000                   NOW_SECTION_INDEX		EQU			ISP_TEMP+20
 4122  0000000                   UPDATE_SECTION_STATUS	EQU			ISP_TEMP+21
 4123  0000000                   NP_INDEX				EQU			ISP_TEMP+22
 4124  0000000                   SP_INDEX				EQU			ISP_TEMP+23
 4125  0000000                   PBUF_TEMP				EQU			ISP_TEMP+24
 4126  0000000                   SECTION_OFFSET			EQU			OFFSET2
 4127  0000000                   .ENDIF
 4128  0000000                   .ENDIF
 4129  0000000                   
 4130  0000000                   NU_ID					EQU		19H
 4131  0000000                   PAGE_SIZE				EQU 	512
 4132  0000000                   
 4133  0000000                   
 4134  0000000                   ;--------------------------------------------------------
 4135  0000000                   ; @brief	Read flash
 4136  0000000                   ;--------------------------------------------------------
 4137  0000000                   FLASH_READ MACRO DST_ADDR, LEN, SRC_PBUF
 4138  0000000                   	FLASH_READ_PAGE_DP DST_ADDR, 0, LEN, SRC_PBUF
 4139  0000000                   	ENDM
 4140  0000000                   ;--------------------------------------------------------
 4141  0000000                   ; @brief	Read flash
 4142  0000000                   ;--------------------------------------------------------
 4143  0000000                   FLASH_READ_RAM MACRO DST_ADDR_RAM, LEN_RAM, SRC_PBUF
 4144  0000000                   	FLASH_READ_DP_RAM DST_ADDR_RAM, LEN_RAM, SRC_PBUF
 4145  0000000                   	ENDM
 4146  0000000                   ;--------------------------------------------------------
 4147  0000000                   ; @brief	Read flash
 4148  0000000                   ;--------------------------------------------------------
 4149  0000000                   FLASH_READ_RAM_ILI MACRO DST_ADDR_RAM, LEN_RAM, SRC_PBUF
 4150  0000000                   	FLASH_READ_DP_RAM_ILI DST_ADDR_RAM, LEN_RAM, SRC_PBUF





 4151  0000000                   	ENDM
 4152  0000000                   ;--------------------------------------------------------
 4153  0000000                   ; @brief	Read flash page
 4154  0000000                   ;--------------------------------------------------------
 4155  0000000                   FLASH_READ_PAGE MACRO DST_ADDR, DST_OFFSET, LEN, SRC_PBUF
 4156  0000000                   	FLASH_READ_PAGE_DP DST_ADDR, DST_OFFSET, LEN, SRC_PBUF
 4157  0000000                   	ENDM
 4158  0000000                   ;--------------------------------------------------------
 4159  0000000                   ; @brief	Read flash page
 4160  0000000                   ;--------------------------------------------------------
 4161  0000000                   FLASH_READ_PAGE_RAM MACRO DST_ADDR_RAM, DST_OFFSET_RAM, LEN_RAM, SRC_PBUF
 4162  0000000                   	FLASH_READ_PAGE_DP_RAM DST_ADDR_RAM, DST_OFFSET_RAM, LEN_RAM, SRC_PBUF
 4163  0000000                   	ENDM
 4164  0000000                   ;--------------------------------------------------------
 4165  0000000                   ; @brief	Read flash page with ram buf
 4166  0000000                   ; @param	Destination page address, count, offset, and 
 4167  0000000                   ;			pointer to buffer
 4168  0000000                   ;--------------------------------------------------------
 4169  0000000                   FLASH_READ_PAGE_DP MACRO DST_ADDR, DST_OFFSET, LEN, SRC_PBUF
 4170  0000000                   	MOV16_16 SRC_LEN2, LEN
 4171  0000000                   	MOV24_24 DST_PAGE_START_ADDR3, DST_ADDR
 4172  0000000                   	ADD24_24 DST_PAGE_START_ADDR3, DST_OFFSET
 4173  0000000                   	MOV16_16 SRC_BUF4, SRC_PBUF
 4174  0000000                   
 4175  0000000                   	JSR FLASH_READ_PAGE_PROC
 4176  0000000                   
 4177  0000000                   	ENDM
 4178  0000000                   ;--------------------------------------------------------
 4179  0000000                   ; @brief	Read flash page with ram buf
 4180  0000000                   ; @param	Destination page address, count, offset, and 
 4181  0000000                   ;			pointer to buffer
 4182  0000000                   ;--------------------------------------------------------
 4183  0000000                   FLASH_READ_PAGE_DP_RAM MACRO DST_ADDR_RAM, DST_OFFSET_RAM, LEN_RAM, SRC_PBUF
 4184  0000000                   	MOV16_16_DP SRC_LEN2, LEN_RAM
 4185  0000000                   	MOV24_24_DP DST_PAGE_START_ADDR3, DST_ADDR_RAM
 4186  0000000                   	ADD24_16_DP DST_PAGE_START_ADDR3, DST_OFFSET_RAM
 4187  0000000                   	MOV16_16 SRC_BUF4, SRC_PBUF
 4188  0000000                   
 4189  0000000                   	JSR FLASH_READ_PAGE_PROC
 4190  0000000                   	ENDM
 4191  0000000                   ;--------------------------------------------------------
 4192  0000000                   FLASH_READ_DP_RAM MACRO DST_ADDR_RAM, LEN_RAM, SRC_PBUF
 4193  0000000                   	MOV16_16_DP SRC_LEN2, LEN_RAM
 4194  0000000                   	MOV24_24_DP DST_PAGE_START_ADDR3, DST_ADDR_RAM
 4195  0000000                   	MOV16_16 SRC_BUF4, SRC_PBUF
 4196  0000000                   
 4197  0000000                   	JSR FLASH_READ_PAGE_PROC
 4198  0000000                   	ENDM
 4199  0000000                   ;--------------------------------------------------------
 4200  0000000                   FLASH_READ_DP_RAM_ILI MACRO DST_ADDR_RAM, LEN_RAM, SRC_PBUF
 4201  0000000                   	MOV16_16_DP SRC_LEN2, LEN_RAM
 4202  0000000                   	MOV24_24_DP DST_PAGE_START_ADDR3, DST_ADDR_RAM
 4203  0000000                   	LDA .LOW.SRC_PBUF
 4204  0000000                   	STA SRC_BUF4
 4205  0000000                   	LDA .HIGH.SRC_PBUF
 4206  0000000                   	STA SRC_BUF4+1
 4207  0000000                   





 4208  0000000                   	JSR FLASH_READ_PAGE_PROC
 4209  0000000                   	ENDM
 4210  0000000                   ;--------------------------------------------------------
 4211  0000000                   ;FLASH_READ_PAGE_PROC MACRO
 4212  0000000                   ;PHP
 4213  0000000                   ;SEI
 4214  0000000                   ;
 4215  0000000                   ;READ_FLASH_LOOP#:
 4216  0000000                   ;LDA SRC_LEN2+1;
 4217  0000000                   ;CMP #00
 4218  0000000                   ;BCC READ_FLASH_PROC_1#
 4219  0000000                   ;BNE READ_FLASH_PROC_2#
 4220  0000000                   ;LDA SRC_LEN2
 4221  0000000                   ;CMP #04H
 4222  0000000                   ;BCS READ_FLASH_PROC_2# ; if NUM1L >= NUM2L then NUM1 >= NUM2
 4223  0000000                   ;
 4224  0000000                   ;READ_FLASH_PROC_1#:
 4225  0000000                   ;LDA SRC_LEN2
 4226  0000000                   ;BNE 3
 4227  0000000                   ;JMP END_FLAGH_READ_PAGE_DP_OK#
 4228  0000000                   ;
 4229  0000000                   ;;read data (<4B) 
 4230  0000000                   ;ISP_READ_DATA_DP_ILI_X DST_PAGE_START_ADDR3, SRC_BUF4, SRC_LEN2
 4231  0000000                   ;BEQ 3
 4232  0000000                   ;JMP END_FLASH_READ_PAGE_DP#
 4233  0000000                   ;
 4234  0000000                   ;JMP END_FLAGH_READ_PAGE_DP_OK#
 4235  0000000                   ;
 4236  0000000                   ;READ_FLASH_PROC_2#:
 4237  0000000                   ;;read data (4B) 
 4238  0000000                   ;ISP_READ_DATA_DP_ILI DST_PAGE_START_ADDR3, SRC_BUF4
 4239  0000000                   ;BEQ 3
 4240  0000000                   ;JMP END_FLASH_READ_PAGE_DP#
 4241  0000000                   ;
 4242  0000000                   ;;accumulate address
 4243  0000000                   ;DNLOAD_ADDR_INC#:
 4244  0000000                   ;;accumulate destination address
 4245  0000000                   ;ADD24_24 DST_PAGE_START_ADDR3, 4
 4246  0000000                   ;
 4247  0000000                   ;;accumlate pointer to buffer
 4248  0000000                   ;ADD16_16 SRC_BUF4, 4
 4249  0000000                   ;
 4250  0000000                   ;;accumlate count
 4251  0000000                   ;SBC16_16 SRC_LEN2, 4
 4252  0000000                   ;JMP READ_FLASH_LOOP#
 4253  0000000                   ;
 4254  0000000                   ;END_FLAGH_READ_PAGE_DP_OK#:
 4255  0000000                   ;LDA #00H
 4256  0000000                   ;END_FLASH_READ_PAGE_DP#:
 4257  0000000                   ;PLP
 4258  0000000                   ;
 4259  0000000                   ;ENDM
 4260  0000000                   ;--------------------------------------------------------
 4261  0000000                   ; @brief	Blank flash page
 4262  0000000                   ;--------------------------------------------------------
 4263  0000000                   FLASH_BLANK_PAGE MACRO DST_ADDR, LEN
 4264  0000000                   	MOV16_16 SRC_LEN2, LEN





 4265  0000000                   	MOV24_24 DST_PAGE_START_ADDR3, DST_ADDR
 4266  0000000                   
 4267  0000000                   	JSR FLASH_BLANK_CHECK_PAGE_PROC
 4268  0000000                   
 4269  0000000                   	ENDM
 4270  0000000                   ;--------------------------------------------------------
 4271  0000000                   ; @brief	Blank flash page
 4272  0000000                   ;--------------------------------------------------------
 4273  0000000                   FLASH_BLANK_PAGE_RAM MACRO DST_ADDR_RAM, LEN_RAM
 4274  0000000                   	MOV16_16_DP SRC_LEN2, LEN_RAM
 4275  0000000                   	MOV24_24_DP DST_PAGE_START_ADDR3, DST_ADDR_RAM
 4276  0000000                   
 4277  0000000                   	JSR FLASH_BLANK_CHECK_PAGE_PROC
 4278  0000000                   
 4279  0000000                   	ENDM
 4280  0000000                   ;--------------------------------------------------------
 4281  0000000                   ; @brief	Erase flash page
 4282  0000000                   ; @param	
 4283  0000000                   ;--------------------------------------------------------
 4284  0000000                   FLASH_ERASE_PAGE MACRO DST_PAGE_ADDR
 4285  0000000                   
 4286  0000000                   	MOV24_24 DST_PAGE_START_ADDR3, DST_PAGE_ADDR
 4287  0000000                   	JSR FLASH_ERASE_PAGE_PROC
 4288  0000000                   
 4289  0000000                   	ENDM
 4290  0000000                   ;--------------------------------------------------------
 4291  0000000                   ; @brief	Erase flash page
 4292  0000000                   ; @param	
 4293  0000000                   ;--------------------------------------------------------
 4294  0000000                   FLASH_ERASE_PAGE_RAM MACRO DST_PAGE_ADDR_RAM
 4295  0000000                   
 4296  0000000                   	MOV24_24_DP DST_PAGE_START_ADDR3, DST_PAGE_ADDR_RAM
 4297  0000000                   	JSR FLASH_ERASE_PAGE_PROC
 4298  0000000                   
 4299  0000000                   	ENDM
 4300  0000000                   ;--------------------------------------------------------
 4301  0000000                   ; @brief	Write flash
 4302  0000000                   ;--------------------------------------------------------
 4303  0000000                   FLASH_WRITE MACRO DST_ADDR, LEN, SRC_PBUF
 4304  0000000                   	FLASH_WRITE_PAGE_DP DST_ADDR, 0, LEN, SRC_PBUF
 4305  0000000                   	ENDM
 4306  0000000                   ;--------------------------------------------------------
 4307  0000000                   ; @brief	Write flash
 4308  0000000                   ;--------------------------------------------------------
 4309  0000000                   FLASH_WRITE_RAM MACRO DST_ADDR_RAM, LEN_RAM, SRC_PBUF
 4310  0000000                   	FLASH_WRITE_DP_RAM DST_ADDR_RAM, LEN_RAM, SRC_PBUF
 4311  0000000                   	ENDM
 4312  0000000                   ;--------------------------------------------------------
 4313  0000000                   ; @brief	Write flash
 4314  0000000                   ;--------------------------------------------------------
 4315  0000000                   FLASH_WRITE_RAM_ILI MACRO DST_ADDR_RAM, LEN_RAM, SRC_PBUF
 4316  0000000                   	FLASH_WRITE_DP_RAM_ILI DST_ADDR_RAM, LEN_RAM, SRC_PBUF
 4317  0000000                   	ENDM
 4318  0000000                   ;--------------------------------------------------------
 4319  0000000                   ; @brief	Write flash page
 4320  0000000                   ; @param	
 4321  0000000                   ;--------------------------------------------------------





 4322  0000000                   FLASH_WRITE_PAGE MACRO DST_PAGE_ADDR, DST_OFFSET, LEN, SRC_PBUF
 4323  0000000                   	FLASH_WRITE_PAGE_DP DST_PAGE_ADDR, DST_OFFSET, LEN, SRC_PBUF
 4324  0000000                   	ENDM
 4325  0000000                   ;--------------------------------------------------------
 4326  0000000                   ; @brief	Write flash page
 4327  0000000                   ; @param	
 4328  0000000                   ;--------------------------------------------------------
 4329  0000000                   FLASH_WRITE_PAGE_RAM MACRO DST_PAGE_ADDR_RAM, DST_OFFSET_RAM, LEN_RAM, SRC_PBUF
 4330  0000000                   	FLASH_WRITE_PAGE_DP_RAM DST_PAGE_ADDR_RAM, DST_OFFSET_RAM, LEN_RAM, SRC_PBUF
 4331  0000000                   	ENDM
 4332  0000000                   ;--------------------------------------------------------
 4333  0000000                   ; @brief	Write flash page with ram buf
 4334  0000000                   ; @param	Destination page address, count, offset, and 
 4335  0000000                   ;			pointer to buffer
 4336  0000000                   ;--------------------------------------------------------
 4337  0000000                   FLASH_WRITE_PAGE_DP MACRO DST_PAGE_ADDR, DST_OFFSET, LEN, SRC_PBUF
 4338  0000000                   	MOV16_16 SRC_LEN2, LEN
 4339  0000000                   	MOV24_24 DST_PAGE_START_ADDR3, DST_PAGE_ADDR
 4340  0000000                   	ADD24_24 DST_PAGE_START_ADDR3, DST_OFFSET
 4341  0000000                   	MOV16_16 SRC_BUF4, SRC_PBUF
 4342  0000000                   
 4343  0000000                   	JSR FLASH_WRITE_PAGE_PROC
 4344  0000000                   	ENDM
 4345  0000000                   ;--------------------------------------------------------
 4346  0000000                   ; @brief	Write flash page with ram buf
 4347  0000000                   ; @param	Destination page address, count, offset, and 
 4348  0000000                   ;			pointer to buffer
 4349  0000000                   ;--------------------------------------------------------
 4350  0000000                   FLASH_WRITE_PAGE_DP_RAM MACRO DST_PAGE_ADDR_RAM, DST_OFFSET_RAM, LEN_RAM, SRC_PBUF
 4351  0000000                   	MOV16_16_DP SRC_LEN2, LEN_RAM
 4352  0000000                   	MOV24_24_DP DST_PAGE_START_ADDR3, DST_PAGE_ADDR_RAM
 4353  0000000                   	ADD24_16_DP DST_PAGE_START_ADDR3, DST_OFFSET_RAM
 4354  0000000                   	MOV16_16 SRC_BUF4, SRC_PBUF
 4355  0000000                   
 4356  0000000                   	JSR FLASH_WRITE_PAGE_PROC
 4357  0000000                   	ENDM
 4358  0000000                   ;--------------------------------------------------------
 4359  0000000                   ; @brief	Write flash page with ram buf
 4360  0000000                   ; @param	Destination page address, count, offset, and 
 4361  0000000                   ;			pointer to buffer
 4362  0000000                   ;--------------------------------------------------------
 4363  0000000                   FLASH_WRITE_DP_RAM MACRO DST_PAGE_ADDR_RAM, LEN_RAM, SRC_PBUF
 4364  0000000                   	MOV16_16_DP SRC_LEN2, LEN_RAM
 4365  0000000                   	MOV24_24_DP DST_PAGE_START_ADDR3, DST_PAGE_ADDR_RAM
 4366  0000000                   	MOV16_16 SRC_BUF4, SRC_PBUF
 4367  0000000                   
 4368  0000000                   	JSR FLASH_WRITE_PAGE_PROC
 4369  0000000                   	ENDM
 4370  0000000                   
 4371  0000000                   ;--------------------------------------------------------
 4372  0000000                   ; @brief	Write flash page with ram buf
 4373  0000000                   ; @param	Destination page address, count, offset, and 
 4374  0000000                   ;			pointer to buffer
 4375  0000000                   ;--------------------------------------------------------
 4376  0000000                   FLASH_WRITE_DP_RAM_ILI MACRO DST_PAGE_ADDR_RAM, LEN_RAM, SRC_PBUF
 4377  0000000                   	MOV16_16_DP SRC_LEN2, LEN_RAM
 4378  0000000                   	MOV24_24_DP DST_PAGE_START_ADDR3, DST_PAGE_ADDR_RAM





 4379  0000000                   
 4380  0000000                   	LDA .LOW.SRC_PBUF
 4381  0000000                   	STA SRC_BUF4
 4382  0000000                   	LDA .HIGH.SRC_PBUF
 4383  0000000                   	STA SRC_BUF4+1
 4384  0000000                   
 4385  0000000                   	JSR FLASH_WRITE_PAGE_PROC
 4386  0000000                   	ENDM
 4387  0000000                   
 4388  0000000                   ;--------------------------------------------------------
 4389  0000000                   ; @brief	Copy flash page
 4390  0000000                   ;--------------------------------------------------------		
 4391  0000000                   FLASH_COPY_PAGE MACRO DST_PAGE_ADDR, SRC_PAGE_ADDR
 4392  0000000                   
 4393  0000000                   	MOV24_24 DST_PAGE_START_ADDR3, DST_PAGE_ADDR
 4394  0000000                   	MOV24_24 SRC_PAGE_START_ADDR3, SRC_PAGE_ADDR
 4395  0000000                   
 4396  0000000                   	STZ16 COUNT2
 4397  0000000                   
 4398  0000000                   	JSR FLASH_COPY_PAGE_PROC
 4399  0000000                   
 4400  0000000                   	ENDM
 4401  0000000                   ;--------------------------------------------------------
 4402  0000000                   ; @brief	Copy flash page
 4403  0000000                   ;--------------------------------------------------------		
 4404  0000000                   FLASH_COPY_PAGE_RAM MACRO DST_PAGE_ADDR_RAM, SRC_PAGE_ADDR_RAM
 4405  0000000                   	PHP
 4406  0000000                   	SEI
 4407  0000000                   
 4408  0000000                   ;IS_ILLEGAL_PAGE_FORMAT DST_PAGE_ADDR
 4409  0000000                   ;BEQ 3
 4410  0000000                   ;JMP FLASH_COPY_PAGE_ERROR#
 4411  0000000                   
 4412  0000000                   ;IS_ILLEGAL_PAGE_FORMAT SRC_PAGE_ADDR
 4413  0000000                   ;BEQ 3
 4414  0000000                   ;JMP FLASH_COPY_PAGE_ERROR#
 4415  0000000                   
 4416  0000000                   	MOV24_24_DP DST_PAGE_START_ADDR3, DST_PAGE_ADDR_RAM
 4417  0000000                   	MOV24_24_DP SRC_PAGE_START_ADDR3, SRC_PAGE_ADDR_RAM
 4418  0000000                   
 4419  0000000                   	STZ16 COUNT2
 4420  0000000                   
 4421  0000000                   ;eraes flash page before program data
 4422  0000000                   	ISP_ERASE_PAGE_DP DST_PAGE_START_ADDR3
 4423  0000000                   	BEQ 3
 4424  0000000                   	JMP END_COPY_FLASH_PAGE#
 4425  0000000                   
 4426  0000000                   COPY_LOOP#:
 4427  0000000                   
 4428  0000000                   ;read data (4B)
 4429  0000000                   	ISP_READ_DATA_DP SRC_PAGE_START_ADDR3, SRC_BUF4
 4430  0000000                   	BEQ 3
 4431  0000000                   	JMP END_COPY_FLASH_PAGE#
 4432  0000000                   
 4433  0000000                   ;program data (4B)
 4434  0000000                   	ISP_WRITE_DATA_DP DST_PAGE_START_ADDR3, SRC_BUF4
 4435  0000000                   	BEQ 3





 4436  0000000                   	JMP END_COPY_FLASH_PAGE#
 4437  0000000                   
 4438  0000000                   ;verify data (4B)
 4439  0000000                   	ISP_VERIFY_DATA_DP DST_PAGE_START_ADDR3, SRC_BUF4
 4440  0000000                   	BEQ 3
 4441  0000000                   	JMP END_COPY_FLASH_PAGE#
 4442  0000000                   
 4443  0000000                   ;accumlate source address
 4444  0000000                   	ADD24_24 SRC_PAGE_START_ADDR3, 4
 4445  0000000                   
 4446  0000000                   ;accumlate destination address
 4447  0000000                   	ADD24_24 DST_PAGE_START_ADDR3, 4
 4448  0000000                   
 4449  0000000                   ;accumlate count
 4450  0000000                   	ADD16_16 COUNT2, 4
 4451  0000000                   
 4452  0000000                   LAST_CHECK#:
 4453  0000000                   	LDA !COUNT2+1
 4454  0000000                   	CMP #.HIGH.PAGE_SIZE
 4455  0000000                   	BEQ 3
 4456  0000000                   	JMP COPY_LOOP#
 4457  0000000                   	LDA !COUNT2
 4458  0000000                   	CMP #.LOW.PAGE_SIZE
 4459  0000000                   	BEQ 3
 4460  0000000                   	JMP COPY_LOOP#
 4461  0000000                   	JMP END_COPY_FLASH_PAGE_OK#
 4462  0000000                   
 4463  0000000                   END_COPY_FLASH_PAGE_OK#:
 4464  0000000                   	LDA #00H
 4465  0000000                   END_COPY_FLASH_PAGE#:
 4466  0000000                   	PLP
 4467  0000000                   	ENDM
 4468  0000000                   ;--------------------------------------------------------
 4469  0000000                   ; @brief	MODIFY flash page
 4470  0000000                   ;--------------------------------------------------------
 4471  0000000                   FLASH_BACKUP_REPLACE_PAGE_DP MACRO BACKUP_PAGE_ADDR, SRC_PAGE_ADDR, DST_OFFSET, SRC_LEN, SRC_PBUF
 4472  0000000                   
 4473  0000000                   	MOV24_24 DST_PAGE_START_ADDR3, BACKUP_PAGE_ADDR
 4474  0000000                   	MOV24_24 SRC_PAGE_START_ADDR3, SRC_PAGE_ADDR
 4475  0000000                   
 4476  0000000                   	MOV16_16 OFFSET2, DST_OFFSET
 4477  0000000                   	MOV16_16 SRC_LEN2, SRC_LEN
 4478  0000000                   	MOV16_16 SRC_BUF4, SRC_PBUF
 4479  0000000                   
 4480  0000000                   	JSR FLASH_BACKUP_REPLACE_PAGE_PROC
 4481  0000000                   
 4482  0000000                   	ENDM
 4483  0000000                   ;--------------------------------------------------------
 4484  0000000                   ; @brief	MODIFY flash page
 4485  0000000                   ;--------------------------------------------------------
 4486  0000000                   FLASH_BACKUP_REPLACE_PAGE_DP_RAM MACRO BACKUP_PAGE_ADDR_RAM, SRC_PAGE_ADDR_RAM, DST_OFFSET_RAM, SRC_LEN_RAM, SRC_PBUF
 4487  0000000                   
 4488  0000000                   	MOV24_24_DP DST_PAGE_START_ADDR3, BACKUP_PAGE_ADDR_RAM
 4489  0000000                   	MOV24_24_DP SRC_PAGE_START_ADDR3, SRC_PAGE_ADDR_RAM
 4490  0000000                   
 4491  0000000                   	MOV16_16_DP OFFSET2, DST_OFFSET_RAM
 4492  0000000                   	MOV16_16_DP SRC_LEN2, SRC_LEN_RAM





 4493  0000000                   	MOV16_16 SRC_BUF4, SRC_PBUF
 4494  0000000                   
 4495  0000000                   
 4496  0000000                   	JSR FLASH_BACKUP_REPLACE_PAGE_PROC
 4497  0000000                   
 4498  0000000                   	ENDM
 4499  0000000                   ;--------------------------------------------------------
 4500  0000000                   ; @brief	MODIFY flash page
 4501  0000000                   ;--------------------------------------------------------
 4502  0000000                   FLASH_BACKUP_REPLACE_PAGE_DP_RAM2 MACRO BACKUP_PAGE_ADDR, SRC_PAGE_ADDR, DST_OFFSET_RAM, SRC_LEN_RAM, SRC_PBUF
 4503  0000000                   
 4504  0000000                   	MOV24_24 DST_PAGE_START_ADDR3, BACKUP_PAGE_ADDR
 4505  0000000                   	MOV24_24 SRC_PAGE_START_ADDR3, SRC_PAGE_ADDR
 4506  0000000                   
 4507  0000000                   	MOV16_16_DP OFFSET2, DST_OFFSET_RAM
 4508  0000000                   	MOV16_16_DP SRC_LEN2, SRC_LEN_RAM
 4509  0000000                   	MOV16_16 SRC_BUF4, SRC_PBUF
 4510  0000000                   
 4511  0000000                   	JSR FLASH_BACKUP_REPLACE_PAGE_PROC
 4512  0000000                   
 4513  0000000                   	ENDM
 4514  0000000                   ;--------------------------------------------------------
 4515  0000000                   ; @brief	MODIFY flash page
 4516  0000000                   ;--------------------------------------------------------
 4517  0000000                   FLASH_BACKUP_REPLACE_PAGE_DP_RAM2_ILI MACRO BACKUP_PAGE_ADDR, SRC_PAGE_ADDR, DST_OFFSET_RAM, SRC_LEN_RAM, SRC_PBUF
 4518  0000000                   	PHP
 4519  0000000                   	SEI
 4520  0000000                   
 4521  0000000                   	MOV24_24 DST_PAGE_START_ADDR3, BACKUP_PAGE_ADDR
 4522  0000000                   	MOV24_24 SRC_PAGE_START_ADDR3, SRC_PAGE_ADDR
 4523  0000000                   
 4524  0000000                   	MOV16_16_DP OFFSET2, DST_OFFSET_RAM
 4525  0000000                   	MOV16_16_DP SRC_LEN2, SRC_LEN_RAM
 4526  0000000                   ;MOV16_16 SRC_BUF4, SRC_PBUF
 4527  0000000                   
 4528  0000000                   	LDA .LOW.SRC_PBUF
 4529  0000000                   	STA SRC_BUF4
 4530  0000000                   	LDA .HIGH.SRC_PBUF
 4531  0000000                   	STA SRC_BUF4+1
 4532  0000000                   
 4533  0000000                   	STZ16 COUNT2
 4534  0000000                   
 4535  0000000                   ;eraes flash page before program data
 4536  0000000                   	ISP_ERASE_PAGE_DP DST_PAGE_START_ADDR3
 4537  0000000                   	BEQ 3
 4538  0000000                   	JMP END_FLASH_BACKUP_REPLACE_PAGE_DP#
 4539  0000000                   
 4540  0000000                   BACKUP_LOOP#:
 4541  0000000                   ;read data (4B)
 4542  0000000                   	ISP_READ_DATA_DP SRC_PAGE_START_ADDR3, DST_BUF4
 4543  0000000                   	BEQ 3
 4544  0000000                   	JMP END_FLASH_BACKUP_REPLACE_PAGE_DP#
 4545  0000000                   
 4546  0000000                   REPLACE#:
 4547  0000000                   ;the current offset is the replacement offset?
 4548  0000000                   	LDA OFFSET2+1
 4549  0000000                   	CMP COUNT2+1





 4550  0000000                   	BNE END_REPLACE#
 4551  0000000                   	LDA OFFSET2
 4552  0000000                   	CMP COUNT2
 4553  0000000                   	BNE END_REPLACE#
 4554  0000000                   
 4555  0000000                   	LDA SRC_LEN2+1;
 4556  0000000                       CMP #00
 4557  0000000                       BCC REPLACE2_FLASH_PROC_1#
 4558  0000000                       BNE REPLACE2_FLASH_PROC_2#
 4559  0000000                       LDA SRC_LEN2
 4560  0000000                       CMP #04H
 4561  0000000                       BCS REPLACE2_FLASH_PROC_2#
 4562  0000000                   
 4563  0000000                   REPLACE2_FLASH_PROC_1#:
 4564  0000000                   ;replace data (<4B)
 4565  0000000                   	LDA SRC_LEN2
 4566  0000000                   	BNE 3
 4567  0000000                   	JMP END_REPLACE#
 4568  0000000                   
 4569  0000000                   	LDY SRC_LEN2
 4570  0000000                   REPLACE_LOOP1#:
 4571  0000000                   	DEY
 4572  0000000                   	LDA (.LOW.SRC_BUF4),Y
 4573  0000000                   	STA DST_BUF4,Y
 4574  0000000                   	CPY #0
 4575  0000000                   	BNE REPLACE_LOOP1#
 4576  0000000                   
 4577  0000000                   	JMP END_REPLACE#
 4578  0000000                   
 4579  0000000                   REPLACE2_FLASH_PROC_2#:
 4580  0000000                   ;replace data (4B)
 4581  0000000                   	LDY #4
 4582  0000000                   REPLACE_LOOP#:
 4583  0000000                   	DEY
 4584  0000000                   	LDA (.LOW.SRC_BUF4),Y
 4585  0000000                   	STA DST_BUF4,Y
 4586  0000000                   	CPY #0
 4587  0000000                   	BNE REPLACE_LOOP#
 4588  0000000                   
 4589  0000000                   ADD_REPLACE#:
 4590  0000000                   ;SBC16_16 SRC_LEN2, 4
 4591  0000000                   	ADD16_16 OFFSET2, 4
 4592  0000000                   
 4593  0000000                   ;accumlate replacement length
 4594  0000000                   	SBC16_16 SRC_LEN2, 4
 4595  0000000                   
 4596  0000000                   ;accumlate pointer to buffer
 4597  0000000                   	ADD16_16 SRC_BUF4, 4
 4598  0000000                   
 4599  0000000                   END_REPLACE#:		
 4600  0000000                   
 4601  0000000                   ;write data (4B)
 4602  0000000                   	ISP_WRITE_DATA_DP DST_PAGE_START_ADDR3, DST_BUF4
 4603  0000000                   	BEQ 3
 4604  0000000                   	JMP END_FLASH_BACKUP_REPLACE_PAGE_DP#
 4605  0000000                   
 4606  0000000                   	ISP_VERIFY_DATA_DP DST_PAGE_START_ADDR3, DST_BUF4





 4607  0000000                   	BEQ 3
 4608  0000000                   	JMP END_FLASH_BACKUP_REPLACE_PAGE_DP#
 4609  0000000                   
 4610  0000000                   ;accumlate source address
 4611  0000000                   	ADD24_24 SRC_PAGE_START_ADDR3, 4
 4612  0000000                   
 4613  0000000                   ;accumlate destination address
 4614  0000000                   	ADD24_24 DST_PAGE_START_ADDR3, 4
 4615  0000000                   
 4616  0000000                   ;accumlate count
 4617  0000000                   	ADD16_16 COUNT2, 4
 4618  0000000                   
 4619  0000000                   	LDA !DST_PAGE_START_ADDR3+2
 4620  0000000                   	CMP #.HIGH8.(BACKUP_PAGE_ADDR+PAGE_SIZE)
 4621  0000000                   	BEQ 3
 4622  0000000                   	JMP BACKUP_LOOP#
 4623  0000000                   	LDA !DST_PAGE_START_ADDR3+1
 4624  0000000                   	CMP #.HIGH.(BACKUP_PAGE_ADDR+PAGE_SIZE)
 4625  0000000                   	BEQ 3
 4626  0000000                   	JMP BACKUP_LOOP#
 4627  0000000                   	LDA !DST_PAGE_START_ADDR3
 4628  0000000                   	CMP #.LOW.(BACKUP_PAGE_ADDR+PAGE_SIZE)
 4629  0000000                   	BEQ 3
 4630  0000000                   	JMP BACKUP_LOOP#
 4631  0000000                   	JMP END_FLASH_BACKUP_REPLACE_PAGE_DP_OK#
 4632  0000000                   
 4633  0000000                   END_FLASH_BACKUP_REPLACE_PAGE_DP_OK#:	
 4634  0000000                   	LDA #00H		; SUCCESS!
 4635  0000000                   END_FLASH_BACKUP_REPLACE_PAGE_DP#:
 4636  0000000                   	PLP
 4637  0000000                   	ENDM
 4638  0000000                   ;--------------------------------------------------------
 4639  0000000                   ; @brief	Update flash page
 4640  0000000                   ; @param	
 4641  0000000                   ;--------------------------------------------------------
 4642  0000000                   FLASH_UPDATE_PAGE MACRO BACKUP_PAGE_ADDR, SRC_PAGE_ADDR, DST_OFFSET, SRC_LEN, SRC_PBUF
 4643  0000000                   	FLASH_UPDATE_PAGE_DP BACKUP_PAGE_ADDR, SRC_PAGE_ADDR, DST_OFFSET, SRC_LEN, SRC_PBUF
 4644  0000000                   	ENDM
 4645  0000000                   ;--------------------------------------------------------
 4646  0000000                   ; @brief	Update flash page with ram buf
 4647  0000000                   ; @param	backup and source page address, target offset, 
 4648  0000000                   ;			count, and pointer to buffer
 4649  0000000                   ;--------------------------------------------------------
 4650  0000000                   FLASH_UPDATE_PAGE_DP MACRO BACKUP_PAGE_ADDR, SRC_PAGE_ADDR, DST_OFFSET, SRC_LEN, SRC_PBUF
 4651  0000000                   	FLASH_BACKUP_REPLACE_PAGE_DP BACKUP_PAGE_ADDR, SRC_PAGE_ADDR, DST_OFFSET, SRC_LEN, SRC_PBUF
 4652  0000000                   	CMP #0
 4653  0000000                   	BEQ 3
 4654  0000000                   	JMP END_FLASH_UPDATE_PAGE_DP#
 4655  0000000                   
 4656  0000000                   	FLASH_COPY_PAGE SRC_PAGE_ADDR, BACKUP_PAGE_ADDR
 4657  0000000                   	CMP #0
 4658  0000000                   	BEQ 3
 4659  0000000                   	JMP END_FLASH_UPDATE_PAGE_DP#
 4660  0000000                   
 4661  0000000                   END_FLASH_UPDATE_PAGE_DP_OK#:
 4662  0000000                   	LDA #00H
 4663  0000000                   END_FLASH_UPDATE_PAGE_DP#:





 4664  0000000                   	ENDM
 4665  0000000                   ;--------------------------------------------------------
 4666  0000000                   ; @brief	
 4667  0000000                   ; @param	
 4668  0000000                   ;--------------------------------------------------------
 4669  0000000                   FLASH_UPDATE_PAGE_DP_RAM MACRO BACKUP_PAGE_ADDR_RAM, SRC_PAGE_ADDR_RAM, DST_OFFSET_RAM, SRC_LEN_RAM, SRC_PBUF
 4670  0000000                   	FLASH_BACKUP_REPLACE_PAGE_DP_RAM BACKUP_PAGE_ADDR_RAM, SRC_PAGE_ADDR_RAM, DST_OFFSET_RAM, SRC_LEN_RAM, SRC_PBUF
 4671  0000000                   	CMP #0
 4672  0000000                   	BEQ 3
 4673  0000000                   	JMP END_FLASH_UPDATE_PAGE_DP_RAM#
 4674  0000000                   
 4675  0000000                   	FLASH_COPY_PAGE_RAM SRC_PAGE_ADDR_RAM, BACKUP_PAGE_ADDR_RAM
 4676  0000000                   	CMP #0
 4677  0000000                   	BEQ 3
 4678  0000000                   	JMP END_FLASH_UPDATE_PAGE_DP_RAM#
 4679  0000000                   
 4680  0000000                   END_FLASH_UPDATE_PAGE_DP_RAM_OK#
 4681  0000000                   	LDA #00H
 4682  0000000                   END_FLASH_UPDATE_PAGE_DP_RAM#:
 4683  0000000                   	ENDM
 4684  0000000                   ;--------------------------------------------------------
 4685  0000000                   ; @brief	
 4686  0000000                   ; @param	
 4687  0000000                   ;--------------------------------------------------------
 4688  0000000                   FLASH_UPDATE_PAGE_DP_RAM2 MACRO BACKUP_PAGE_ADDR, SRC_PAGE_ADDR, DST_OFFSET_RAM, SRC_LEN_RAM, SRC_PBUF
 4689  0000000                   	FLASH_BACKUP_REPLACE_PAGE_DP_RAM2 BACKUP_PAGE_ADDR, SRC_PAGE_ADDR, DST_OFFSET_RAM, SRC_LEN_RAM, SRC_PBUF
 4690  0000000                   	CMP #0
 4691  0000000                   	BEQ 3
 4692  0000000                   	JMP END_FLASH_UPDATE_PAGE_DP_RAM#
 4693  0000000                   
 4694  0000000                   	FLASH_COPY_PAGE SRC_PAGE_ADDR, BACKUP_PAGE_ADDR
 4695  0000000                   	CMP #0
 4696  0000000                   	BEQ 3
 4697  0000000                   	JMP END_FLASH_UPDATE_PAGE_DP_RAM#
 4698  0000000                   
 4699  0000000                   END_FLASH_UPDATE_PAGE_DP_RAM_OK#:
 4700  0000000                   	LDA #00H
 4701  0000000                   END_FLASH_UPDATE_PAGE_DP_RAM#:
 4702  0000000                   	ENDM
 4703  0000000                   ;--------------------------------------------------------
 4704  0000000                   ; @brief	
 4705  0000000                   ; @param	
 4706  0000000                   ;--------------------------------------------------------
 4707  0000000                   FLASH_UPDATE_PAGE_DP_RAM2_ILI MACRO BACKUP_PAGE_ADDR, SRC_PAGE_ADDR, DST_OFFSET_RAM, SRC_LEN_RAM, SRC_PBUF
 4708  0000000                   	FLASH_BACKUP_REPLACE_PAGE_DP_RAM_ILI BACKUP_PAGE_ADDR, SRC_PAGE_ADDR, DST_OFFSET_RAM, SRC_LEN_RAM, SRC_PBUF
 4709  0000000                   	CMP #0
 4710  0000000                   	BEQ 3
 4711  0000000                   	JMP END_FLASH_UPDATE_PAGE_DP_RAM_ILI#
 4712  0000000                   
 4713  0000000                   	FLASH_COPY_PAGE SRC_PAGE_ADDR, BACKUP_PAGE_ADDR
 4714  0000000                   	CMP #0
 4715  0000000                   	BEQ 3
 4716  0000000                   	JMP END_FLASH_UPDATE_PAGE_DP_RAM_ILI#
 4717  0000000                   
 4718  0000000                   END_FLASH_UPDATE_PAGE_DP_RAM_ILI_OK#:
 4719  0000000                   	LDA #00H
 4720  0000000                   END_FLASH_UPDATE_PAGE_DP_RAM_ILI#:





 4721  0000000                   	ENDM
 4722  0000000                   ;--------------------------------------------------------
 4723  0000000                   ; @brief Read protection page
 4724  0000000                   ; @param
 4725  0000000                   ;
 4726  0000000                   ;--------------------------------------------------------
 4727  0000000                   .IF (WITH_PROTECTION_PAGE_UPDATE .EQ. 1)
 4728  0000000                   .IF (PROTECTION_PAGE_WORKING_MODE .EQ. 1)
 4729  0000000                   PROTECTION_PAGE_READ MACRO SWAPPING_PAGE_ADDR, SRC_PAGE_ADDR, DST_OFFSET, SRC_LEN, SRC_PBUF
 4730  0000000                   
 4731  0000000                   	MOV16_16 OFFSET_TEMP, DST_OFFSET
 4732  0000000                   	MOV16_16 LEN_TEMP, SRC_LEN
 4733  0000000                   	MOV16_16 PBUF_TEMP, SRC_PBUF
 4734  0000000                   
 4735  0000000                   	JSR PROTECTION_PAGE_READ_PROC
 4736  0000000                   
 4737  0000000                   	ENDM
 4738  0000000                   
 4739  0000000                   ;--------------------------------------------------------
 4740  0000000                   ; @brief Update protection page
 4741  0000000                   ; @param
 4742  0000000                   ;
 4743  0000000                   ;--------------------------------------------------------
 4744  0000000                   PROTECTION_PAGE_UPDATE MACRO SWAPPING_PAGE_ADDR, SRC_PAGE_ADDR, DST_OFFSET, SRC_LEN, SRC_PBUF
 4745  0000000                   
 4746  0000000                   	MOV16_16 OFFSET_TEMP, DST_OFFSET
 4747  0000000                   	MOV16_16 LEN_TEMP, SRC_LEN
 4748  0000000                   	MOV16_16 PBUF_TEMP, SRC_PBUF
 4749  0000000                   
 4750  0000000                   	JSR PROTECTION_PAGE_UPDATE_PROC
 4751  0000000                   
 4752  0000000                   	ENDM
 4753  0000000                   ;--------------------------------------------------------
 4754  0000000                   ; @brief Update protection page
 4755  0000000                   ; @param
 4756  0000000                   ;
 4757  0000000                   ;--------------------------------------------------------
 4758  0000000                   PROTECTION_PAGE_READ_RAM MACRO SWAPPING_PAGE_ADDR, SRC_PAGE_ADDR, DST_OFFSET_RAM, SRC_LEN_RAM, SRC_PBUF
 4759  0000000                   
 4760  0000000                   	MOV16_16_DP OFFSET_TEMP, DST_OFFSET_RAM
 4761  0000000                   	MOV16_16_DP LEN_TEMP, SRC_LEN_RAM
 4762  0000000                   	MOV16_16 PBUF_TEMP, SRC_PBUF
 4763  0000000                   
 4764  0000000                   	JSR PROTECTION_PAGE_READ_PROC
 4765  0000000                   
 4766  0000000                   	ENDM
 4767  0000000                   ;--------------------------------------------------------	
 4768  0000000                   PROTECTION_PAGE_UPDATE_RAM MACRO SWAPPING_PAGE_ADDR, SRC_PAGE_ADDR, DST_OFFSET_RAM, SRC_LEN_RAM, SRC_PBUF
 4769  0000000                   
 4770  0000000                   	MOV16_16_DP OFFSET_TEMP, DST_OFFSET_RAM
 4771  0000000                   	MOV16_16_DP LEN_TEMP, SRC_LEN_RAM
 4772  0000000                   	MOV16_16 PBUF_TEMP, SRC_PBUF
 4773  0000000                   
 4774  0000000                   	JSR PROTECTION_PAGE_UPDATE_PROC
 4775  0000000                   
 4776  0000000                   	ENDM
 4777  0000000                   ;--------------------------------------------------------





 4778  0000000                   PROTECTION_PAGE_INJECT_ID MACRO DST_PAGE_ADDR
 4779  0000000                   	MOV24_24 DST_PAGE_START_ADDR3, DST_PAGE_ADDR
 4780  0000000                   	JSR FLASH_PAGE_INJECT_ID_PROC
 4781  0000000                   	ENDM
 4782  0000000                   
 4783  0000000                   .ENDIF
 4784  0000000                   .ENDIF
 4785  0000000                   ;--------------------------------------------------------
 4786  0000000                   ;--------------------------------------------------------
 4787  0000000                   .IF (WITH_PROTECTION_PAGE_UPDATE .EQ. 1)
 4788  0000000                   .IF (PROTECTION_PAGE_WORKING_MODE .EQ. 2)
 4789  0000000                   ;--------------------------------------------------------
 4790  0000000                   PROTECTION_PAGE_SECTION_UPDATE MACRO SRC_PBUF
 4791  0000000                   	MOV16_16 PBUF_TEMP, SRC_PBUF
 4792  0000000                   	JSR FLASH_SECTION_UPDATE_PROC
 4793  0000000                   
 4794  0000000                   	ENDM
 4795  0000000                   ;--------------------------------------------------------
 4796  0000000                   PROTECTION_PAGE_SECTION_READ MACRO SRC_PBUF
 4797  0000000                   	MOV16_16 PBUF_TEMP, SRC_PBUF
 4798  0000000                   	JSR FLASH_SECTION_READ_PROC
 4799  0000000                   
 4800  0000000                   	ENDM
 4801  0000000                   .ENDIF
 4802  0000000                   .ENDIF
 4803  0000000                   
 4804  0000000                   
 4805  0000000                   
 4806  0000000                   ;==========================================================================
 4807  0000000                   ;	LIBRARY RAM USED SECTION
 4808  0000000                   ;==========================================================================
 4809  0000000                   	LIBRARY_USED_RAM: SECTION
 4810  0000000                   	ORG 0000H
 4811  0000000                   LIBRARY_RAM DS USER_START
 4812  0000026                   	.ENDS
 4813  0000000                   
 4814  0000000                   	STACK_RAM: SECTION
 4815  0000000                   STACK_USED_RAM DS WITH_STACK_SIZE
 4816  0000020                   HWENGINE_USED_SHARED_RAM DS WITH_HWENGINE_SHARED_RAM_SIZE
 4817  0000020                   	.ENDS
 4818  0000000                   
 4819  0000000                   	LIBRARY_USED_DPD_RAM: SECTION
 4820  0000000                   LIBRARY_USED_DPD_RAM DS DPD_USER_START-F00H
 4821  0000000                     	.ENDS
 4822  0000000                   
 4823  0000000                   	LIBRARY_CODE: SECTION
 4824  0000000                   	ORG	0000H
 4825  0000000                   
 4826  0000000                   	LONGA OFF
 4827  0000000                   	LONGI OFF
 4828  0000000                   
 4829  0000000                   ;==============================================================================
 4830  0000000                   ;==========================================================
 4831  0000000                   ;add by angela 2006.03.23 for DIS/EN CLOBALVOL feature
 4832  0000000                   	.IF (WITH_SP .EQ. 1)
 4833  0000000                   	.IF (WITH_VOL_ADJ .EQ. 1)	
 4834  0000000                   	PUBLIC SP_GLOBAL_VOLUME_TABLE





 4835  0000000                   SP_GLOBAL_VOLUME_TABLE:
 4836  0000000  0F              			DB GLOBAL_VOL_SP0
 4837  0000001  0F              			DB GLOBAL_VOL_SP1
 4838  0000002  0F              			DB GLOBAL_VOL_SP2
 4839  0000003                   	.ENDIF
 4840  0000003                   	.ENDIF
 4841  0000003                   ;-------------------------------------------------------------------------------------------
 4842  0000003                   ;-------------------------------------------------------------------------------------------
 4843  0000003                   	.PUBLIC SP_BUSY_GLOBAL_PLAY_TABLE
 4844  0000003                   SP_BUSY_GLOBAL_PLAY_TABLE:
 4845  0000003                   .IF(WITH_SP .EQ. 1)
 4846  0000003  01              	DB SP1_BZ
 4847  0000004  02              	DB SP2_BZ
 4848  0000005  04              	DB SP3_BZ
 4849  0000006                   .ENDIF				
 4850  0000006                   ;==========================================================
 4851  0000006                   	.PUBLIC EVO_BUSY_GLOBAL_PLAY_TABLE
 4852  0000006                   EVO_BUSY_GLOBAL_PLAY_TABLE:
 4853  0000006                   .IF(WITH_EVO .EQ. 1)
 4854  0000006                   	DB EVO1_BZ
 4855  0000006                   	DB EVO2_BZ
 4856  0000006                   	DB EVO3_BZ
 4857  0000006                   .ENDIF
 4858  0000006                   ;-------------------------------------------------------------------------------------------
 4859  0000006                   ;-------------------------------------------------------------------------------------------	
 4860  0000006                   	PUBLIC DIS_UIO_EVENT_FLAG  ;COMMON_FLAG2: en/dis UIO event for speech channel
 4861  0000006                   DIS_UIO_EVENT_FLAG:
 4862  0000006  02              	DB DIS_UIO_EVENT_FLAG_CH0
 4863  0000007  04              	DB DIS_UIO_EVENT_FLAG_CH1
 4864  0000008  08              	DB DIS_UIO_EVENT_FLAG_CH2
 4865  0000009                   ;-------------------------------------------------------------------------------------------
 4866  0000009                   ;-------------------------------------------------------------------------------------------	
 4867  0000009                   	PUBLIC PLAY_BACK_FLAG_TABLE  ;COMMON_FLAG2: en/dis UIO event for speech channel
 4868  0000009                   PLAY_BACK_FLAG_TABLE:
 4869  0000009  10              	DB PLAY_BACK_CH0
 4870  000000A  20              	DB PLAY_BACK_CH1
 4871  000000B  00              	DB PLAY_BACK_CH2
 4872  000000C                   ;-------------------------------------------------------------------------------------------
 4873  000000C                   ;-------------------------------------------------------------------------------------------	
 4874  000000C                   ;PUBLIC SPEECH_PLAY_SEGMENT_RAM_TABLE
 4875  000000C                   ;SPEECH_PLAY_SEGMENT_RAM_TABLE:
 4876  000000C                   ;.IF (WITH_SP_SKIP .EQ. 1)
 4877  000000C                   ;DB CH1_PLAY_SEGMENT-CH1_PLAY_SEGMENT
 4878  000000C                   ;DB CH2_PLAY_SEGMENT-CH1_PLAY_SEGMENT
 4879  000000C                   ;DB CH3_PLAY_SEGMENT-CH1_PLAY_SEGMENT
 4880  000000C                   ;.ENDIF
 4881  000000C                   ;-------------------------------------------------------------------------------------------
 4882  000000C                   ;-------------------------------------------------------------------------------------------	
 4883  000000C                   ;PUBLIC SPEECH_GLOBAL_SR_TMC_TABLE
 4884  000000C                   ;SPEECH_GLOBAL_SR_TMC_TABLE:
 4885  000000C                   ;.IF (WITH_SP_GLOBAL_SR .EQ. 1)
 4886  000000C                   ;DB CH1_GLOBAL_TMC-CH1_GLOBAL_TMC
 4887  000000C                   ;DB CH2_GLOBAL_TMC-CH1_GLOBAL_TMC
 4888  000000C                   ;DB CH3_GLOBAL_TMC-CH1_GLOBAL_TMC
 4889  000000C                   ;.ENDIF
 4890  000000C                   ;==========================================================
 4891  000000C                   ;	PUBLIC SPEECH_GLOBAL_SR_TMV_TABLE





 4892  000000C                   ;SPEECH_GLOBAL_SR_TMV_TABLE:
 4893  000000C                   ;.IF (WITH_SP_GLOBAL_SR .EQ. 1)
 4894  000000C                   ;	DB CH1_GLOBAL_TMV-CH1_GLOBAL_TMV
 4895  000000C                   ;	DB CH2_GLOBAL_TMV-CH1_GLOBAL_TMV
 4896  000000C                   ;	DB CH3_GLOBAL_TMV-CH1_GLOBAL_TMV
 4897  000000C                   ;.ENDIF
 4898  000000C                   ;-------------------------------------------------------------------------------------------	
 4899  000000C                   ;-------------------------------------------------------------------------------------------
 4900  000000C                   .IF (WITH_SP .EQ. 1) .OR. (WITH_MS .EQ. 1) .OR. (WITH_EVO .EQ. 1)
 4901  000000C                   ;==========================================================
 4902  000000C                   	PUBLIC MS_CH1_NOTE_ON_SYNC_TABLE
 4903  000000C                   MS_CH1_NOTE_ON_SYNC_TABLE:
 4904  000000C                   	.IF (WITH_SYNC_CH1_MS .EQ. 1H)
 4905  000000C                   		EXTERN MS_CH1_NOTE_ON_SYNC
 4906  000000C                   		DW MS_CH1_NOTE_ON_SYNC
 4907  000000C                   	.ELSE
 4908  000000C                   		EXTERN NOTE_ON_PROC_NEXT
 4909  000000C  4E4F            		DW NOTE_ON_PROC_NEXT
 4910  000000E                   	.ENDIF
 4911  000000E                   ;==========================================================
 4912  000000E                   	PUBLIC MS_CH1_NOTE_OFF_SYNC_TABLE
 4913  000000E                   MS_CH1_NOTE_OFF_SYNC_TABLE:
 4914  000000E                   	.IF (WITH_SYNC_CH1_MS .EQ. 1H)
 4915  000000E                   		EXTERN MS_CH1_NOTE_OFF_SYNC
 4916  000000E                   		DW MS_CH1_NOTE_OFF_SYNC
 4917  000000E                   	.ELSE
 4918  000000E                   		EXTERN NOTE_OFF_PROC_NEXT
 4919  000000E  4E4F            		DW NOTE_OFF_PROC_NEXT
 4920  0000010                   	.ENDIF
 4921  0000010                   ;==========================================================
 4922  0000010                   	.ENDIF
 4923  0000010                   ;==========================================================
 4924  0000010                   	PUBLIC EVENT_INT_TYPE_TABLE
 4925  0000010                   EVENT_INT_TYPE_TABLE:
 4926  0000010  2D02            	DW HWE_INT_TYPE_BA
 4927  0000012                   
 4928  0000012                   ;==========================================================
 4929  0000012                   	PUBLIC EVENT_NRPN_ADDR_TABLE
 4930  0000012                   EVENT_NRPN_ADDR_TABLE:
 4931  0000012  1302            	DW HWE_NRPN_BA
 4932  0000014                   
 4933  0000014                   ;==========================================================
 4934  0000014                   	PUBLIC EVENT_COUNT_TABLE
 4935  0000014                   EVENT_COUNT_TABLE:
 4936  0000014  0F02            	DW HWE_CACHE1_BA+CACHE_COUNT
 4937  0000016                   
 4938  0000016                   ;==========================================================
 4939  0000016                   	PUBLIC EVENT_CHUNK_ADDR_TABLE
 4940  0000016                   EVENT_CHUNK_ADDR_TABLE:
 4941  0000016  0602            	DW HWE_CACHE1_EVENT_CHUNK
 4942  0000018                   
 4943  0000018                   ;==========================================================
 4944  0000018                   	PUBLIC EVENT_CH_TABLE
 4945  0000018                   EVENT_CH_TABLE:
 4946  0000018  0E02            	DW HWE_CACHE1_BA+CACHE_CH
 4947  000001A                   
 4948  000001A                   ;==========================================================





 4949  000001A                   	PUBLIC COLOR_FLY_EVENT_ADDR_TABLE
 4950  000001A                   COLOR_FLY_EVENT_ADDR_TABLE:
 4951  000001A  1002            	DW HWE_COLOR_FLY_BA
 4952  000001C                   
 4953  000001C                   ;==========================================================
 4954  000001C                   	PUBLIC COLOR_FLY_GROUP_TABLE
 4955  000001C                   COLOR_FLY_GROUP_TABLE:
 4956  000001C  0000            	DW WITH_COLOR_FLY_CURVENUMS
 4957  000001E                   ;==========================================================
 4958  000001E                   	PUBLIC GET_EVENT_CHANNEL_TYPE
 4959  000001E                   GET_EVENT_CHANNEL_TYPE:
 4960  000001E                   ;0:SPEECH, 1:EVO
 4961  000001E  C9 01			CMP #(EVO_CHANNEL_BASE)
 4962  0000020  90 03			BCC EVENT_CH_TYPE_SP
 4963  0000022                   EVENT_CH_TYPE_EVO:
 4964  0000022  A9 01			LDA #EVO_TYPE
 4965  0000024  60           	RTS
 4966  0000025                   EVENT_CH_TYPE_SP:
 4967  0000025  A9 00			LDA #SPEECH_TYPE
 4968  0000027  60           	RTS
 4969  0000028                   ;==========================================================
 4970  0000028                   	PUBLIC GET_EVENT_CHANNEL
 4971  0000028                   GET_EVENT_CHANNEL:
 4972  0000028                   ;Speech		0:CH1, 1:CH2
 4973  0000028                   ;EVO		0:EVO1, 1:EVO2
 4974  0000028  C9 01			CMP #(EVO_CHANNEL_BASE)
 4975  000002A  90 03			BCC GET_EVENT_CH_END
 4976  000002C                   EVENT_CH_EVO:
 4977  000002C  38           	SEC
 4978  000002D  E9 01			SBC #EVO_CHANNEL_BASE
 4979  000002F                   GET_EVENT_CH_END:
 4980  000002F  60           	RTS
 4981  0000030                   ;==========================================================
 4982  0000030                   	PUBLIC CHK_HWE_IDLE
 4983  0000030                   CHK_HWE_IDLE:
 4984  0000030  AD 1D 02     	LDA HWE_CTRL_BA
 4985  0000033  89 02			BIT #02H
 4986  0000035  F0 03			BEQ CHK_HWE_IDLE_RTN_0
 4987  0000037                   CHK_HWE_IDLE_RTN_1:
 4988  0000037  A9 01			LDA #1
 4989  0000039  60           	RTS
 4990  000003A                   CHK_HWE_IDLE_RTN_0:
 4991  000003A  A9 00			LDA #0
 4992  000003C  60           	RTS
 4993  000003D                   ;==========================================================
 4994  000003D                   	PUBLIC LEAKPROOF_SETTING_FUNC
 4995  000003D                   LEAKPROOF_SETTING_FUNC:
 4996  000003D                   .IF	(MAINBODY='A340')
 4997  000003D                   ; A340 series
 4998  000003D                   	.IF (PARTNO='N589A080').OR.(PARTNO='N589A150').OR.(PARTNO='N589A200').OR.(PARTNO='N589A280').OR.(PARTNO='N589B080').OR.(PARTNO='N589B120').OR.(PARTNO='N589B170').OR.(PARTNO='N589B200').OR.(PARTNO='N589B250').OR.(PARTNO='N589B340').OR.(PARTNO='N589C080').OR.(PARTNO='N589C120').OR.(PARTNO='N589C170').OR.(PARTNO='N589C200').OR.(PARTNO='N589C250').OR.(PARTNO='N589C340').OR.(PARTNO='N589D080').OR.(PARTNO='N589D120').OR.(PARTNO='N589D170').OR.(PARTNO='N589D200').OR.(PARTNO='N589D250').OR.(PARTNO='N589D340')
 4999  000003D                   	.IF (SUBTYPE='SOP8')
 5000  000003D                   	LDA	#FCH
 5001  000003D                   	TSB !BP0D
 5002  000003D                   	TSB !BP0M
 5003  000003D                   
 5004  000003D                   	LDA	#FFH
 5005  000003D                   	TSB !BP1D





 5006  000003D                   	TSB !BP1M
 5007  000003D                   
 5008  000003D                   	TSB !BP2D
 5009  000003D                   	TSB !BP2M
 5010  000003D                   
 5011  000003D                   	TSB !BP3D
 5012  000003D                   	TSB !BP3M
 5013  000003D                   	.ENDIF
 5014  000003D                   
 5015  000003D                   	.IF (SUBTYPE='SOP14')
 5016  000003D                   	LDA	#38H
 5017  000003D                   	TSB !BP0D
 5018  000003D                   	TSB !BP0M
 5019  000003D                   
 5020  000003D                   	LDA	#F7H
 5021  000003D                   	TSB !BP1D
 5022  000003D                   	TSB !BP1M
 5023  000003D                   
 5024  000003D                   	LDA	#FFH
 5025  000003D                   	TSB !BP2D
 5026  000003D                   	TSB !BP2M
 5027  000003D                   
 5028  000003D                   	TSB !BP3D
 5029  000003D                   	TSB !BP3M
 5030  000003D                   	.ENDIF
 5031  000003D                   
 5032  000003D                   	.IF (SUBTYPE='SOP20').OR.(SUBTYPE='TSSOP20')
 5033  000003D                   	LDA	#28H
 5034  000003D                   	TSB !BP0D
 5035  000003D                   	TSB !BP0M
 5036  000003D                   
 5037  000003D                   	LDA	#F6H
 5038  000003D                   	TSB !BP1D
 5039  000003D                   	TSB !BP1M
 5040  000003D                   
 5041  000003D                   	LDA #0FH
 5042  000003D                   	TSB !BP2D
 5043  000003D                   	TSB !BP2M
 5044  000003D                   
 5045  000003D                   	LDA	#FFH
 5046  000003D                   	TSB !BP3D
 5047  000003D                   	TSB !BP3M
 5048  000003D                   	.ENDIF
 5049  000003D                   	.ENDIF
 5050  000003D                   
 5051  000003D                   	.IF (PARTNO='N589A080').OR.(PARTNO='N589A150').OR.(PARTNO='N589A200').OR.(PARTNO='N589A280').OR.(PARTNO='N589B200').OR.(PARTNO='N589B250').OR.(PARTNO='N589B340')
 5052  000003D                   	.IF (SUBTYPE='UNDEFINE').OR.(SUBTYPE='LQFP48')
 5053  000003D                   	LDA	#28H
 5054  000003D                   	TSB !BP0D
 5055  000003D                   	TSB !BP0M
 5056  000003D                   
 5057  000003D                   	LDA	#03H
 5058  000003D                   	TSB !BP3D
 5059  000003D                   	TSB !BP3M
 5060  000003D                   	.ENDIF
 5061  000003D                   	.ENDIF
 5062  000003D                   





 5063  000003D                   	.IF (PARTNO='N589B080').OR.(PARTNO='N589B120').OR.(PARTNO='N589B170').OR.(PARTNO='N589C200').OR.(PARTNO='N589C250').OR.(PARTNO='N589C340').OR.(PARTNO='N589D200').OR.(PARTNO='N589D250').OR.(PARTNO='N589D340')
 5064  000003D                   	.IF (SUBTYPE='UNDEFINE').OR.(SUBTYPE='LQFP48')
 5065  000003D                   	LDA	#28H
 5066  000003D                   	TSB !BP0D
 5067  000003D                   	TSB !BP0M
 5068  000003D                   
 5069  000003D                   	LDA	#FFH
 5070  000003D                   	TSB !BP3D
 5071  000003D                   	TSB !BP3M
 5072  000003D                   	.ENDIF
 5073  000003D                   	.ENDIF
 5074  000003D                   
 5075  000003D                   	.IF (PARTNO='N589C080').OR.(PARTNO='N589C120').OR.(PARTNO='N589C170').OR.(PARTNO='N589D080').OR.(PARTNO='N589D120').OR.(PARTNO='N589D170')
 5076  000003D                   	.IF (SUBTYPE='UNDEFINE').OR.(SUBTYPE='LQFP48')
 5077  000003D                   	LDA	#28H
 5078  000003D                   	TSB !BP0D
 5079  000003D                   	TSB !BP0M
 5080  000003D                   
 5081  000003D                   	LDA	#06H
 5082  000003D                   	TSB !BP1D
 5083  000003D                   	TSB !BP1M
 5084  000003D                   
 5085  000003D                   	LDA	#0FH
 5086  000003D                   	TSB !BP2D
 5087  000003D                   	TSB !BP2M
 5088  000003D                   
 5089  000003D                   	LDA	#FFH
 5090  000003D                   	TSB !BP3D
 5091  000003D                   	TSB !BP3M
 5092  000003D                   	.ENDIF
 5093  000003D                   	.ENDIF
 5094  000003D                   
 5095  000003D                   	.IF (SUBTYPE='SOP20').OR.(SUBTYPE='TSSOP20').OR.(SUBTYPE='SOP14').OR.(SUBTYPE='SOP8')
 5096  000003D                   ; set BP1[7:4] output low
 5097  000003D                   	LDA #F0H
 5098  000003D                   	TRB !BP1R
 5099  000003D                   	TSB !BP1M
 5100  000003D                   	TRB !BP1D
 5101  000003D                   	.ENDIF
 5102  000003D                   
 5103  000003D                   	.IF (SUBTYPE='SOP28').OR.(SUBTYPE='SOP20').OR.(SUBTYPE='TSSOP20').OR.(SUBTYPE='SOP14')
 5104  000003D                   ; set LDO33EN=0
 5105  000003D                   	LDA #1
 5106  000003D                   	TRB !LDOEN
 5107  000003D                   	.ENDIF
 5108  000003D                   
 5109  000003D                   .ENDIF
 5110  000003D                   
 5111  000003D                   .IF	(MAINBODY='D171').OR.(MAINBODY='D481')
 5112  000003D                   ; D171 & D481 series
 5113  000003D                   	.IF (PARTNO='N589D081').OR.(PARTNO='N589D121').OR.(PARTNO='N589D171').OR.(PARTNO='N589D201').OR.(PARTNO='N589D251').OR.(PARTNO='N589D341').OR.(PARTNO='N589D481')
 5114  000003D                   	.IF (SUBTYPE='SOP8')
 5115  000003D                   	LDA	#FCH
 5116  000003D                   	TSB !BP0D
 5117  000003D                   	TSB !BP0M
 5118  000003D                   
 5119  000003D                   	LDA	#FFH





 5120  000003D                   	TSB !BP1D
 5121  000003D                   	TSB !BP1M
 5122  000003D                   
 5123  000003D                   	TSB !BP2D
 5124  000003D                   	TSB !BP2M
 5125  000003D                   
 5126  000003D                   	TSB !BP3D
 5127  000003D                   	TSB !BP3M
 5128  000003D                   	.ENDIF
 5129  000003D                   
 5130  000003D                   	.IF (SUBTYPE='SOP14')
 5131  000003D                   	LDA	#F8H
 5132  000003D                   	TSB !BP0D
 5133  000003D                   	TSB !BP0M
 5134  000003D                   
 5135  000003D                   	LDA	#1FH
 5136  000003D                   	TSB !BP1D
 5137  000003D                   	TSB !BP1M
 5138  000003D                   
 5139  000003D                   	LDA	#FFH
 5140  000003D                   	TSB !BP2D
 5141  000003D                   	TSB !BP2M
 5142  000003D                   
 5143  000003D                   	TSB !BP3D
 5144  000003D                   	TSB !BP3M
 5145  000003D                   	.ENDIF
 5146  000003D                   
 5147  000003D                   	.IF (SUBTYPE='SOP20').OR.(SUBTYPE='TSSOP20')
 5148  000003D                   	LDA	#F8H
 5149  000003D                   	TSB !BP0D
 5150  000003D                   	TSB !BP0M
 5151  000003D                   
 5152  000003D                   	LDA	#07H
 5153  000003D                   	TSB !BP1D
 5154  000003D                   	TSB !BP1M
 5155  000003D                   
 5156  000003D                   	LDA	#0FH
 5157  000003D                   	TSB !BP2D
 5158  000003D                   	TSB !BP2M
 5159  000003D                   
 5160  000003D                   	LDA	#FFH
 5161  000003D                   	TSB !BP3D
 5162  000003D                   	TSB !BP3M
 5163  000003D                   	.ENDIF
 5164  000003D                   	.ENDIF
 5165  000003D                   
 5166  000003D                   	.IF (PARTNO='N589D201').OR.(PARTNO='N589D251').OR.(PARTNO='N589D341').OR.(PARTNO='N589D481')
 5167  000003D                   	.IF (SUBTYPE='UNDEFINE').OR.(SUBTYPE='LQFP48')
 5168  000003D                   	LDA	#28H
 5169  000003D                   	TSB !BP0D
 5170  000003D                   	TSB !BP0M
 5171  000003D                   
 5172  000003D                   	LDA	#06H
 5173  000003D                   	TSB !BP1D
 5174  000003D                   	TSB !BP1M
 5175  000003D                   
 5176  000003D                   	LDA	#07H





 5177  000003D                   	TSB !BP2D
 5178  000003D                   	TSB !BP2M
 5179  000003D                   	.ENDIF
 5180  000003D                   	.ENDIF
 5181  000003D                   
 5182  000003D                   	.IF (PARTNO='N589D081').OR.(PARTNO='N589D121').OR.(PARTNO='N589D171')
 5183  000003D                   	.IF (SUBTYPE='UNDEFINE').OR.(SUBTYPE='LQFP48')
 5184  000003D                   	LDA	#28H
 5185  000003D                   	TSB !BP0D
 5186  000003D                   	TSB !BP0M
 5187  000003D                   
 5188  000003D                   	LDA	#06H
 5189  000003D                   	TSB !BP1D
 5190  000003D                   	TSB !BP1M
 5191  000003D                   
 5192  000003D                   	LDA	#0FH
 5193  000003D                   	TSB !BP2D
 5194  000003D                   	TSB !BP2M
 5195  000003D                   
 5196  000003D                   	LDA	#FFH
 5197  000003D                   	TSB !BP3D
 5198  000003D                   	TSB !BP3M
 5199  000003D                   	.ENDIF
 5200  000003D                   	.ENDIF
 5201  000003D                   
 5202  000003D                   	.IF (PARTNO='N589D081').OR.(PARTNO='N589D121').OR.(PARTNO='N589D171').OR.(PARTNO='N589D201').OR.(PARTNO='N589D251').OR.(PARTNO='N589D341').OR.(PARTNO='N589D481')
 5203  000003D                   	.IF (SUBTYPE='SOP8')
 5204  000003D                   ; set BP1[7:4] output low
 5205  000003D                   	LDA #F0H
 5206  000003D                   	TRB !BP1R
 5207  000003D                   	TSB !BP1M
 5208  000003D                   	TRB !BP1D
 5209  000003D                   	.ENDIF
 5210  000003D                   
 5211  000003D                   	.IF (SUBTYPE='SOP14')
 5212  000003D                   ; set BP1[4] output low
 5213  000003D                   	LDA #10H
 5214  000003D                   	TRB !BP1R
 5215  000003D                   	TSB !BP1M
 5216  000003D                   	TRB !BP1D
 5217  000003D                   	.ENDIF
 5218  000003D                   	.ENDIF
 5219  000003D                   
 5220  000003D                   	.IF (SUBTYPE='SOP28').OR.(SUBTYPE='SOP20').OR.(SUBTYPE='TSSOP20').OR.(SUBTYPE='SOP14')
 5221  000003D                   ; set LDO33EN=0
 5222  000003D                   	LDA #1
 5223  000003D                   	TRB !LDOEN
 5224  000003D                   	.ENDIF
 5225  000003D                   .ENDIF
 5226  000003D                   
 5227  000003D                   .IF	(MAINBODY='A960')
 5228  000003D                   ; A960 series
 5229  000003D                   	.IF (PARTNO='N589A400').OR.(PARTNO='N589A600').OR.(PARTNO='N589A900').OR.(PARTNO='N589B480').OR.(PARTNO='N589B650').OR.(PARTNO='N589B960').OR.(PARTNO='N589C480').OR.(PARTNO='N589C650').OR.(PARTNO='N589C960').OR.(PARTNO='N589D650').OR.(PARTNO='N589D960')
 5230  000003D                   	.IF (SUBTYPE='SOP8')
 5231  000003D                   	LDA	#FCH
 5232  000003D                   	TSB !BP0D
 5233  000003D                   	TSB !BP0M





 5234  000003D                   
 5235  000003D                   	LDA	#FFH
 5236  000003D                   	TSB !BP1D
 5237  000003D                   	TSB !BP1M
 5238  000003D                   
 5239  000003D                   	TSB !BP2D
 5240  000003D                   	TSB !BP2M
 5241  000003D                   
 5242  000003D                   	TSB !BP3D
 5243  000003D                   	TSB !BP3M
 5244  000003D                   	.ENDIF
 5245  000003D                   
 5246  000003D                   	.IF (SUBTYPE='SOP14')
 5247  000003D                   	LDA	#3CH
 5248  000003D                   	TSB !BP0D
 5249  000003D                   	TSB !BP0M
 5250  000003D                   
 5251  000003D                   	LDA	#7EH
 5252  000003D                   	TSB !BP1D
 5253  000003D                   	TSB !BP1M
 5254  000003D                   
 5255  000003D                   	LDA	#FFH
 5256  000003D                   	TSB !BP2D
 5257  000003D                   	TSB !BP2M
 5258  000003D                   
 5259  000003D                   	TSB !BP3D
 5260  000003D                   	TSB !BP3M
 5261  000003D                   	.ENDIF
 5262  000003D                   
 5263  000003D                   	.IF (SUBTYPE='TSSOP20')
 5264  000003D                   	LDA	#73H
 5265  000003D                   	TSB !BP1D
 5266  000003D                   	TSB !BP1M
 5267  000003D                   
 5268  000003D                   	LDA	#FEH
 5269  000003D                   	TSB !BP2D
 5270  000003D                   	TSB !BP2M
 5271  000003D                   
 5272  000003D                   	LDA	#FFH
 5273  000003D                   	TSB !BP3D
 5274  000003D                   	TSB !BP3M
 5275  000003D                   	.ENDIF
 5276  000003D                   
 5277  000003D                   	.IF (SUBTYPE='TSSOP20').OR.(SUBTYPE='SOP14')
 5278  000003D                   ; set BP1[6:4] output low
 5279  000003D                   	LDA #70H
 5280  000003D                   	TRB !BP1R
 5281  000003D                   	TSB !BP1M
 5282  000003D                   	TRB !BP1D
 5283  000003D                   	.ENDIF
 5284  000003D                   
 5285  000003D                   	.IF (SUBTYPE='SOP8')
 5286  000003D                   ; set BP1[7:4] output low
 5287  000003D                   	LDA #F0H
 5288  000003D                   	TRB !BP1R
 5289  000003D                   	TSB !BP1M
 5290  000003D                   	TRB !BP1D





 5291  000003D                   	.ENDIF
 5292  000003D                   	.ENDIF
 5293  000003D                   
 5294  000003D                   	.IF (PARTNO='N589B480N').OR.(PARTNO='N589D650N').OR.(PARTNO='N589D960N')
 5295  000003D                   	.IF (SUBTYPE='UNDEFINE')
 5296  000003D  A9 FC			LDA	#FCH
 5297  000003F  0C 84 0F     	TSB !BP0D
 5298  0000042  0C 88 0F     	TSB !BP0M
 5299  0000045                   
 5300  0000045  A9 73			LDA #73H
 5301  0000047  0C 85 0F     	TSB !BP1D
 5302  000004A  0C 89 0F     	TSB !BP1M
 5303  000004D                   
 5304  000004D  A9 FE			LDA #FEH
 5305  000004F  0C 86 0F     	TSB !BP2D
 5306  0000052  0C 8A 0F     	TSB !BP2M
 5307  0000055                   
 5308  0000055  A9 FF			LDA	#FFH
 5309  0000057  0C 87 0F     	TSB !BP3D
 5310  000005A  0C 8B 0F     	TSB !BP3M
 5311  000005D                   
 5312  000005D                   ; set BP1[6:4] output low
 5313  000005D  A9 70			LDA #70H
 5314  000005F  1C 81 0F     	TRB !BP1R
 5315  0000062  0C 89 0F     	TSB !BP1M
 5316  0000065  1C 85 0F     	TRB !BP1D
 5317  0000068                   	.ENDIF
 5318  0000068                   	.ENDIF
 5319  0000068                   .ENDIF
 5320  0000068  60           	RTS
 5321  0000069                   
 5322  0000069                   ;----------------------------------------------------------------
 5323  0000069                   ;-------------------------------------------------------------------------------------------
 5324  0000069                   	INCLUDE	"C:\NUVOTON\NSPPLAYLISTEDITOR\V1.13.000\NSP_SDS\SDS_NSP\INCLUDE\HWECOMM.ASM.APP"
 5325  0000069                   
 5326  0000069                   	EXTERN CH_ISR_ACTION
 5327  0000069                   	EXTERN NAPP_PLAYLIST_TABLE_ADDR1
 5328  0000069                   	EXTERN NAPP_PLAYLIST_TABLE_ADDR2
 5329  0000069                   	EXTERN NAPP_PLAYLIST_TABLE_ADDR3
 5330  0000069                   
 5331  0000069                   	PUBLIC RESERVE1_ISR
 5332  0000069                   	PUBLIC RESERVE2_ISR
 5333  0000069                   
 5334  0000069                   	PUBLIC STOP_PLAY_Y_SP_API
 5335  0000069                   	PUBLIC STOP_PLAY_Y_EVO_API
 5336  0000069                   	PUBLIC STOP_ALL_SP_API
 5337  0000069                   	PUBLIC STOP_PLAY_ALL_API
 5338  0000069                   	PUBLIC SET_PLAYLIST_TABLE_PROC
 5339  0000069                   
 5340  0000069                   	EXTERN SEND_CMD_PROC
 5341  0000069                   	EXTERN CHK_HANDSHAKE_PROC
 5342  0000069                   
 5343  0000069                   ;============================================================================
 5344  0000069                   ; Handle HWE events
 5345  0000069                   ;============================================================================	
 5346  0000069                   RESERVE1_ISR:
 5347  0000069                   .IF (WITH_SP .EQ. 1) .OR. (WITH_MS .EQ. 1) .OR. (WITH_EVO .EQ. 1)





 5348  0000069  48           	PHA
 5349  000006A  DA           	PHX
 5350  000006B  5A           	PHY
 5351  000006C                   
 5352  000006C  A9 08			LDA #INT0_INTRF
 5353  000006E  8D 92 0F     	STA !EVF0
 5354  0000071                   
 5355  0000071  4C 00 00     	JMP CH_ISR_ACTION
 5356  0000074                   
 5357  0000074                   	PUBLIC CH_ISR_ACTION_RET
 5358  0000074                   CH_ISR_ACTION_RET:
 5359  0000074  7A           	PLY
 5360  0000075  FA           	PLX
 5361  0000076  68           	PLA
 5362  0000077                   .ENDIF
 5363  0000077  40           	RTI
 5364  0000078                   ;==========================================================
 5365  0000078                   RESERVE2_ISR:
 5366  0000078                   ;PHA
 5367  0000078  A9 04			LDA #INT0_RESUME
 5368  000007A  8D 92 0F     	STA !EVF0
 5369  000007D                   
 5370  000007D                   ;PLA
 5371  000007D  40           	RTI
 5372  000007E                   ;==========================================================
 5373  000007E                   STOP_PLAY_Y_SP_API:
 5374  000007E  08           	PHP
 5375  000007F  78           	SEI
 5376  0000080                   
 5377  0000080  98           	TYA							;WRITE CHANNEL
 5378  0000081  8D 1F 02     	STA HWE_CMD_BA+CMD_CH_IDX
 5379  0000084  A9 02			LDA #CMD_STOP
 5380  0000086  20 C5 00     	JSR SEND_CMD_PROC
 5381  0000089                   
 5382  0000089  A9 00			LDA #SPEECH_TYPE
 5383  000008B                   	EXTERN UIO_STOP
 5384  000008B  20 00 00     	JSR UIO_STOP				;UIO_STOP(Y,ACC)
 5385  000008E                   
 5386  000008E                   .IF (WITH_SLD_ENABLE .EQ. 1)
 5387  000008E                   	EXTERN SLD_STOP
 5388  000008E                   	JSR SLD_STOP
 5389  000008E                   .ENDIF
 5390  000008E                   
 5391  000008E  28           	PLP
 5392  000008F  20 CE 00     	JSR CHK_HANDSHAKE_PROC
 5393  0000092  60           	RTS
 5394  0000093                   ;==========================================================
 5395  0000093                   STOP_PLAY_Y_EVO_API:
 5396  0000093  08           	PHP
 5397  0000094  78           	SEI
 5398  0000095                   
 5399  0000095  98           	TYA							;WRITE CHANNEL
 5400  0000096  18           	CLC
 5401  0000097                   .IF	(CHIPSERIES = 'N589A')
 5402  0000097                   	ADC #3
 5403  0000097                   .ENDIF
 5404  0000097                   .IF	(CHIPSERIES = 'N589B').OR.(CHIPSERIES = 'N589C')





 5405  0000097                   	ADC #2
 5406  0000097                   .ENDIF
 5407  0000097                   .IF	(CHIPSERIES = 'N589D')
 5408  0000097  69 01			ADC #1
 5409  0000099                   .ENDIF	
 5410  0000099  8D 1F 02     	STA HWE_CMD_BA+CMD_CH_IDX
 5411  000009C  A9 02			LDA #CMD_STOP
 5412  000009E  20 C5 00     	JSR SEND_CMD_PROC
 5413  00000A1                   
 5414  00000A1  A9 01			LDA #EVO_TYPE
 5415  00000A3                   	EXTERN UIO_STOP
 5416  00000A3  20 00 00     	JSR UIO_STOP				;UIO_STOP(Y,ACC)
 5417  00000A6                   
 5418  00000A6                   .IF (WITH_SLD_ENABLE .EQ. 1)
 5419  00000A6                   	EXTERN SLD_STOP
 5420  00000A6                   	JSR SLD_STOP
 5421  00000A6                   .ENDIF
 5422  00000A6                   
 5423  00000A6  28           	PLP
 5424  00000A7  20 CE 00     	JSR CHK_HANDSHAKE_PROC
 5425  00000AA  60           	RTS
 5426  00000AB                   ;==========================================================	
 5427  00000AB                   STOP_ALL_SP_API:
 5428  00000AB                   	.IF(WITH_SP .EQ. 1)
 5429  00000AB                   		.IF (WITH_SP_NUM .GT. 0)
 5430  00000AB  A0 00				LDY #00H
 5431  00000AD  20 7E 00     		JSR STOP_PLAY_Y_SP_API
 5432  00000B0                   
 5433  00000B0  A0 00				LDY #00H
 5434  00000B2  A9 00				LDA #SPEECH_TYPE
 5435  00000B4  20 00 00     		JSR UIO_STOP
 5436  00000B7                   		.ENDIF
 5437  00000B7                   		.IF (WITH_SP_NUM .GT. 1)
 5438  00000B7                   		LDY #01H
 5439  00000B7                   		JSR STOP_PLAY_Y_SP_API
 5440  00000B7                   
 5441  00000B7                   		LDY #01H
 5442  00000B7                   		LDA #SPEECH_TYPE
 5443  00000B7                   		JSR UIO_STOP
 5444  00000B7                   		.ENDIF
 5445  00000B7                   		.IF (WITH_SP_NUM .GT. 2)
 5446  00000B7                   		LDY #02H
 5447  00000B7                   		JSR STOP_PLAY_Y_SP_API
 5448  00000B7                   
 5449  00000B7                   		LDY #02H
 5450  00000B7                   		LDA #SPEECH_TYPE
 5451  00000B7                   		JSR UIO_STOP
 5452  00000B7                   		.ENDIF
 5453  00000B7                   	.ENDIF
 5454  00000B7                   
 5455  00000B7                   .IF (WITH_SLD_ENABLE .EQ. 1)
 5456  00000B7                   	EXTERN SLD_STOP
 5457  00000B7                   	JSR SLD_STOP
 5458  00000B7                   .ENDIF
 5459  00000B7                   
 5460  00000B7                   .IF (N55P_DEVICE_UIO_USED .GT. 0H)
 5461  00000B7                   .IFDEF WDTIMER





 5462  00000B7                   	LDA #WDTC_CLR
 5463  00000B7                   	STA !WDTC
 5464  00000B7                   .ENDIF  
 5465  00000B7                   	EXTERN UIO_N55P_PROCESS_NEXT
 5466  00000B7                   	JSR UIO_N55P_PROCESS_NEXT
 5467  00000B7                   .ENDIF 	
 5468  00000B7  60           	RTS
 5469  00000B8                   ;==========================================================	
 5470  00000B8                   STOP_PLAY_ALL_API:
 5471  00000B8  08           	PHP
 5472  00000B9  78           	SEI
 5473  00000BA                   _@STOP_EVO1:
 5474  00000BA                   	.IF (WITH_EVO .EQ. 1H)
 5475  00000BA                   		.IF (WITH_CH0_EVO .EQ. 1)
 5476  00000BA                   			LDY #0
 5477  00000BA                   			JSR STOP_PLAY_Y_EVO_API	
 5478  00000BA                   		.ENDIF
 5479  00000BA                   	.ENDIF
 5480  00000BA                   _@STOP_EVO2:
 5481  00000BA                   	.IF (WITH_EVO .EQ. 1H)
 5482  00000BA                   		.IF (WITH_CH1_EVO .EQ. 1)
 5483  00000BA                   			LDY #1
 5484  00000BA                   			JSR STOP_PLAY_Y_EVO_API	
 5485  00000BA                   		.ENDIF
 5486  00000BA                   	.ENDIF
 5487  00000BA                   _@STOP_EVO3:					
 5488  00000BA                   	.IF (WITH_EVO .EQ. 1H)
 5489  00000BA                   		.IF (WITH_CH2_EVO .EQ. 1)
 5490  00000BA                   		.ENDIF
 5491  00000BA                   	.ENDIF
 5492  00000BA                   _@STOP_MS:	
 5493  00000BA                   	.IF (WITH_MS .EQ. 1)
 5494  00000BA                   		LDY #02H
 5495  00000BA                   		JSR STOP_PLAY_Y_SP_API
 5496  00000BA                   	.ENDIF
 5497  00000BA                   
 5498  00000BA                   _@STOP_ALL_SP:	
 5499  00000BA                   	.IF(WITH_SP .EQ. 1)
 5500  00000BA  20 AB 00     		JSR STOP_ALL_SP_API
 5501  00000BD                   	.ENDIF
 5502  00000BD                   
 5503  00000BD  28           	PLP
 5504  00000BE                   
 5505  00000BE                   .IF (N55P_DEVICE_UIO_USED .GT. 0H)
 5506  00000BE                   .IFDEF WDTIMER
 5507  00000BE                   	LDA #WDTC_CLR
 5508  00000BE                   	STA !WDTC
 5509  00000BE                   .ENDIF  
 5510  00000BE                   	EXTERN UIO_N55P_PROCESS_NEXT
 5511  00000BE                   	JSR UIO_N55P_PROCESS_NEXT
 5512  00000BE                   .ENDIF 
 5513  00000BE  60           	RTS
 5514  00000BF                   ;==========================================================
 5515  00000BF                   SET_PLAYLIST_TABLE_PROC:
 5516  00000BF                   .IF (WITH_PLAY_INDEX .EQ. 1)
 5517  00000BF                   	LDA 00H
 5518  00000BF                   	PHA





 5519  00000BF                   	LDA 01H
 5520  00000BF                   	PHA
 5521  00000BF                   	LDA 02H
 5522  00000BF                   	PHA
 5523  00000BF                   	LDA 03H
 5524  00000BF                   	PHA
 5525  00000BF                   
 5526  00000BF                   ;;; set external table address
 5527  00000BF                   	FLASH_READ NAPP_PLAYLIST_TABLE_ADDR1, 4, 0H
 5528  00000BF                   	LDA 02H
 5529  00000BF                   	STA HWE_PLAYBYIDX_BA+0
 5530  00000BF                   	LDA 03H
 5531  00000BF                   	STA HWE_PLAYBYIDX_BA+1
 5532  00000BF                   
 5533  00000BF                   	FLASH_READ NAPP_PLAYLIST_TABLE_ADDR2, 4, 0H
 5534  00000BF                   	LDA 00H
 5535  00000BF                   	STA HWE_PLAYBYIDX_BA+2
 5536  00000BF                   	LDA 01H
 5537  00000BF                   	STA HWE_PLAYBYIDX_BA+3
 5538  00000BF                   
 5539  00000BF                   ;;; set internal table address
 5540  00000BF                   	LDA 02H
 5541  00000BF                   	STA HWE_CMD_BA+CMD_PARAMETER
 5542  00000BF                   	LDA 03H
 5543  00000BF                   	STA HWE_CMD_BA+CMD_PARAMETER+1
 5544  00000BF                   
 5545  00000BF                   	FLASH_READ NAPP_PLAYLIST_TABLE_ADDR3, 4, 0H
 5546  00000BF                   	LDA 00H
 5547  00000BF                   	STA HWE_CMD_BA+CMD_PARAMETER+2
 5548  00000BF                   	LDA 01H
 5549  00000BF                   	STA HWE_CMD_BA+CMD_PARAMETER+3
 5550  00000BF                   
 5551  00000BF                   	PLA
 5552  00000BF                   	STA 03H
 5553  00000BF                   	PLA
 5554  00000BF                   	STA 02H
 5555  00000BF                   	PLA
 5556  00000BF                   	STA 01H
 5557  00000BF                   	PLA
 5558  00000BF                   	STA 00H
 5559  00000BF                   .ENDIF
 5560  00000BF  60           	RTS
 5561  00000C0                   ;==========================================================
 5562  00000C0                   
 5563  00000C0                   .IF (WITH_PROTECTION_PAGE_UPDATE .EQ. 0)
 5564  00000C0                   	INCLUDE	"C:\NUVOTON\NSPPLAYLISTEDITOR\V1.13.000\NSP_SDS\SDS_NSP\INCLUDE\HWEBOOT.ASM.APP"
 5565  00000C0                   
 5566  00000C0                   	EXTERN CH_ISR_ACTION
 5567  00000C0                   	EXTERN NAPP_PLAYLIST_TABLE_ADDR1
 5568  00000C0                   	EXTERN NAPP_PLAYLIST_TABLE_ADDR2
 5569  00000C0                   	EXTERN NAPP_PLAYLIST_TABLE_ADDR3
 5570  00000C0                   
 5571  00000C0                   	PUBLIC SEND_CMD_PROC
 5572  00000C0                   	PUBLIC CHK_HANDSHAKE_PROC
 5573  00000C0                   	PUBLIC SEND_PLAY_CMD_PROC
 5574  00000C0                   	PUBLIC HWE_READY_PROC
 5575  00000C0                   





 5576  00000C0                   	PUBLIC HWE_TABLE_BA_PROC
 5577  00000C0                   	PUBLIC HWE_TABLE_ALT1_BA_PROC
 5578  00000C0                   
 5579  00000C0                   	PUBLIC REFRESH_STATUS_PROC
 5580  00000C0                   
 5581  00000C0                   ;============================================================================
 5582  00000C0                   ; Handle HWE comm
 5583  00000C0                   ;============================================================================
 5584  00000C0                   SEND_PLAY_CMD_PROC:
 5585  00000C0  8D 22 02     	STA HWE_CMD_BA+CMD_PARAMETER+2
 5586  00000C3  A9 01			LDA #CMD_PLAY
 5587  00000C5                   SEND_CMD_PROC:
 5588  00000C5                   .IF (WITH_SP .EQ. 1) .OR. (WITH_MS .EQ. 1) .OR. (WITH_EVO .EQ. 1)
 5589  00000C5  8D 1E 02     	STA HWE_CMD_BA+CMD_IDX
 5590  00000C8  A9 02			LDA #02H
 5591  00000CA  0C B8 0F     	TSB !INTRF
 5592  00000CD                   .ENDIF
 5593  00000CD  60           	RTS
 5594  00000CE                   ;==========================================================
 5595  00000CE                   CHK_HANDSHAKE_PROC:
 5596  00000CE                   .IF (WITH_SP .EQ. 1) .OR. (WITH_MS .EQ. 1) .OR. (WITH_EVO .EQ. 1)
 5597  00000CE                   	.IFDEF WDTIMER
 5598  00000CE  A9 01			LDA #WDTC_CLR
 5599  00000D0  8D 96 0F     	STA !WDTC
 5600  00000D3                   	.ENDIF ;WDTIMER
 5601  00000D3                   
 5602  00000D3                   ; check handshake
 5603  00000D3                   CHECK_HANDSHAKE:
 5604  00000D3  AD 1E 02     	LDA HWE_CMD_BA+CMD_IDX
 5605  00000D6  F0 03			BEQ 3							;WAIT TO HANDSHAKE
 5606  00000D8  4C D3 00     	JMP CHECK_HANDSHAKE
 5607  00000DB                   
 5608  00000DB                   ; enable HWE idle notifications
 5609  00000DB  08           	PHP
 5610  00000DC  78           	SEI
 5611  00000DD  A9 02			LDA #02H
 5612  00000DF  0C 1D 02     	TSB HWE_CTRL_BA
 5613  00000E2  28           	PLP
 5614  00000E3                   
 5615  00000E3                   .ENDIF
 5616  00000E3  60           	RTS
 5617  00000E4                   ;==========================================================
 5618  00000E4                   CHK_SYS_HANDSHAKE_PROC:
 5619  00000E4                   .IF (WITH_SP .EQ. 1) .OR. (WITH_MS .EQ. 1) .OR. (WITH_EVO .EQ. 1)
 5620  00000E4                   	.IFDEF WDTIMER
 5621  00000E4  A9 01			LDA #WDTC_CLR
 5622  00000E6  8D 96 0F     	STA !WDTC
 5623  00000E9                   	.ENDIF ;WDTIMER
 5624  00000E9                   
 5625  00000E9                   ; check handshake
 5626  00000E9                   CHECK_SYS_HANDSHAKE:
 5627  00000E9  AD 1E 02     	LDA HWE_CMD_BA+CMD_IDX
 5628  00000EC  F0 03			BEQ 3							;WAIT TO HANDSHAKE
 5629  00000EE  4C E9 00     	JMP CHECK_SYS_HANDSHAKE
 5630  00000F1                   
 5631  00000F1                   .ENDIF
 5632  00000F1  60           	RTS





 5633  00000F2                   ;==========================================================
 5634  00000F2                   HWE_READY_PROC:
 5635  00000F2                   	.IF (WITH_SIM_SP .EQ. 0)
 5636  00000F2  9C 23 02     	STZ HWE_CMD_BA+CMD_PARAMETER+3		;CODE OPTIMIZATION
 5637  00000F5                   	.ENDIF
 5638  00000F5                   ; Disable HWE idle notifications
 5639  00000F5  08           	PHP
 5640  00000F6  78           	SEI
 5641  00000F7  A9 02			LDA #02H
 5642  00000F9  1C 1D 02     	TRB HWE_CTRL_BA
 5643  00000FC  28           	PLP
 5644  00000FD                   
 5645  00000FD                   CHK_HWENG:
 5646  00000FD  AD BA 0F     	LDA !HWENG							;CHECK HWENG
 5647  0000100  F0 03			BEQ 3
 5648  0000102  4C 0B 01     	JMP CHK_HWE_STATUS
 5649  0000105  20 1E 01     	JSR SYNTHESISER_BOOT_UP_PROC
 5650  0000108  4C 1D 01     	JMP HWE_READY_END
 5651  000010B                   
 5652  000010B                   CHK_HWE_STATUS:
 5653  000010B  AD 1C 02     	LDA HWE_STATUS_BA+1
 5654  000010E  89 80			BIT #80H
 5655  0000110  D0 03			BNE 3
 5656  0000112  4C 1D 01     	JMP HWE_READY_END
 5657  0000115                   
 5658  0000115  A9 01			LDA	#01H							;HWE STATUS FAULT, REBOOT
 5659  0000117  1C BA 0F     	TRB !HWENG
 5660  000011A  20 1E 01     	JSR SYNTHESISER_BOOT_UP_PROC
 5661  000011D                   
 5662  000011D                   HWE_READY_END:
 5663  000011D  60           	RTS
 5664  000011E                   ;==========================================================
 5665  000011E                   SYNTHESISER_BOOT_UP_PROC:
 5666  000011E                   .IF (WITH_SP .EQ. 1) .OR. (WITH_MS .EQ. 1)
 5667  000011E                   	.IF(WITH_HWE_DEBUG .EQ. 1)
 5668  000011E                   	LDA #F0H
 5669  000011E                   	TSB !BP2MF0
 5670  000011E                   	.ENDIF
 5671  000011E                   
 5672  000011E                   	.IF (WITH_SIM_SP .EQ. 1)
 5673  000011E                   	LDA #CTL_EN_EXT_FLAG				;ENABLE EXT FLASH
 5674  000011E                   	TSB HWE_CTRL_BA
 5675  000011E                   
 5676  000011E                   	LDA #0FH							;BP2n PIN IS MAPPED TO HWE
 5677  000011E                   	TSB !BP2MF0
 5678  000011E                   
 5679  000011E                   	.IFDEF SPIVDD_FROM_LDO
 5680  000011E                   	LDA #01H							;ENABLE LDO33
 5681  000011E                   	TSB !LDOEN		
 5682  000011E                   	.ENDIF ;SPIVDD_FROM_LDO
 5683  000011E                   	.ENDIF ;WITH_SIM_SP
 5684  000011E                   
 5685  000011E  9C 1B 02     	STZ HWE_STATUS_BA
 5686  0000121  9C 1C 02     	STZ HWE_STATUS_BA+1
 5687  0000124                   
 5688  0000124  A9 02			LDA #02H
 5689  0000126  1C 1D 02     	TRB HWE_CTRL_BA





 5690  0000129                   
 5691  0000129  A9 01			LDA	#01H							;SYNTHESISER ON
 5692  000012B  0C BA 0F     	TSB !HWENG
 5693  000012E                   
 5694  000012E                   HEAT_ENGINE:
 5695  000012E                   .IFDEF WDTIMER
 5696  000012E  A9 01			LDA #WDTC_CLR
 5697  0000130  8D 96 0F     	STA !WDTC
 5698  0000133                   .ENDIF ;WDTIMER
 5699  0000133                   
 5700  0000133  AD 1C 02     	LDA !HWE_STATUS_BA+1
 5701  0000136  C9 00			CMP #.HIGH.ERROR_HWE_READY
 5702  0000138  F0 03			BEQ 3
 5703  000013A  4C 2E 01     	JMP HEAT_ENGINE
 5704  000013D  AD 1B 02     	LDA !HWE_STATUS_BA
 5705  0000140  C9 FF			CMP #.LOW.ERROR_HWE_READY
 5706  0000142  F0 03			BEQ 3
 5707  0000144  4C 2E 01     	JMP HEAT_ENGINE
 5708  0000147                   
 5709  0000147  AD 1D 02     	LDA !HWE_CTRL_BA
 5710  000014A  89 01			BIT #01H
 5711  000014C  D0 03			BNE 3
 5712  000014E  4C 59 01     	JMP INIT_SYS_TABLE
 5713  0000151                   
 5714  0000151                   NON_INIT_SYS_TABLE:
 5715  0000151  A9 00			LDA #00H
 5716  0000153  20 6F 01     	JSR HWE_INIT_SYS_PROC
 5717  0000156  4C 69 01     	JMP SYNTHESISER_BOOT_UP_PROC_END
 5718  0000159                   
 5719  0000159                   INIT_SYS_TABLE:
 5720  0000159  A9 80			LDA #80H
 5721  000015B  20 6F 01     	JSR HWE_INIT_SYS_PROC
 5722  000015E  20 7E 01     	JSR HWE_LOGIC_BA_PROC
 5723  0000161  20 9E 01     	JSR HWE_TABLE_BA_PROC
 5724  0000164                   
 5725  0000164  A9 01			LDA #01H
 5726  0000166  0C 1D 02     	TSB !HWE_CTRL_BA
 5727  0000169                   
 5728  0000169                   SYNTHESISER_BOOT_UP_PROC_END:
 5729  0000169  A9 08			LDA #08H
 5730  000016B  0C 90 0F     	TSB !IEF0
 5731  000016E                   .ENDIF
 5732  000016E                   
 5733  000016E  60           	RTS
 5734  000016F                   ;==========================================================
 5735  000016F                   HWE_INIT_SYS_PROC:
 5736  000016F  08           	PHP
 5737  0000170  78           	SEI
 5738  0000171  8D 20 02     	STA HWE_CMD_BA+CMD_PARAMETER
 5739  0000174                   
 5740  0000174  A9 A8			LDA #CMD_INIT_SYS
 5741  0000176  20 C5 00     	JSR SEND_CMD_PROC
 5742  0000179                   
 5743  0000179  28           	PLP
 5744  000017A  20 E4 00     	JSR CHK_SYS_HANDSHAKE_PROC
 5745  000017D  60           	RTS
 5746  000017E                   ;==========================================================	





 5747  000017E                   HWE_LOGIC_BA_PROC:
 5748  000017E                   	EXTERN	_TABLE.BIN
 5749  000017E  08           	PHP
 5750  000017F  78           	SEI
 5751  0000180  A9 00			LDA	#.LOW._TABLE.BIN
 5752  0000182  8D 20 02     	STA HWE_CMD_BA+CMD_PARAMETER
 5753  0000185  A9 00			LDA	#.HIGH._TABLE.BIN
 5754  0000187  8D 21 02     	STA HWE_CMD_BA+CMD_PARAMETER+1
 5755  000018A  A9 00			LDA	#.HIGH8._TABLE.BIN
 5756  000018C  8D 22 02     	STA HWE_CMD_BA+CMD_PARAMETER+2
 5757  000018F  A9 00			LDA	#.SEGHIGH._TABLE.BIN
 5758  0000191  8D 23 02     	STA HWE_CMD_BA+CMD_PARAMETER+3
 5759  0000194                   
 5760  0000194  A9 A9			LDA #CMD_LOGIC_BA
 5761  0000196  20 C5 00     	JSR SEND_CMD_PROC
 5762  0000199                   
 5763  0000199  28           	PLP
 5764  000019A  20 E4 00     	JSR CHK_SYS_HANDSHAKE_PROC
 5765  000019D  60           	RTS
 5766  000019E                   ;==========================================================	
 5767  000019E                   HWE_TABLE_BA_PROC:
 5768  000019E                   	EXTERN 	_INITTABLE_
 5769  000019E  08           	PHP
 5770  000019F  78           	SEI
 5771  00001A0  A9 00			LDA	#.LOW._INITTABLE_
 5772  00001A2  8D 20 02     	STA HWE_CMD_BA+CMD_PARAMETER
 5773  00001A5  A9 00			LDA	#.HIGH._INITTABLE_
 5774  00001A7  8D 21 02     	STA HWE_CMD_BA+CMD_PARAMETER+1
 5775  00001AA  A9 00			LDA	#.HIGH8._INITTABLE_
 5776  00001AC  8D 22 02     	STA HWE_CMD_BA+CMD_PARAMETER+2
 5777  00001AF  A9 00			LDA	#.SEGHIGH._INITTABLE_
 5778  00001B1  8D 23 02     	STA HWE_CMD_BA+CMD_PARAMETER+3
 5779  00001B4                   
 5780  00001B4  A9 AA			LDA #CMD_TABLE_BA
 5781  00001B6  20 C5 00     	JSR SEND_CMD_PROC
 5782  00001B9                   
 5783  00001B9  28           	PLP
 5784  00001BA  20 E4 00     	JSR CHK_SYS_HANDSHAKE_PROC
 5785  00001BD  60           	RTS
 5786  00001BE                   ;==========================================================	
 5787  00001BE                   HWE_TABLE_ALT1_BA_PROC:
 5788  00001BE                   	EXTERN 	_INITTABLE_ALT1
 5789  00001BE  08           	PHP
 5790  00001BF  78           	SEI
 5791  00001C0  A9 00			LDA	#.LOW._INITTABLE_ALT1
 5792  00001C2  8D 20 02     	STA HWE_CMD_BA+CMD_PARAMETER
 5793  00001C5  A9 00			LDA	#.HIGH._INITTABLE_ALT1
 5794  00001C7  8D 21 02     	STA HWE_CMD_BA+CMD_PARAMETER+1
 5795  00001CA  A9 00			LDA	#.HIGH8._INITTABLE_ALT1
 5796  00001CC  8D 22 02     	STA HWE_CMD_BA+CMD_PARAMETER+2
 5797  00001CF  A9 00			LDA	#.SEGHIGH._INITTABLE_ALT1
 5798  00001D1  8D 23 02     	STA HWE_CMD_BA+CMD_PARAMETER+3
 5799  00001D4                   
 5800  00001D4  A9 AA			LDA #CMD_TABLE_BA
 5801  00001D6  20 C5 00     	JSR SEND_CMD_PROC
 5802  00001D9                   
 5803  00001D9  28           	PLP





 5804  00001DA  20 E4 00     	JSR CHK_SYS_HANDSHAKE_PROC
 5805  00001DD  60           	RTS
 5806  00001DE                   ;==========================================================
 5807  00001DE                   REFRESH_STATUS_PROC:
 5808  00001DE                   .IF (WITH_SP .EQ. 1) .OR. (WITH_MS .EQ. 1) .OR. (WITH_EVO .EQ. 1)
 5809  00001DE  AD 2C 02     	LDA HWE_CH_BUSY_BA
 5810  00001E1  85 00			STA <GLOBAL_PLAY
 5811  00001E3                   REFRESH_STATUS_END:
 5812  00001E3                   .ENDIF
 5813  00001E3  60           	RTS
 5814  00001E4                   
 5815  00001E4                   
 5816  00001E4                   
 5817  00001E4                   
 5818  00001E4                   .ENDIF 
 5819  00001E4                   	INCLUDE	"C:\NUVOTON\NSPPLAYLISTEDITOR\V1.13.000\NSP_SDS\SDS_NSP\INCLUDE\FLASHCOMM.ASM.APP"
 5820  00001E4                   	CHIP	65C02
 5821  00001E4                   	SYMBOLS
 5822  00001E4                   	LINEAR		ON
 5823  00001E4                   
 5824  00001E4                   	PUBLIC FLASH_ERASE_PAGE_PROC
 5825  00001E4                   	PUBLIC FLASH_READ_PAGE_PROC
 5826  00001E4                   	PUBLIC FLASH_WRITE_PAGE_PROC
 5827  00001E4                   .IF (WITH_ISP_UPDATE .EQ. 1)
 5828  00001E4                   	PUBLIC FLASH_COPY_PAGE_PROC
 5829  00001E4                   	PUBLIC FLASH_BLANK_CHECK_PAGE_PROC
 5830  00001E4                   	PUBLIC FLASH_VERIFY_PAGE_PROC
 5831  00001E4                   .ENDIF
 5832  00001E4                   
 5833  00001E4                   	PUBLIC ADD_CHECKSUM_LIB
 5834  00001E4                   
 5835  00001E4                   .IF (WITH_PROTECTION_PAGE_UPDATE .EQ. 1)
 5836  00001E4                   .IF (PROTECTION_PAGE_WORKING_MODE .EQ. 1)		
 5837  00001E4                   	PUBLIC FLASH_BACKUP_REPLACE_PAGE_PROC
 5838  00001E4                   	PUBLIC PROTECTION_PAGE_READ_PROC
 5839  00001E4                   	PUBLIC PROTECTION_PAGE_UPDATE_PROC
 5840  00001E4                   .ENDIF
 5841  00001E4                   .ENDIF
 5842  00001E4                   
 5843  00001E4                   	EXTERN FLASH_BACKUP_REPLACE_PAGE_HANDLE
 5844  00001E4                   	EXTERN FLASH_PAGE_INJECT_ID_HANDLE
 5845  00001E4                   	EXTERN PROTECTION_PAGE_READ_HANDLE
 5846  00001E4                   	EXTERN PROTECTION_PAGE_UPDATE_HANDLE
 5847  00001E4                   	EXTERN ADD_CHECKSUM_HANDLE
 5848  00001E4                   ;============================================================================
 5849  00001E4                   FLASH_ERASE_PAGE_PROC:
 5850  00001E4  AE 8C 0F     	LDX !BANK
 5851  00001E7  DA           	PHX
 5852  00001E8                   
 5853  00001E8  A9 00			LDA #.HIGH8.FLASH_ERASE_PAGE_HANDLE
 5854  00001EA  8D 8C 0F     	STA !BANK
 5855  00001ED  20 00 00     	JSR FLASH_ERASE_PAGE_HANDLE
 5856  00001F0                   
 5857  00001F0  FA           	PLX
 5858  00001F1  8E 8C 0F         STX !BANK
 5859  00001F4  60           	RTS
 5860  00001F5                   ;============================================================================





 5861  00001F5                   FLASH_READ_PAGE_PROC:
 5862  00001F5  AE 8C 0F     	LDX !BANK
 5863  00001F8  DA           	PHX
 5864  00001F9                   
 5865  00001F9  A9 00			LDA #.HIGH8.FLASH_READ_PAGE_HANDLE
 5866  00001FB  8D 8C 0F     	STA !BANK
 5867  00001FE  20 5A 00     	JSR FLASH_READ_PAGE_HANDLE
 5868  0000201                   
 5869  0000201  FA           	PLX
 5870  0000202  8E 8C 0F         STX !BANK
 5871  0000205  60           	RTS
 5872  0000206                   ;============================================================================
 5873  0000206                   FLASH_WRITE_PAGE_PROC:
 5874  0000206  AE 8C 0F     	LDX !BANK
 5875  0000209  DA           	PHX
 5876  000020A                   
 5877  000020A  A9 00			LDA #.HIGH8.FLASH_WRITE_PAGE_HANDLE
 5878  000020C  8D 8C 0F     	STA !BANK
 5879  000020F  20 6B 01     	JSR FLASH_WRITE_PAGE_HANDLE
 5880  0000212                   
 5881  0000212  FA           	PLX
 5882  0000213  8E 8C 0F         STX !BANK
 5883  0000216  60           	RTS
 5884  0000217                   ;============================================================================	
 5885  0000217                   .IF (WITH_ISP_UPDATE .EQ. 1)
 5886  0000217                   FLASH_COPY_PAGE_PROC:
 5887  0000217  AE 8C 0F     	LDX !BANK
 5888  000021A  DA           	PHX
 5889  000021B                   
 5890  000021B  A9 00			LDA #.HIGH8.FLASH_COPY_PAGE_HANDLE
 5891  000021D  8D 8C 0F     	STA !BANK
 5892  0000220  20 8A 02     	JSR FLASH_COPY_PAGE_HANDLE
 5893  0000223                   
 5894  0000223  FA           	PLX
 5895  0000224  8E 8C 0F         STX !BANK
 5896  0000227  60           	RTS
 5897  0000228                   ;----------------------------------------------------------------------	
 5898  0000228                   FLASH_BLANK_CHECK_PAGE_PROC:
 5899  0000228  AE 8C 0F     	LDX !BANK
 5900  000022B  DA           	PHX
 5901  000022C                   
 5902  000022C  A9 00			LDA #.HIGH8.FLASH_BLANK_CHECK_PAGE_HANDLE
 5903  000022E  8D 8C 0F     	STA !BANK
 5904  0000231  20 4D 04     	JSR FLASH_BLANK_CHECK_PAGE_HANDLE
 5905  0000234                   
 5906  0000234  FA           	PLX
 5907  0000235  8E 8C 0F         STX !BANK
 5908  0000238  60           	RTS
 5909  0000239                   ;----------------------------------------------------------------------
 5910  0000239                   FLASH_VERIFY_PAGE_PROC:
 5911  0000239  AE 8C 0F     	LDX !BANK
 5912  000023C  DA           	PHX
 5913  000023D                   
 5914  000023D  A9 00			LDA #.HIGH8.FLASH_VERIFY_PAGE_HANDLE
 5915  000023F  8D 8C 0F     	STA !BANK
 5916  0000242  20 7F 05     	JSR FLASH_VERIFY_PAGE_HANDLE
 5917  0000245                   





 5918  0000245  FA           	PLX
 5919  0000246  8E 8C 0F         STX !BANK
 5920  0000249  60           	RTS
 5921  000024A                   .ENDIF
 5922  000024A                   ;============================================================================
 5923  000024A                   ADD_CHECKSUM_LIB:
 5924  000024A  AE 8C 0F     	LDX !BANK
 5925  000024D  DA           	PHX
 5926  000024E                   
 5927  000024E  A9 00			LDA #.HIGH8.ADD_CHECKSUM_HANDLE
 5928  0000250  8D 8C 0F     	STA !BANK
 5929  0000253  20 00 00     	JSR ADD_CHECKSUM_HANDLE
 5930  0000256                   
 5931  0000256  FA           	PLX
 5932  0000257  8E 8C 0F         STX !BANK
 5933  000025A  60           	RTS
 5934  000025B                   ;============================================================================
 5935  000025B                   .IF (WITH_PROTECTION_PAGE_UPDATE .EQ. 1)
 5936  000025B                   .IF (PROTECTION_PAGE_WORKING_MODE .EQ. 1)	
 5937  000025B                   FLASH_BACKUP_REPLACE_PAGE_PROC:
 5938  000025B                   	LDX !BANK
 5939  000025B                   	PHX
 5940  000025B                   
 5941  000025B                   	LDA #.HIGH8.FLASH_BACKUP_REPLACE_PAGE_HANDLE
 5942  000025B                   	STA !BANK
 5943  000025B                   	JSR FLASH_BACKUP_REPLACE_PAGE_HANDLE
 5944  000025B                   
 5945  000025B                   	PLX
 5946  000025B                       STX !BANK
 5947  000025B                   	RTS
 5948  000025B                   ;----------------------------------------------------------------------
 5949  000025B                   PROTECTION_PAGE_READ_PROC:
 5950  000025B                   	LDX !BANK
 5951  000025B                   	PHX
 5952  000025B                   
 5953  000025B                   	LDA #.HIGH8.PROTECTION_PAGE_READ_HANDLE
 5954  000025B                   	STA !BANK
 5955  000025B                   	JSR PROTECTION_PAGE_READ_HANDLE
 5956  000025B                   
 5957  000025B                   	PLX
 5958  000025B                       STX !BANK
 5959  000025B                   	RTS
 5960  000025B                   ;----------------------------------------------------------------------
 5961  000025B                   PROTECTION_PAGE_UPDATE_PROC:
 5962  000025B                   	LDX !BANK
 5963  000025B                   	PHX
 5964  000025B                   
 5965  000025B                   	LDA #.HIGH8.PROTECTION_PAGE_UPDATE_HANDLE
 5966  000025B                   	STA !BANK
 5967  000025B                   	JSR PROTECTION_PAGE_UPDATE_HANDLE
 5968  000025B                   
 5969  000025B                   	PLX
 5970  000025B                       STX !BANK
 5971  000025B                   	RTS
 5972  000025B                   ;============================================================================
 5973  000025B                   .ENDIF
 5974  000025B                   .ENDIF





 5975  000025B                   
 5976  000025B                   	INCLUDE	"C:\NUVOTON\NSPPLAYLISTEDITOR\V1.13.000\NSP_SDS\SDS_NSP\INCLUDE\CAPSENSORTABLE.ASM.APP"
 5977  000025B                   
 5978  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 0)
 5979  000025B                   
 5980  000025B                   	PUBLIC TMG_DIV
 5981  000025B                   TMG_DIV:
 5982  000025B                       DB CAP_SENSOR_TMG_DIV
 5983  000025B                   
 5984  000025B                   	INCLUDE	"C:\NUVOTON\NSPPLAYLISTEDITOR\V1.13.000\NSP_SDS\SDS_NSP\INCLUDE\CAPSENSOR_MULTISENTABLE.INI.APP"
 5985  000025B                   
 5986  000025B                       DL "CTGI" ; Cap Touch General Information
 5987  000025B                       DW 6 + WITH_FW_CAP_SENSOR_KEYS * 5
 5988  000025B                           PUBLIC CAP_CURRENT
 5989  000025B                   CAP_CURRENT:
 5990  000025B                           DB CAP_SENSOR_CURRENT_SOURCE
 5991  000025B                   
 5992  000025B                           PUBLIC CAP_SENSOR_PORT_LOACTION_TABLE
 5993  000025B                   CAP_SENSOR_PORT_LOACTION_TABLE:
 5994  000025B                           DB	WITH_FW_CAP_SENSOR_KEYS-1
 5995  000025B                   
 5996  000025B                       .IF(CAP_SleepTime_Sel_Num .EQ. 0)
 5997  000025B                       PUBLIC SLEEP_TIME
 5998  000025B                   SLEEP_TIME:
 5999  000025B                       .ENDIF
 6000  000025B                   
 6001  000025B                       DB CAP_SENSOR_SLEEP_TIME
 6002  000025B                       DB TOUCH_WAKEUP_EN
 6003  000025B                       DB WITH_TOUCH_WAKEUP_KEYNUMS
 6004  000025B                   
 6005  000025B                   	PUBLIC CAP_WAKEUP_KEY_NUMBER
 6006  000025B                   CAP_WAKEUP_KEY_NUMBER:
 6007  000025B                       .IF(TOUCH_WAKEUP_EN .GT. 0)
 6008  000025B                       DB WITH_TOUCH_WAKEUP_KEYNUMS - 1
 6009  000025B                       .ELSE
 6010  000025B                       DB 0H
 6011  000025B                       .ENDIF
 6012  000025B                   
 6013  000025B                   	.IF (MAINBODY='A960').OR.(MAINBODY='D171').OR.(MAINBODY='D481')
 6014  000025B                   BPX_F_NUM    EQU 3
 6015  000025B                   	.ENDIF
 6016  000025B                   	.IF (MAINBODY='A340')
 6017  000025B                   BPX_F_NUM    EQU 2
 6018  000025B                       .ENDIF
 6019  000025B                   
 6020  000025B                           PUBLIC T_TouchKeys_PinInx    
 6021  000025B                   T_TouchKeys_PinInx:
 6022  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 0)
 6023  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY0_BP
 6024  000025B                       .ENDIF
 6025  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 1)
 6026  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY1_BP
 6027  000025B                       .ENDIF
 6028  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 2)
 6029  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY2_BP
 6030  000025B                       .ENDIF
 6031  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 3)





 6032  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY3_BP
 6033  000025B                       .ENDIF
 6034  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 4)
 6035  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY4_BP
 6036  000025B                       .ENDIF
 6037  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 5)
 6038  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY5_BP
 6039  000025B                       .ENDIF
 6040  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 6)
 6041  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY6_BP
 6042  000025B                       .ENDIF
 6043  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 7)
 6044  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY7_BP
 6045  000025B                       .ENDIF
 6046  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 8)
 6047  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY8_BP
 6048  000025B                       .ENDIF
 6049  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 9)
 6050  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY9_BP
 6051  000025B                       .ENDIF
 6052  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 10)
 6053  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY10_BP
 6054  000025B                       .ENDIF
 6055  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 11)
 6056  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY11_BP
 6057  000025B                       .ENDIF
 6058  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 12)
 6059  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY12_BP
 6060  000025B                       .ENDIF
 6061  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 13)
 6062  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY13_BP
 6063  000025B                       .ENDIF
 6064  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 14)
 6065  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY14_BP
 6066  000025B                       .ENDIF
 6067  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 15)
 6068  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY15_BP
 6069  000025B                       .ENDIF
 6070  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 16)
 6071  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY16_BP
 6072  000025B                       .ENDIF
 6073  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 17)
 6074  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY17_BP
 6075  000025B                       .ENDIF
 6076  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 18)
 6077  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY18_BP
 6078  000025B                       .ENDIF
 6079  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 19)
 6080  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY19_BP
 6081  000025B                       .ENDIF
 6082  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 20)
 6083  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY20_BP
 6084  000025B                       .ENDIF
 6085  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 21)
 6086  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY21_BP
 6087  000025B                       .ENDIF
 6088  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 22)





 6089  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY22_BP
 6090  000025B                       .ENDIF
 6091  000025B                       .IF(WITH_FW_CAP_SENSOR_KEYS .GT. 23)
 6092  000025B                           DB BPX_F_NUM * CAP_SENSOR_KEY23_BP
 6093  000025B                       .ENDIF
 6094  000025B                   
 6095  000025B                            PUBLIC CAP_SENSOR_TOUCHED_KEYS_TABLE
 6096  000025B                   CAP_SENSOR_TOUCHED_KEYS_TABLE:
 6097  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 0)
 6098  000025B                   		EXTERN CAPKEY1T
 6099  000025B                   		DW     CAPKEY1T    
 6100  000025B                   	.ENDIF
 6101  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 1)
 6102  000025B                   		EXTERN CAPKEY2T
 6103  000025B                   		DW     CAPKEY2T    
 6104  000025B                   	.ENDIF
 6105  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 2)
 6106  000025B                   		EXTERN CAPKEY3T
 6107  000025B                   		DW     CAPKEY3T    
 6108  000025B                   	.ENDIF
 6109  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 3)
 6110  000025B                   		EXTERN CAPKEY4T
 6111  000025B                   		DW     CAPKEY4T    
 6112  000025B                   	.ENDIF
 6113  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 4)
 6114  000025B                   		EXTERN CAPKEY5T
 6115  000025B                   		DW     CAPKEY5T    
 6116  000025B                   	.ENDIF
 6117  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 5)
 6118  000025B                   		EXTERN CAPKEY6T
 6119  000025B                   		DW     CAPKEY6T    
 6120  000025B                   	.ENDIF
 6121  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 6)
 6122  000025B                   		EXTERN CAPKEY7T
 6123  000025B                   		DW     CAPKEY7T    
 6124  000025B                   	.ENDIF
 6125  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 7)
 6126  000025B                   		EXTERN CAPKEY8T
 6127  000025B                   		DW     CAPKEY8T    
 6128  000025B                   	.ENDIF
 6129  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 8)
 6130  000025B                   		EXTERN CAPKEY9T
 6131  000025B                   		DW     CAPKEY9T    
 6132  000025B                   	.ENDIF
 6133  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 9)
 6134  000025B                   		EXTERN CAPKEY10T
 6135  000025B                   		DW     CAPKEY10T    
 6136  000025B                   	.ENDIF
 6137  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 10)
 6138  000025B                   		EXTERN CAPKEY11T
 6139  000025B                   		DW     CAPKEY11T    
 6140  000025B                   	.ENDIF
 6141  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 11)
 6142  000025B                   		EXTERN CAPKEY12T
 6143  000025B                   		DW     CAPKEY12T    
 6144  000025B                   	.ENDIF
 6145  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 12)





 6146  000025B                   		EXTERN CAPKEY13T
 6147  000025B                   		DW     CAPKEY13T    
 6148  000025B                   	.ENDIF
 6149  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 13)
 6150  000025B                   		EXTERN CAPKEY14T
 6151  000025B                   		DW     CAPKEY14T
 6152  000025B                   	.ENDIF
 6153  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 14)
 6154  000025B                   		EXTERN CAPKEY15T
 6155  000025B                   		DW     CAPKEY15T
 6156  000025B                   	.ENDIF
 6157  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 15)
 6158  000025B                   		EXTERN CAPKEY16T
 6159  000025B                   		DW     CAPKEY16T    
 6160  000025B                   	.ENDIF
 6161  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 16)
 6162  000025B                   		EXTERN CAPKEY17T
 6163  000025B                   		DW     CAPKEY17T
 6164  000025B                   	.ENDIF
 6165  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 17)
 6166  000025B                   		EXTERN CAPKEY18T
 6167  000025B                   		DW     CAPKEY18T
 6168  000025B                   	.ENDIF
 6169  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 18)
 6170  000025B                   		EXTERN CAPKEY19T
 6171  000025B                   		DW     CAPKEY19T
 6172  000025B                   	.ENDIF
 6173  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 19)
 6174  000025B                   		EXTERN CAPKEY20T
 6175  000025B                   		DW     CAPKEY20T
 6176  000025B                   	.ENDIF
 6177  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 20)
 6178  000025B                   		EXTERN CAPKEY21T
 6179  000025B                   		DW     CAPKEY21T    
 6180  000025B                   	.ENDIF
 6181  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 21)
 6182  000025B                   		EXTERN CAPKEY22T
 6183  000025B                   		DW     CAPKEY22T
 6184  000025B                   	.ENDIF
 6185  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 22)
 6186  000025B                   		EXTERN CAPKEY23T
 6187  000025B                   		DW     CAPKEY23T
 6188  000025B                   	.ENDIF
 6189  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 23)
 6190  000025B                   		EXTERN CAPKEY24T
 6191  000025B                   		DW     CAPKEY24T
 6192  000025B                   	.ENDIF
 6193  000025B                   
 6194  000025B                   
 6195  000025B                            PUBLIC CAP_SENSOR_UNTOUCHED_KEYS_TABLE
 6196  000025B                   CAP_SENSOR_UNTOUCHED_KEYS_TABLE:
 6197  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 0)
 6198  000025B                   		EXTERN CAPKEY1U
 6199  000025B                   		DW     CAPKEY1U    
 6200  000025B                   	.ENDIF
 6201  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 1)
 6202  000025B                   		EXTERN CAPKEY2U





 6203  000025B                   		DW     CAPKEY2U   
 6204  000025B                   	.ENDIF
 6205  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 2)
 6206  000025B                   		EXTERN CAPKEY3U
 6207  000025B                   		DW     CAPKEY3U    
 6208  000025B                   	.ENDIF
 6209  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 3)
 6210  000025B                   		EXTERN CAPKEY4U
 6211  000025B                   		DW     CAPKEY4U    
 6212  000025B                   	.ENDIF
 6213  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 4)
 6214  000025B                   		EXTERN CAPKEY5U
 6215  000025B                   		DW     CAPKEY5U    
 6216  000025B                   	.ENDIF
 6217  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 5)
 6218  000025B                   		EXTERN CAPKEY6U
 6219  000025B                   		DW     CAPKEY6U    
 6220  000025B                   	.ENDIF
 6221  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 6)
 6222  000025B                   		EXTERN CAPKEY7U
 6223  000025B                   		DW     CAPKEY7U    
 6224  000025B                   	.ENDIF
 6225  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 7)
 6226  000025B                   		EXTERN CAPKEY8U
 6227  000025B                   		DW     CAPKEY8U    
 6228  000025B                   	.ENDIF
 6229  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 8)
 6230  000025B                   		EXTERN CAPKEY9U
 6231  000025B                   		DW     CAPKEY9U    
 6232  000025B                   	.ENDIF
 6233  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 9)
 6234  000025B                   		EXTERN CAPKEY10U
 6235  000025B                   		DW     CAPKEY10U    
 6236  000025B                   	.ENDIF
 6237  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 10)
 6238  000025B                   		EXTERN CAPKEY11U
 6239  000025B                   		DW     CAPKEY11U    
 6240  000025B                   	.ENDIF
 6241  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 11)
 6242  000025B                   		EXTERN CAPKEY12U
 6243  000025B                   		DW     CAPKEY12U   
 6244  000025B                   	.ENDIF
 6245  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 12)
 6246  000025B                   		EXTERN CAPKEY13U
 6247  000025B                   		DW     CAPKEY13U    
 6248  000025B                   	.ENDIF
 6249  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 13)
 6250  000025B                   		EXTERN CAPKEY14U
 6251  000025B                   		DW     CAPKEY14U    
 6252  000025B                   	.ENDIF
 6253  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 14)
 6254  000025B                   		EXTERN CAPKEY15U
 6255  000025B                   		DW     CAPKEY15U    
 6256  000025B                   	.ENDIF
 6257  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 15)
 6258  000025B                   		EXTERN CAPKEY16U
 6259  000025B                   		DW     CAPKEY16U    





 6260  000025B                   	.ENDIF
 6261  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 16)
 6262  000025B                   		EXTERN CAPKEY17U
 6263  000025B                   		DW     CAPKEY17U    
 6264  000025B                   	.ENDIF
 6265  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 17)
 6266  000025B                   		EXTERN CAPKEY18U
 6267  000025B                   		DW     CAPKEY18U    
 6268  000025B                   	.ENDIF
 6269  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 18)
 6270  000025B                   		EXTERN CAPKEY19U
 6271  000025B                   		DW     CAPKEY19U    
 6272  000025B                   	.ENDIF
 6273  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 19)
 6274  000025B                   		EXTERN CAPKEY20U
 6275  000025B                   		DW     CAPKEY20U    
 6276  000025B                   	.ENDIF
 6277  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 20)
 6278  000025B                   		EXTERN CAPKEY21U
 6279  000025B                   		DW     CAPKEY21U    
 6280  000025B                   	.ENDIF
 6281  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 21)
 6282  000025B                   		EXTERN CAPKEY22U
 6283  000025B                   		DW     CAPKEY22U    
 6284  000025B                   	.ENDIF
 6285  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 22)
 6286  000025B                   		EXTERN CAPKEY23U
 6287  000025B                   		DW     CAPKEY23U    
 6288  000025B                   	.ENDIF
 6289  000025B                   	.IF  (WITH_FW_CAP_SENSOR_KEYS .GT. 23)
 6290  000025B                   		EXTERN CAPKEY24U
 6291  000025B                   		DW     CAPKEY24U    
 6292  000025B                   	.ENDIF
 6293  000025B                   
 6294  000025B                           DB "CPTB" ; Compensation table identify string
 6295  000025B                           DW WITH_FW_CAP_SENSOR_KEYS + 1
 6296  000025B                   CAP_SENTABLE_COMP:
 6297  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 0)
 6298  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY0_TH
 6299  000025B                   	.ENDIF
 6300  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 1)
 6301  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY1_TH
 6302  000025B                   	.ENDIF
 6303  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 2)
 6304  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY2_TH
 6305  000025B                   	.ENDIF
 6306  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 3)
 6307  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY3_TH
 6308  000025B                   	.ENDIF
 6309  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 4)
 6310  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY4_TH
 6311  000025B                   	.ENDIF
 6312  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 5)
 6313  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY5_TH
 6314  000025B                   	.ENDIF
 6315  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 6)
 6316  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY6_TH





 6317  000025B                   	.ENDIF
 6318  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 7)
 6319  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY7_TH
 6320  000025B                   	.ENDIF
 6321  000025B                   
 6322  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 8)
 6323  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY8_TH
 6324  000025B                   	.ENDIF
 6325  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 9)
 6326  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY9_TH
 6327  000025B                   	.ENDIF
 6328  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 10)
 6329  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY10_TH
 6330  000025B                   	.ENDIF
 6331  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 11)
 6332  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY11_TH
 6333  000025B                   	.ENDIF
 6334  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 12)
 6335  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY12_TH
 6336  000025B                   	.ENDIF
 6337  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 13)
 6338  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY13_TH
 6339  000025B                   	.ENDIF
 6340  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 14)
 6341  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY14_TH
 6342  000025B                   	.ENDIF
 6343  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 15)
 6344  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY15_TH
 6345  000025B                   	.ENDIF
 6346  000025B                   
 6347  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 16)
 6348  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY16_TH
 6349  000025B                   	.ENDIF
 6350  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 17)
 6351  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY17_TH
 6352  000025B                   	.ENDIF
 6353  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 18)
 6354  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY18_TH
 6355  000025B                   	.ENDIF
 6356  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 19)
 6357  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY19_TH
 6358  000025B                   	.ENDIF
 6359  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 20)
 6360  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY20_TH
 6361  000025B                   	.ENDIF
 6362  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 21)
 6363  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY21_TH
 6364  000025B                   	.ENDIF
 6365  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 22)
 6366  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY22_TH
 6367  000025B                   	.ENDIF
 6368  000025B                   	.IF(WITH_FW_CAP_SENSOR_KEYS .GT. 23)
 6369  000025B                   		DB FFH - CAP_SENSOR_TBL0_KEY23_TH
 6370  000025B                   	.ENDIF
 6371  000025B                   CAP_CURRENT_COMP:
 6372  000025B                           DB FFH - CAP_SENSOR_CURRENT_SOURCE        
 6373  000025B                   





 6374  000025B                           DB "MSTB" ; Multi-Selection Sensitivity table
 6375  000025B                       .IF(WITH_FW_SEN_OPTION_PIN .EQ. 0)
 6376  000025B                           DW 1 + WITH_FW_SEN_OPTION_PIN + 0
 6377  000025B                       .ENDIF
 6378  000025B                       .IF(WITH_FW_SEN_OPTION_PIN .EQ. 1)
 6379  000025B                           DW 1 + WITH_FW_SEN_OPTION_PIN + 2
 6380  000025B                       .ENDIF
 6381  000025B                       .IF(WITH_FW_SEN_OPTION_PIN .EQ. 2)
 6382  000025B                           DW 1 + WITH_FW_SEN_OPTION_PIN + 4
 6383  000025B                       .ENDIF
 6384  000025B                       .IF(WITH_FW_SEN_OPTION_PIN .EQ. 3)
 6385  000025B                           DW 1 + WITH_FW_SEN_OPTION_PIN + 8
 6386  000025B                       .ENDIF
 6387  000025B                       .IF(WITH_FW_SEN_OPTION_PIN .EQ. 4)
 6388  000025B                           DW 1 + WITH_FW_SEN_OPTION_PIN + 16
 6389  000025B                       .ENDIF
 6390  000025B                   
 6391  000025B                   	PUBLIC SENSITIVITY_SELECT_PIN_NUM
 6392  000025B                   SENSITIVITY_SELECT_PIN_NUM:
 6393  000025B                         DB  WITH_FW_SEN_OPTION_PIN       ; Multi-table select pin number
 6394  000025B                   	PUBLIC T_SenTable_PinInx
 6395  000025B                   ; BP00:  0 | BP01:  3 | BP02:  6 | BP03:  9 | BP04: 12 | BP05: 15 | BP06: 18 | BP07: 21
 6396  000025B                   ; BP10: 24 | BP11: 27 | BP12: 30 | BP13: 33 | BP14: 36 | BP15: 39 | BP16: 42 | BP17: 45
 6397  000025B                   ; BP20: 48 | BP21: 51 | BP22: 54 | BP23: 57 | BP24: 60 | BP25: 63 | BP26: 66 | BP27: 69
 6398  000025B                   T_SenTable_PinInx:
 6399  000025B                       .IF(WITH_FW_SEN_OPTION_PIN .GT. 0)
 6400  000025B                       DB CAP_SENSOR_SEL_PIN0
 6401  000025B                       .ENDIF
 6402  000025B                       .IF(WITH_FW_SEN_OPTION_PIN .GT. 1)
 6403  000025B                       DB CAP_SENSOR_SEL_PIN1
 6404  000025B                       .ENDIF
 6405  000025B                       .IF(WITH_FW_SEN_OPTION_PIN .GT. 2)
 6406  000025B                       DB CAP_SENSOR_SEL_PIN2
 6407  000025B                       .ENDIF
 6408  000025B                       .IF(WITH_FW_SEN_OPTION_PIN .GT. 3)
 6409  000025B                       DB CAP_SENSOR_SEL_PIN3
 6410  000025B                       .ENDIF
 6411  000025B                       PUBLIC T_SenTable_Offset
 6412  000025B                   T_SenTable_Offset:
 6413  000025B                       .IF(WITH_FW_SEN_OPTION_PIN .GT. 0)
 6414  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*0
 6415  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*1
 6416  000025B                       .ENDIF
 6417  000025B                       .IF(WITH_FW_SEN_OPTION_PIN .GT. 1)
 6418  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*2
 6419  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*3
 6420  000025B                       .ENDIF
 6421  000025B                       .IF(WITH_FW_SEN_OPTION_PIN .GT. 2)
 6422  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*4
 6423  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*5
 6424  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*6
 6425  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*7
 6426  000025B                       .ENDIF
 6427  000025B                       .IF(WITH_FW_SEN_OPTION_PIN .GT. 3)
 6428  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*8
 6429  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*9
 6430  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*10





 6431  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*11
 6432  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*12
 6433  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*13
 6434  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*14
 6435  000025B                           DB WITH_FW_CAP_SENSOR_KEYS*15
 6436  000025B                       .ENDIF
 6437  000025B                   
 6438  000025B                   
 6439  000025B                       DB "CSSN" ; Cap Sensor Scan Number
 6440  000025B                       DW 1
 6441  000025B                   	PUBLIC S_SCAN_NUM
 6442  000025B                   S_SCAN_NUM:
 6443  000025B                       DB CAP_SCAN_NUBER                 ; 04H ~ 10H (UI. Default: 10H)
 6444  000025B                   
 6445  000025B                       .IF (MAINBODY='A960')
 6446  000025B                       DB "CSDC" ; Cap Sensor Debounce Cycle
 6447  000025B                       DW 1
 6448  000025B                           PUBLIC DEBNS_CYCLE
 6449  000025B                   DEBNS_CYCLE:
 6450  000025B                           DB CAP_SENSOR_DEBOUNCE
 6451  000025B                       .ENDIF
 6452  000025B                   
 6453  000025B                       DB "CSLT" ; Cap Sensor Selection Pin Sleep Time
 6454  000025B                       .IF(CAP_SleepTime_Sel_Num .EQ. 0)
 6455  000025B                           DW 1 + CAP_SleepTime_Sel_Num + 0
 6456  000025B                       .ENDIF
 6457  000025B                       .IF(CAP_SleepTime_Sel_Num .EQ. 1)
 6458  000025B                           DW 1 + CAP_SleepTime_Sel_Num + 2
 6459  000025B                       .ENDIF
 6460  000025B                       .IF(CAP_SleepTime_Sel_Num .EQ. 2)
 6461  000025B                           DW 1 + CAP_SleepTime_Sel_Num + 4
 6462  000025B                       .ENDIF
 6463  000025B                       .IF(CAP_SleepTime_Sel_Num .EQ. 3)
 6464  000025B                           DW 1 + CAP_SleepTime_Sel_Num + 8
 6465  000025B                       .ENDIF
 6466  000025B                       .IF(CAP_SleepTime_Sel_Num .EQ. 4)
 6467  000025B                           DW 1 + CAP_SleepTime_Sel_Num + 16
 6468  000025B                       .ENDIF
 6469  000025B                   
 6470  000025B                       PUBLIC SLEEP_TIME_SELECT_PIN_NUM
 6471  000025B                   SLEEP_TIME_SELECT_PIN_NUM:
 6472  000025B                       DB CAP_SleepTime_Sel_Num
 6473  000025B                   
 6474  000025B                       PUBLIC T_SlpTimeTable_PinInx
 6475  000025B                   T_SlpTimeTable_PinInx:
 6476  000025B                       .IF(CAP_SleepTime_Sel_Num .GT. 0)
 6477  000025B                       DB CAP_SENSOR_ST_SEL_PIN0
 6478  000025B                       .ENDIF
 6479  000025B                       .IF(CAP_SleepTime_Sel_Num .GT. 1)
 6480  000025B                       DB CAP_SENSOR_ST_SEL_PIN1
 6481  000025B                       .ENDIF
 6482  000025B                       .IF(CAP_SleepTime_Sel_Num .GT. 2)
 6483  000025B                       DB CAP_SENSOR_ST_SEL_PIN2
 6484  000025B                       .ENDIF
 6485  000025B                       .IF(CAP_SleepTime_Sel_Num .GT. 3)
 6486  000025B                       DB CAP_SENSOR_ST_SEL_PIN3
 6487  000025B                       .ENDIF





 6488  000025B                   
 6489  000025B                   .IF(CAP_SleepTime_Sel_Num .GT. 0)
 6490  000025B                       PUBLIC SLEEP_TIME
 6491  000025B                   SLEEP_TIME:
 6492  000025B                   .ENDIF
 6493  000025B                       .IF(CAP_SleepTime_Sel_Num .GT. 0)
 6494  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX0
 6495  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX1
 6496  000025B                       .ENDIF
 6497  000025B                       .IF(CAP_SleepTime_Sel_Num .GT. 1)
 6498  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX2
 6499  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX3
 6500  000025B                       .ENDIF
 6501  000025B                       .IF(CAP_SleepTime_Sel_Num .GT. 2)
 6502  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX4
 6503  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX5
 6504  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX6
 6505  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX7
 6506  000025B                       .ENDIF
 6507  000025B                       .IF(CAP_SleepTime_Sel_Num .GT. 3)
 6508  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX8
 6509  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX9
 6510  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX10
 6511  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX11
 6512  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX12
 6513  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX13
 6514  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX14
 6515  000025B                           DB CAP_SENSOR_SLEEP_TIME_INDEX15
 6516  000025B                       .ENDIF
 6517  000025B                   
 6518  000025B                       DB "AACN"
 6519  000025B                       DW 2
 6520  000025B                       PUBLIC AVG_ADJUST_COUNTER_NUM
 6521  000025B                   AVG_ADJUST_COUNTER_NUM:
 6522  000025B                       DW AVG_ADJ_CNT_NUM
 6523  000025B                   
 6524  000025B                       DB "TEND"
 6525  000025B                       DW 0
 6526  000025B                   
 6527  000025B                   .ENDIF ;WITH_FW_CAP_SENSOR_KEYS
 6528  000025B                   
 6529  000025B                   
 6530  000025B                   	INCLUDE	"C:\NUVOTON\NSPPLAYLISTEDITOR\V1.13.000\NSP_SDS\SDS_NSP\INCLUDE\ADCTABLE.ASM.APP"
 6531  000025B                   ;.IF (WITH_ASM_PROJECT .EQ. 0)
 6532  000025B                   
 6533  000025B                   	PUBLIC ADC_CH_SETTING_TABLE
 6534  000025B                   ADC_CH_SETTING_TABLE:
 6535  000025B  00              	DB 00H
 6536  000025C  04              	DB 04H
 6537  000025D  08              	DB 08H
 6538  000025E  0C              	DB 0CH
 6539  000025F                   
 6540  000025F                   	PUBLIC ADC_CH_PIN_MASK_TABLE
 6541  000025F                   ADC_CH_PIN_MASK_TABLE:
 6542  000025F  10              	DB 10H
 6543  0000260  20              	DB 20H
 6544  0000261  40              	DB 40H





 6545  0000262  80              	DB 80H
 6546  0000263                   
 6547  0000263                   ;.ENDIF ;WITH_FW_CAP_SENSOR_KEYS
 6548  0000263                   
 6549  0000263                   
 6550  0000263                   	.ENDS
 6551  0000000                   
 6552  0000000                   	LIBRARY_CODE_NOCROSSING: SECTION
 6553  0000000                   	INCLUDE	"C:\NUVOTON\NSPPLAYLISTEDITOR\V1.13.000\NSP_SDS\SDS_NSP\INCLUDE\PROTECTIONPAGECOMM.ASM.APP"
 6554  0000000                   	CHIP	65C02
 6555  0000000                   	SYMBOLS
 6556  0000000                   	LINEAR		ON
 6557  0000000                   
 6558  0000000                   .IF (WITH_PROTECTION_PAGE_UPDATE .EQ. 1)
 6559  0000000                   .IF (PROTECTION_PAGE_WORKING_MODE .EQ. 1)		
 6560  0000000                   	PUBLIC FLASH_BACKUP_REPLACE_PAGE_HANDLE
 6561  0000000                   	PUBLIC FLASH_PAGE_INJECT_ID_HANDLE
 6562  0000000                   	PUBLIC PROTECTION_PAGE_READ_HANDLE
 6563  0000000                   	PUBLIC PROTECTION_PAGE_UPDATE_HANDLE
 6564  0000000                   .ENDIF
 6565  0000000                   .ENDIF
 6566  0000000                   ;============================================================================
 6567  0000000                   FLASH_ERASE_PAGE_HANDLE:
 6568  0000000                   	.IFDEF WDTIMER
 6569  0000000  A9 01			LDA #WDTC_CLR
 6570  0000002  8D 96 0F     	STA !WDTC
 6571  0000005                   	.ENDIF 
 6572  0000005                   
 6573  0000005  08           	PHP
 6574  0000006  78           	SEI
 6575  0000007                   
 6576  0000007                   	ISP_ERASE_PAGE_DP DST_PAGE_START_ADDR3
 6577  0000007                   	ISP_UNLOCK
 6578  0000007                   .IFDEF DATA_FLASH_SIZE_512
 6579  0000007                   	ISP_UNLOCK1
 6580  0000007                   .ELSE
 6581  0000007                   	.IFDEF DATA_FLASH_SIZE_1024
 6582  0000007                   		ISP_UNLOCK1
 6583  0000007                   	.ELSE
 6584  0000007                   		ISP_UNLOCK2
 6585  0000007  A9 A6			LDA #A6H
 6586  0000009  8D F2 0F     	STA !ISPULK
 6587  000000C  A9 E9			LDA #E9H
 6588  000000E  8D F2 0F     	STA !ISPULK
 6589  0000011  A9 77			LDA #77H
 6590  0000013  8D F2 0F     	STA !ISPULK
 6591  0000016                   	;ENDM
 6592  0000016                   	.ENDIF
 6593  0000016                   .ENDIF
 6594  0000016                   	;ENDM
 6595  0000016                   	ISP_SET_ADDR_DP DST_PAGE_START_ADDR3
 6596  0000016  A5 16			LDA DST_PAGE_START_ADDR3
 6597  0000018  8D E9 0F     	STA ISPADR0
 6598  000001B  A5 17			LDA DST_PAGE_START_ADDR3+1
 6599  000001D  8D EA 0F     	STA ISPADR1
 6600  0000020  A5 18			LDA DST_PAGE_START_ADDR3+2
 6601  0000022  8D EB 0F     	STA ISPADR2





 6602  0000025                   	;ENDM
 6603  0000025  A9 0B			LDA	#(ISP_EN + ISP_EN_PP + ISP_ERR_FLAG)
 6604  0000027  0C E8 0F     	TSB !ISPCON
 6605  000002A  A9 22			LDA #ISP_CMD_ERASE_PAGE
 6606  000002C  8D F0 0F     	STA !ISPCMD	
 6607  000002F  A9 01			LDA #ISP_DONE
 6608  0000031  0C F1 0F     	TSB !ISPTRG
 6609  0000034  AD E8 0F     	LDA !ISPCON
 6610  0000037  29 08			AND #ISP_ERR_FLAG
 6611  0000039  F0 05			BEQ POLLING_ISP_ERASE_TRG#
 6612  000003B  A9 05			LDA #05H
 6613  000003D  4C 49 00     	JMP	ISP_ERASE_PAGE_END#
 6614  0000040                   POLLING_ISP_ERASE_TRG#:
 6615  0000040  AD F1 0F     	LDA !ISPTRG
 6616  0000043  29 01			AND #ISP_DONE
 6617  0000045  D0 F9			BNE POLLING_ISP_ERASE_TRG#
 6618  0000047                   ERASE_OK#:
 6619  0000047  A9 00			LDA #00H
 6620  0000049                   ISP_ERASE_PAGE_END#:
 6621  0000049  48           	PHA
 6622  000004A                   	ISP_LOCK
 6623  000004A                   .IFDEF DATA_FLASH_SIZE_512
 6624  000004A                   	ISP_LOCK1
 6625  000004A                   .ELSE
 6626  000004A                   	.IFDEF DATA_FLASH_SIZE_1024
 6627  000004A                   		ISP_LOCK1
 6628  000004A                   	.ELSE
 6629  000004A                   		ISP_LOCK2
 6630  000004A  9C F2 0F     	STZ !ISPULK
 6631  000004D                   	;ENDM
 6632  000004D                   	.ENDIF
 6633  000004D                   .ENDIF
 6634  000004D                   	;ENDM
 6635  000004D  68           	PLA
 6636  000004E                   	;ENDM
 6637  000004E  F0 03			BEQ 3
 6638  0000050  4C 58 00     	JMP END_FLASH_ERASE_PAGE
 6639  0000053  4C 56 00     	JMP END_FLASH_ERASE_PAGE_OK
 6640  0000056                   
 6641  0000056                   END_FLASH_ERASE_PAGE_OK:
 6642  0000056  A9 00			LDA #00H
 6643  0000058                   END_FLASH_ERASE_PAGE:
 6644  0000058  28           	PLP
 6645  0000059  60           	RTS
 6646  000005A                   ;----------------------------------------------------------------------
 6647  000005A                   FLASH_READ_PAGE_HANDLE:
 6648  000005A  08           	PHP
 6649  000005B  78           	SEI
 6650  000005C                   READ_FLASH_LOOP:
 6651  000005C  A5 1A			LDA SRC_LEN2+1;
 6652  000005E  C9 00		    CMP #00
 6653  0000060  90 08		    BCC READ_FLASH_PROC_1
 6654  0000062  D0 6B		    BNE READ_FLASH_PROC_2
 6655  0000064  A5 19		    LDA SRC_LEN2
 6656  0000066  C9 04		    CMP #04H
 6657  0000068  B0 65		    BCS READ_FLASH_PROC_2
 6658  000006A                   





 6659  000006A                   READ_FLASH_PROC_1:
 6660  000006A  A5 19			LDA SRC_LEN2
 6661  000006C  D0 03			BNE 3
 6662  000006E  4C 67 01     	JMP END_FLAGH_READ_PAGE_DP_OK
 6663  0000071                   
 6664  0000071                   ;read data (<4B) 
 6665  0000071                   	ISP_READ_DATA_DP_ILI_X DST_PAGE_START_ADDR3, SRC_BUF4, SRC_LEN2
 6666  0000071                   	ISP_UNLOCK
 6667  0000071                   .IFDEF DATA_FLASH_SIZE_512
 6668  0000071                   	ISP_UNLOCK1
 6669  0000071                   .ELSE
 6670  0000071                   	.IFDEF DATA_FLASH_SIZE_1024
 6671  0000071                   		ISP_UNLOCK1
 6672  0000071                   	.ELSE
 6673  0000071                   		ISP_UNLOCK2
 6674  0000071  A9 A6			LDA #A6H
 6675  0000073  8D F2 0F     	STA !ISPULK
 6676  0000076  A9 E9			LDA #E9H
 6677  0000078  8D F2 0F     	STA !ISPULK
 6678  000007B  A9 77			LDA #77H
 6679  000007D  8D F2 0F     	STA !ISPULK
 6680  0000080                   	;ENDM
 6681  0000080                   	.ENDIF
 6682  0000080                   .ENDIF
 6683  0000080                   	;ENDM
 6684  0000080                   	ISP_SET_ADDR_DP DST_PAGE_START_ADDR3
 6685  0000080  A5 16			LDA DST_PAGE_START_ADDR3
 6686  0000082  8D E9 0F     	STA ISPADR0
 6687  0000085  A5 17			LDA DST_PAGE_START_ADDR3+1
 6688  0000087  8D EA 0F     	STA ISPADR1
 6689  000008A  A5 18			LDA DST_PAGE_START_ADDR3+2
 6690  000008C  8D EB 0F     	STA ISPADR2
 6691  000008F                   	;ENDM
 6692  000008F  A9 09			LDA	#(ISP_EN + ISP_ERR_FLAG)
 6693  0000091  0C E8 0F     	TSB !ISPCON
 6694  0000094  A9 00			LDA #ISP_CMD_READ
 6695  0000096  8D F0 0F     	STA !ISPCMD	
 6696  0000099  A9 01			LDA #ISP_DONE
 6697  000009B  0C F1 0F     	TSB !ISPTRG
 6698  000009E  AD E8 0F     	LDA !ISPCON
 6699  00000A1  29 08			AND #ISP_ERR_FLAG
 6700  00000A3  F0 05			BEQ POLLING_ISP_READ_TRG#
 6701  00000A5  A9 01			LDA #01H
 6702  00000A7  4C C2 00     	JMP	ISP_READ_DATA_END#
 6703  00000AA                   POLLING_ISP_READ_TRG#:
 6704  00000AA  AD F1 0F     	LDA !ISPTRG
 6705  00000AD  29 01			AND #ISP_DONE
 6706  00000AF  D0 F9			BNE POLLING_ISP_READ_TRG#
 6707  00000B1                   	ISP_GET_DATA_DP_ILI_X .LOW.SRC_BUF4, SRC_LEN2
 6708  00000B1  A0 00			LDY #0
 6709  00000B3                   ISP_GET_DATA_DP_ILI_X_LOOP#:
 6710  00000B3  B9 EC 0F     	LDA ISPDAT0,Y
 6711  00000B6  91 12			STA (.LOW.SRC_BUF4),Y
 6712  00000B8  C8           	INY
 6713  00000B9  C4 19			CPY SRC_LEN2
 6714  00000BB  F0 03			BEQ ISP_GET_DATA_DP_ILI_X_LOOP_END#
 6715  00000BD  4C B3 00     	JMP ISP_GET_DATA_DP_ILI_X_LOOP#





 6716  00000C0                   ISP_GET_DATA_DP_ILI_X_LOOP_END#:
 6717  00000C0                   	;ENDM
 6718  00000C0                   READ_OK#:
 6719  00000C0  A9 00			LDA #00H
 6720  00000C2                   ISP_READ_DATA_END#:
 6721  00000C2  48           	PHA
 6722  00000C3                   	ISP_LOCK
 6723  00000C3                   .IFDEF DATA_FLASH_SIZE_512
 6724  00000C3                   	ISP_LOCK1
 6725  00000C3                   .ELSE
 6726  00000C3                   	.IFDEF DATA_FLASH_SIZE_1024
 6727  00000C3                   		ISP_LOCK1
 6728  00000C3                   	.ELSE
 6729  00000C3                   		ISP_LOCK2
 6730  00000C3  9C F2 0F     	STZ !ISPULK
 6731  00000C6                   	;ENDM
 6732  00000C6                   	.ENDIF
 6733  00000C6                   .ENDIF
 6734  00000C6                   	;ENDM
 6735  00000C6  68           	PLA
 6736  00000C7                   	;ENDM
 6737  00000C7  F0 03			BEQ 3
 6738  00000C9  4C 69 01     	JMP END_FLASH_READ_PAGE_DP
 6739  00000CC                   
 6740  00000CC  4C 67 01     	JMP END_FLAGH_READ_PAGE_DP_OK
 6741  00000CF                   
 6742  00000CF                   READ_FLASH_PROC_2:
 6743  00000CF                   ;read data (4B) 
 6744  00000CF                   	ISP_READ_DATA_DP_ILI DST_PAGE_START_ADDR3, SRC_BUF4
 6745  00000CF                   	ISP_UNLOCK
 6746  00000CF                   .IFDEF DATA_FLASH_SIZE_512
 6747  00000CF                   	ISP_UNLOCK1
 6748  00000CF                   .ELSE
 6749  00000CF                   	.IFDEF DATA_FLASH_SIZE_1024
 6750  00000CF                   		ISP_UNLOCK1
 6751  00000CF                   	.ELSE
 6752  00000CF                   		ISP_UNLOCK2
 6753  00000CF  A9 A6			LDA #A6H
 6754  00000D1  8D F2 0F     	STA !ISPULK
 6755  00000D4  A9 E9			LDA #E9H
 6756  00000D6  8D F2 0F     	STA !ISPULK
 6757  00000D9  A9 77			LDA #77H
 6758  00000DB  8D F2 0F     	STA !ISPULK
 6759  00000DE                   	;ENDM
 6760  00000DE                   	.ENDIF
 6761  00000DE                   .ENDIF
 6762  00000DE                   	;ENDM
 6763  00000DE                   	ISP_SET_ADDR_DP DST_PAGE_START_ADDR3
 6764  00000DE  A5 16			LDA DST_PAGE_START_ADDR3
 6765  00000E0  8D E9 0F     	STA ISPADR0
 6766  00000E3  A5 17			LDA DST_PAGE_START_ADDR3+1
 6767  00000E5  8D EA 0F     	STA ISPADR1
 6768  00000E8  A5 18			LDA DST_PAGE_START_ADDR3+2
 6769  00000EA  8D EB 0F     	STA ISPADR2
 6770  00000ED                   	;ENDM
 6771  00000ED  A9 09			LDA	#(ISP_EN + ISP_ERR_FLAG)
 6772  00000EF  0C E8 0F     	TSB !ISPCON





 6773  00000F2  A9 00			LDA #ISP_CMD_READ
 6774  00000F4  8D F0 0F     	STA !ISPCMD	
 6775  00000F7  A9 01			LDA #ISP_DONE
 6776  00000F9  0C F1 0F     	TSB !ISPTRG
 6777  00000FC  AD E8 0F     	LDA !ISPCON
 6778  00000FF  29 08			AND #ISP_ERR_FLAG
 6779  0000101  F0 05			BEQ POLLING_ISP_READ_TRG#
 6780  0000103  A9 01			LDA #01H
 6781  0000105  4C 2D 01     	JMP	ISP_READ_DATA_END#
 6782  0000108                   POLLING_ISP_READ_TRG#:
 6783  0000108  AD F1 0F     	LDA !ISPTRG
 6784  000010B  29 01			AND #ISP_DONE
 6785  000010D  D0 F9			BNE POLLING_ISP_READ_TRG#
 6786  000010F                   	ISP_GET_DATA_DP_ILI .LOW.SRC_BUF4
 6787  000010F  A0 00			LDY #0
 6788  0000111  AD EC 0F     	LDA ISPDAT0
 6789  0000114  91 12			STA (.LOW.SRC_BUF4),Y
 6790  0000116  A0 01			LDY #1
 6791  0000118  AD ED 0F     	LDA ISPDAT1
 6792  000011B  91 12			STA (.LOW.SRC_BUF4),Y
 6793  000011D  A0 02			LDY #2
 6794  000011F  AD EE 0F     	LDA ISPDAT2
 6795  0000122  91 12			STA (.LOW.SRC_BUF4),Y
 6796  0000124  A0 03			LDY #3
 6797  0000126  AD EF 0F     	LDA ISPDAT3
 6798  0000129  91 12			STA (.LOW.SRC_BUF4),Y
 6799  000012B                   	;ENDM
 6800  000012B                   READ_OK#:
 6801  000012B  A9 00			LDA #00H
 6802  000012D                   ISP_READ_DATA_END#:
 6803  000012D  48           	PHA
 6804  000012E                   	ISP_LOCK
 6805  000012E                   .IFDEF DATA_FLASH_SIZE_512
 6806  000012E                   	ISP_LOCK1
 6807  000012E                   .ELSE
 6808  000012E                   	.IFDEF DATA_FLASH_SIZE_1024
 6809  000012E                   		ISP_LOCK1
 6810  000012E                   	.ELSE
 6811  000012E                   		ISP_LOCK2
 6812  000012E  9C F2 0F     	STZ !ISPULK
 6813  0000131                   	;ENDM
 6814  0000131                   	.ENDIF
 6815  0000131                   .ENDIF
 6816  0000131                   	;ENDM
 6817  0000131  68           	PLA
 6818  0000132                   	;ENDM
 6819  0000132  F0 03			BEQ 3
 6820  0000134  4C 69 01     	JMP END_FLASH_READ_PAGE_DP
 6821  0000137                   
 6822  0000137                   ;accumulate address
 6823  0000137                   DNLOAD_ADDR_INC:
 6824  0000137                   ;accumulate destination address
 6825  0000137                   	ADD24_24 DST_PAGE_START_ADDR3, 4
 6826  0000137  18           	CLC
 6827  0000138  A5 16			LDA DST_PAGE_START_ADDR3
 6828  000013A  69 04			ADC #.LOW.4
 6829  000013C  85 16			STA DST_PAGE_START_ADDR3





 6830  000013E  A5 17			LDA DST_PAGE_START_ADDR3+1
 6831  0000140  69 00			ADC #.HIGH.4
 6832  0000142  85 17			STA DST_PAGE_START_ADDR3+1
 6833  0000144  A5 18			LDA DST_PAGE_START_ADDR3+2
 6834  0000146  69 00			ADC #.HIGH8.4
 6835  0000148  85 18			STA DST_PAGE_START_ADDR3+2
 6836  000014A                   	;ENDM
 6837  000014A                   
 6838  000014A                   ;accumlate pointer to buffer
 6839  000014A                   	ADD16_16 SRC_BUF4, 4
 6840  000014A  18           	CLC
 6841  000014B  A5 12			LDA SRC_BUF4
 6842  000014D  69 04			ADC #.LOW.4
 6843  000014F  85 12			STA SRC_BUF4
 6844  0000151  A5 13			LDA SRC_BUF4+1
 6845  0000153  69 00			ADC #.HIGH.4
 6846  0000155  85 13			STA SRC_BUF4+1
 6847  0000157                   	;ENDM
 6848  0000157                   
 6849  0000157                   ;accumlate count
 6850  0000157                   	SBC16_16 SRC_LEN2, 4
 6851  0000157  38           	SEC
 6852  0000158  A5 19			LDA SRC_LEN2
 6853  000015A  E9 04			SBC #.LOW.4
 6854  000015C  85 19			STA SRC_LEN2
 6855  000015E  A5 1A			LDA SRC_LEN2+1
 6856  0000160  E9 00			SBC #.HIGH.4
 6857  0000162  85 1A			STA SRC_LEN2+1
 6858  0000164                   	;ENDM
 6859  0000164  4C 5C 00     	JMP READ_FLASH_LOOP
 6860  0000167                   
 6861  0000167                   END_FLAGH_READ_PAGE_DP_OK:
 6862  0000167  A9 00			LDA #00H
 6863  0000169                   END_FLASH_READ_PAGE_DP:
 6864  0000169                   
 6865  0000169  28           	PLP
 6866  000016A  60           	RTS
 6867  000016B                   ;----------------------------------------------------------------------
 6868  000016B                   FLASH_WRITE_PAGE_HANDLE:
 6869  000016B  08           	PHP
 6870  000016C  78           	SEI
 6871  000016D                   
 6872  000016D                   WRITE_FLASH_LOOP:
 6873  000016D                   
 6874  000016D  A5 1A			LDA SRC_LEN2+1;
 6875  000016F  C9 00		    CMP #00
 6876  0000171  90 08		    BCC WRITE_FLASH_PROC_1
 6877  0000173  D0 79		    BNE WRITE_FLASH_PROC_2
 6878  0000175  A5 19		    LDA SRC_LEN2
 6879  0000177  C9 04		    CMP #04H
 6880  0000179  B0 73		    BCS WRITE_FLASH_PROC_2
 6881  000017B                   
 6882  000017B                   WRITE_FLASH_PROC_1:
 6883  000017B  A5 19			LDA SRC_LEN2
 6884  000017D  D0 03			BNE 3
 6885  000017F  4C 88 02     	JMP END_FLASH_WRITE_PAGE_DP
 6886  0000182                   





 6887  0000182                   ; program nB
 6888  0000182                   	ISP_WRITE_DATA_DP_ILI_X DST_PAGE_START_ADDR3, SRC_BUF4, SRC_LEN2
 6889  0000182                   	ISP_UNLOCK
 6890  0000182                   .IFDEF DATA_FLASH_SIZE_512
 6891  0000182                   	ISP_UNLOCK1
 6892  0000182                   .ELSE
 6893  0000182                   	.IFDEF DATA_FLASH_SIZE_1024
 6894  0000182                   		ISP_UNLOCK1
 6895  0000182                   	.ELSE
 6896  0000182                   		ISP_UNLOCK2
 6897  0000182  A9 A6			LDA #A6H
 6898  0000184  8D F2 0F     	STA !ISPULK
 6899  0000187  A9 E9			LDA #E9H
 6900  0000189  8D F2 0F     	STA !ISPULK
 6901  000018C  A9 77			LDA #77H
 6902  000018E  8D F2 0F     	STA !ISPULK
 6903  0000191                   	;ENDM
 6904  0000191                   	.ENDIF
 6905  0000191                   .ENDIF
 6906  0000191                   	;ENDM
 6907  0000191  A9 FF			LDA #FFH
 6908  0000193  8D EC 0F     	STA !ISPDAT0
 6909  0000196  8D ED 0F     	STA !ISPDAT1
 6910  0000199  8D EE 0F     	STA !ISPDAT2
 6911  000019C  8D EF 0F     	STA !ISPDAT3
 6912  000019F                   	ISP_SET_DATA_DP_ILI_X .LOW.SRC_BUF4, SRC_LEN2
 6913  000019F  A0 00			LDY #0
 6914  00001A1                   ISP_SET_DATA_DP_ILI_X_LOOP#:
 6915  00001A1  B1 12			LDA (.LOW.SRC_BUF4), Y
 6916  00001A3  99 EC 0F     	STA ISPDAT0, Y
 6917  00001A6  C8           	INY
 6918  00001A7  C4 19			CPY SRC_LEN2
 6919  00001A9  F0 03			BEQ ISP_SET_DATA_DP_ILI_X_LOOP_END#
 6920  00001AB  4C A1 01     	JMP ISP_SET_DATA_DP_ILI_X_LOOP#
 6921  00001AE                   ISP_SET_DATA_DP_ILI_X_LOOP_END#:
 6922  00001AE                   	;ENDM
 6923  00001AE                   	ISP_SET_ADDR_DP DST_PAGE_START_ADDR3
 6924  00001AE  A5 16			LDA DST_PAGE_START_ADDR3
 6925  00001B0  8D E9 0F     	STA ISPADR0
 6926  00001B3  A5 17			LDA DST_PAGE_START_ADDR3+1
 6927  00001B5  8D EA 0F     	STA ISPADR1
 6928  00001B8  A5 18			LDA DST_PAGE_START_ADDR3+2
 6929  00001BA  8D EB 0F     	STA ISPADR2
 6930  00001BD                   	;ENDM
 6931  00001BD  A9 0B			LDA	#(ISP_EN + ISP_EN_PP + ISP_ERR_FLAG)
 6932  00001BF  0C E8 0F     	TSB !ISPCON
 6933  00001C2  A9 21			LDA #ISP_CMD_PROGRAM
 6934  00001C4  8D F0 0F     	STA !ISPCMD	
 6935  00001C7  A9 01			LDA #ISP_DONE
 6936  00001C9  0C F1 0F     	TSB !ISPTRG
 6937  00001CC  AD E8 0F     	LDA !ISPCON
 6938  00001CF  29 08			AND #ISP_ERR_FLAG
 6939  00001D1  F0 05			BEQ POLLING_ISP_WRITE_TRG#
 6940  00001D3  A9 03			LDA #03H
 6941  00001D5  4C E1 01     	JMP	ISP_WRITE_DATA_END#
 6942  00001D8                   POLLING_ISP_WRITE_TRG#:
 6943  00001D8  AD F1 0F     	LDA !ISPTRG





 6944  00001DB  29 01			AND #ISP_DONE
 6945  00001DD  D0 F9			BNE POLLING_ISP_WRITE_TRG#
 6946  00001DF                   WRITE_OK#:
 6947  00001DF  A9 00			LDA #00H
 6948  00001E1                   ISP_WRITE_DATA_END#:
 6949  00001E1  48           	PHA
 6950  00001E2                   	ISP_LOCK
 6951  00001E2                   .IFDEF DATA_FLASH_SIZE_512
 6952  00001E2                   	ISP_LOCK1
 6953  00001E2                   .ELSE
 6954  00001E2                   	.IFDEF DATA_FLASH_SIZE_1024
 6955  00001E2                   		ISP_LOCK1
 6956  00001E2                   	.ELSE
 6957  00001E2                   		ISP_LOCK2
 6958  00001E2  9C F2 0F     	STZ !ISPULK
 6959  00001E5                   	;ENDM
 6960  00001E5                   	.ENDIF
 6961  00001E5                   .ENDIF
 6962  00001E5                   	;ENDM
 6963  00001E5  68           	PLA
 6964  00001E6                   	;ENDM
 6965  00001E6  F0 03			BEQ 3
 6966  00001E8  4C 88 02     	JMP END_FLASH_WRITE_PAGE_DP
 6967  00001EB  4C 86 02     	JMP END_FLASH_WRITE_PAGE_DP_OK
 6968  00001EE                   
 6969  00001EE                   WRITE_FLASH_PROC_2:
 6970  00001EE                   ;program data (4B)
 6971  00001EE                   	ISP_WRITE_DATA_DP_ILI DST_PAGE_START_ADDR3, SRC_BUF4
 6972  00001EE                   	ISP_UNLOCK
 6973  00001EE                   .IFDEF DATA_FLASH_SIZE_512
 6974  00001EE                   	ISP_UNLOCK1
 6975  00001EE                   .ELSE
 6976  00001EE                   	.IFDEF DATA_FLASH_SIZE_1024
 6977  00001EE                   		ISP_UNLOCK1
 6978  00001EE                   	.ELSE
 6979  00001EE                   		ISP_UNLOCK2
 6980  00001EE  A9 A6			LDA #A6H
 6981  00001F0  8D F2 0F     	STA !ISPULK
 6982  00001F3  A9 E9			LDA #E9H
 6983  00001F5  8D F2 0F     	STA !ISPULK
 6984  00001F8  A9 77			LDA #77H
 6985  00001FA  8D F2 0F     	STA !ISPULK
 6986  00001FD                   	;ENDM
 6987  00001FD                   	.ENDIF
 6988  00001FD                   .ENDIF
 6989  00001FD                   	;ENDM
 6990  00001FD                   	ISP_SET_DATA_DP_ILI .LOW.SRC_BUF4
 6991  00001FD  A0 00			LDY #0
 6992  00001FF  B1 12			LDA (.LOW.SRC_BUF4), Y
 6993  0000201  8D EC 0F     	STA ISPDAT0
 6994  0000204  A0 01			LDY #1
 6995  0000206  B1 12			LDA (.LOW.SRC_BUF4), Y
 6996  0000208  8D ED 0F     	STA ISPDAT1
 6997  000020B  A0 02			LDY #2
 6998  000020D  B1 12			LDA (.LOW.SRC_BUF4), Y
 6999  000020F  8D EE 0F     	STA ISPDAT2
 7000  0000212  A0 03			LDY #3





 7001  0000214  B1 12			LDA (.LOW.SRC_BUF4), Y
 7002  0000216  8D EF 0F     	STA ISPDAT3
 7003  0000219                   	;ENDM
 7004  0000219                   	ISP_SET_ADDR_DP DST_PAGE_START_ADDR3
 7005  0000219  A5 16			LDA DST_PAGE_START_ADDR3
 7006  000021B  8D E9 0F     	STA ISPADR0
 7007  000021E  A5 17			LDA DST_PAGE_START_ADDR3+1
 7008  0000220  8D EA 0F     	STA ISPADR1
 7009  0000223  A5 18			LDA DST_PAGE_START_ADDR3+2
 7010  0000225  8D EB 0F     	STA ISPADR2
 7011  0000228                   	;ENDM
 7012  0000228  A9 0B			LDA	#(ISP_EN + ISP_EN_PP + ISP_ERR_FLAG)
 7013  000022A  0C E8 0F     	TSB !ISPCON
 7014  000022D  A9 21			LDA #ISP_CMD_PROGRAM
 7015  000022F  8D F0 0F     	STA !ISPCMD	
 7016  0000232  A9 01			LDA #ISP_DONE
 7017  0000234  0C F1 0F     	TSB !ISPTRG
 7018  0000237  AD E8 0F     	LDA !ISPCON
 7019  000023A  29 08			AND #ISP_ERR_FLAG
 7020  000023C  F0 05			BEQ POLLING_ISP_WRITE_TRG#
 7021  000023E  A9 03			LDA #03H
 7022  0000240  4C 4C 02     	JMP	ISP_WRITE_DATA_END#
 7023  0000243                   POLLING_ISP_WRITE_TRG#:
 7024  0000243  AD F1 0F     	LDA !ISPTRG
 7025  0000246  29 01			AND #ISP_DONE
 7026  0000248  D0 F9			BNE POLLING_ISP_WRITE_TRG#
 7027  000024A                   WRITE_OK#:
 7028  000024A  A9 00			LDA #00H
 7029  000024C                   ISP_WRITE_DATA_END#:
 7030  000024C  48           	PHA
 7031  000024D                   	ISP_LOCK
 7032  000024D                   .IFDEF DATA_FLASH_SIZE_512
 7033  000024D                   	ISP_LOCK1
 7034  000024D                   .ELSE
 7035  000024D                   	.IFDEF DATA_FLASH_SIZE_1024
 7036  000024D                   		ISP_LOCK1
 7037  000024D                   	.ELSE
 7038  000024D                   		ISP_LOCK2
 7039  000024D  9C F2 0F     	STZ !ISPULK
 7040  0000250                   	;ENDM
 7041  0000250                   	.ENDIF
 7042  0000250                   .ENDIF
 7043  0000250                   	;ENDM
 7044  0000250  68           	PLA
 7045  0000251                   	;ENDM
 7046  0000251  F0 03			BEQ 3
 7047  0000253  4C 88 02     	JMP END_FLASH_WRITE_PAGE_DP
 7048  0000256                   
 7049  0000256                   DNLOAD_ADDR_INC#:
 7050  0000256                   ;accumulate destination address
 7051  0000256                   	ADD24_24 DST_PAGE_START_ADDR3, 4
 7052  0000256  18           	CLC
 7053  0000257  A5 16			LDA DST_PAGE_START_ADDR3
 7054  0000259  69 04			ADC #.LOW.4
 7055  000025B  85 16			STA DST_PAGE_START_ADDR3
 7056  000025D  A5 17			LDA DST_PAGE_START_ADDR3+1
 7057  000025F  69 00			ADC #.HIGH.4





 7058  0000261  85 17			STA DST_PAGE_START_ADDR3+1
 7059  0000263  A5 18			LDA DST_PAGE_START_ADDR3+2
 7060  0000265  69 00			ADC #.HIGH8.4
 7061  0000267  85 18			STA DST_PAGE_START_ADDR3+2
 7062  0000269                   	;ENDM
 7063  0000269                   
 7064  0000269                   ;accumulate pointer to buffer
 7065  0000269                   	ADD16_16 SRC_BUF4, 4
 7066  0000269  18           	CLC
 7067  000026A  A5 12			LDA SRC_BUF4
 7068  000026C  69 04			ADC #.LOW.4
 7069  000026E  85 12			STA SRC_BUF4
 7070  0000270  A5 13			LDA SRC_BUF4+1
 7071  0000272  69 00			ADC #.HIGH.4
 7072  0000274  85 13			STA SRC_BUF4+1
 7073  0000276                   	;ENDM
 7074  0000276                   
 7075  0000276                   ;accumulate count
 7076  0000276                   	SBC16_16 SRC_LEN2, 4
 7077  0000276  38           	SEC
 7078  0000277  A5 19			LDA SRC_LEN2
 7079  0000279  E9 04			SBC #.LOW.4
 7080  000027B  85 19			STA SRC_LEN2
 7081  000027D  A5 1A			LDA SRC_LEN2+1
 7082  000027F  E9 00			SBC #.HIGH.4
 7083  0000281  85 1A			STA SRC_LEN2+1
 7084  0000283                   	;ENDM
 7085  0000283  4C 6D 01     	JMP WRITE_FLASH_LOOP
 7086  0000286                   
 7087  0000286                   END_FLASH_WRITE_PAGE_DP_OK:
 7088  0000286  A9 00			LDA #00H
 7089  0000288                   END_FLASH_WRITE_PAGE_DP:
 7090  0000288  28           	PLP
 7091  0000289  60           	RTS
 7092  000028A                   ;============================================================================
 7093  000028A                   .IF (WITH_ISP_UPDATE .EQ. 1)
 7094  000028A                   FLASH_COPY_PAGE_HANDLE:
 7095  000028A                   ;.IF (WITH_ISP_UPDATE .EQ. 1)
 7096  000028A  08           	PHP
 7097  000028B  78           	SEI
 7098  000028C                   
 7099  000028C                   ;eraes flash page before program data
 7100  000028C                   	ISP_ERASE_PAGE_DP DST_PAGE_START_ADDR3
 7101  000028C                   	ISP_UNLOCK
 7102  000028C                   .IFDEF DATA_FLASH_SIZE_512
 7103  000028C                   	ISP_UNLOCK1
 7104  000028C                   .ELSE
 7105  000028C                   	.IFDEF DATA_FLASH_SIZE_1024
 7106  000028C                   		ISP_UNLOCK1
 7107  000028C                   	.ELSE
 7108  000028C                   		ISP_UNLOCK2
 7109  000028C  A9 A6			LDA #A6H
 7110  000028E  8D F2 0F     	STA !ISPULK
 7111  0000291  A9 E9			LDA #E9H
 7112  0000293  8D F2 0F     	STA !ISPULK
 7113  0000296  A9 77			LDA #77H
 7114  0000298  8D F2 0F     	STA !ISPULK





 7115  000029B                   	;ENDM
 7116  000029B                   	.ENDIF
 7117  000029B                   .ENDIF
 7118  000029B                   	;ENDM
 7119  000029B                   	ISP_SET_ADDR_DP DST_PAGE_START_ADDR3
 7120  000029B  A5 16			LDA DST_PAGE_START_ADDR3
 7121  000029D  8D E9 0F     	STA ISPADR0
 7122  00002A0  A5 17			LDA DST_PAGE_START_ADDR3+1
 7123  00002A2  8D EA 0F     	STA ISPADR1
 7124  00002A5  A5 18			LDA DST_PAGE_START_ADDR3+2
 7125  00002A7  8D EB 0F     	STA ISPADR2
 7126  00002AA                   	;ENDM
 7127  00002AA  A9 0B			LDA	#(ISP_EN + ISP_EN_PP + ISP_ERR_FLAG)
 7128  00002AC  0C E8 0F     	TSB !ISPCON
 7129  00002AF  A9 22			LDA #ISP_CMD_ERASE_PAGE
 7130  00002B1  8D F0 0F     	STA !ISPCMD	
 7131  00002B4  A9 01			LDA #ISP_DONE
 7132  00002B6  0C F1 0F     	TSB !ISPTRG
 7133  00002B9  AD E8 0F     	LDA !ISPCON
 7134  00002BC  29 08			AND #ISP_ERR_FLAG
 7135  00002BE  F0 05			BEQ POLLING_ISP_ERASE_TRG#
 7136  00002C0  A9 05			LDA #05H
 7137  00002C2  4C CE 02     	JMP	ISP_ERASE_PAGE_END#
 7138  00002C5                   POLLING_ISP_ERASE_TRG#:
 7139  00002C5  AD F1 0F     	LDA !ISPTRG
 7140  00002C8  29 01			AND #ISP_DONE
 7141  00002CA  D0 F9			BNE POLLING_ISP_ERASE_TRG#
 7142  00002CC                   ERASE_OK#:
 7143  00002CC  A9 00			LDA #00H
 7144  00002CE                   ISP_ERASE_PAGE_END#:
 7145  00002CE  48           	PHA
 7146  00002CF                   	ISP_LOCK
 7147  00002CF                   .IFDEF DATA_FLASH_SIZE_512
 7148  00002CF                   	ISP_LOCK1
 7149  00002CF                   .ELSE
 7150  00002CF                   	.IFDEF DATA_FLASH_SIZE_1024
 7151  00002CF                   		ISP_LOCK1
 7152  00002CF                   	.ELSE
 7153  00002CF                   		ISP_LOCK2
 7154  00002CF  9C F2 0F     	STZ !ISPULK
 7155  00002D2                   	;ENDM
 7156  00002D2                   	.ENDIF
 7157  00002D2                   .ENDIF
 7158  00002D2                   	;ENDM
 7159  00002D2  68           	PLA
 7160  00002D3                   	;ENDM
 7161  00002D3  F0 03			BEQ 3
 7162  00002D5  4C 4B 04     	JMP END_COPY_FLASH_PAGE
 7163  00002D8                   
 7164  00002D8                   COPY_LOOP:
 7165  00002D8                   
 7166  00002D8                   ;read data (4B)
 7167  00002D8                   	ISP_READ_DATA_DP SRC_PAGE_START_ADDR3, SRC_BUF4
 7168  00002D8                   	ISP_UNLOCK
 7169  00002D8                   .IFDEF DATA_FLASH_SIZE_512
 7170  00002D8                   	ISP_UNLOCK1
 7171  00002D8                   .ELSE





 7172  00002D8                   	.IFDEF DATA_FLASH_SIZE_1024
 7173  00002D8                   		ISP_UNLOCK1
 7174  00002D8                   	.ELSE
 7175  00002D8                   		ISP_UNLOCK2
 7176  00002D8  A9 A6			LDA #A6H
 7177  00002DA  8D F2 0F     	STA !ISPULK
 7178  00002DD  A9 E9			LDA #E9H
 7179  00002DF  8D F2 0F     	STA !ISPULK
 7180  00002E2  A9 77			LDA #77H
 7181  00002E4  8D F2 0F     	STA !ISPULK
 7182  00002E7                   	;ENDM
 7183  00002E7                   	.ENDIF
 7184  00002E7                   .ENDIF
 7185  00002E7                   	;ENDM
 7186  00002E7                   	ISP_SET_ADDR_DP SRC_PAGE_START_ADDR3
 7187  00002E7  A5 1F			LDA SRC_PAGE_START_ADDR3
 7188  00002E9  8D E9 0F     	STA ISPADR0
 7189  00002EC  A5 20			LDA SRC_PAGE_START_ADDR3+1
 7190  00002EE  8D EA 0F     	STA ISPADR1
 7191  00002F1  A5 21			LDA SRC_PAGE_START_ADDR3+2
 7192  00002F3  8D EB 0F     	STA ISPADR2
 7193  00002F6                   	;ENDM
 7194  00002F6  A9 09			LDA	#(ISP_EN + ISP_ERR_FLAG)
 7195  00002F8  0C E8 0F     	TSB !ISPCON
 7196  00002FB  A9 00			LDA #ISP_CMD_READ
 7197  00002FD  8D F0 0F     	STA !ISPCMD	
 7198  0000300  A9 01			LDA #ISP_DONE
 7199  0000302  0C F1 0F     	TSB !ISPTRG
 7200  0000305  AD E8 0F     	LDA !ISPCON
 7201  0000308  29 08			AND #ISP_ERR_FLAG
 7202  000030A  F0 05			BEQ POLLING_ISP_READ_TRG#
 7203  000030C  A9 01			LDA #01H
 7204  000030E  4C 2E 03     	JMP	ISP_READ_DATA_END#
 7205  0000311                   POLLING_ISP_READ_TRG#:
 7206  0000311  AD F1 0F     	LDA !ISPTRG
 7207  0000314  29 01			AND #ISP_DONE
 7208  0000316  D0 F9			BNE POLLING_ISP_READ_TRG#
 7209  0000318                   	ISP_GET_DATA_DP SRC_BUF4
 7210  0000318  AD EC 0F     	LDA ISPDAT0
 7211  000031B  85 12			STA SRC_BUF4
 7212  000031D  AD ED 0F     	LDA ISPDAT1
 7213  0000320  85 13			STA SRC_BUF4+1
 7214  0000322  AD EE 0F     	LDA ISPDAT2
 7215  0000325  85 14			STA SRC_BUF4+2
 7216  0000327  AD EF 0F     	LDA ISPDAT3
 7217  000032A  85 15			STA SRC_BUF4+3
 7218  000032C                   	;ENDM
 7219  000032C                   READ_OK#:
 7220  000032C  A9 00			LDA #00H
 7221  000032E                   ISP_READ_DATA_END#:
 7222  000032E  48           	PHA
 7223  000032F                   	ISP_LOCK
 7224  000032F                   .IFDEF DATA_FLASH_SIZE_512
 7225  000032F                   	ISP_LOCK1
 7226  000032F                   .ELSE
 7227  000032F                   	.IFDEF DATA_FLASH_SIZE_1024
 7228  000032F                   		ISP_LOCK1





 7229  000032F                   	.ELSE
 7230  000032F                   		ISP_LOCK2
 7231  000032F  9C F2 0F     	STZ !ISPULK
 7232  0000332                   	;ENDM
 7233  0000332                   	.ENDIF
 7234  0000332                   .ENDIF
 7235  0000332                   	;ENDM
 7236  0000332  68           	PLA
 7237  0000333                   	;ENDM
 7238  0000333  F0 03			BEQ 3
 7239  0000335  4C 4B 04     	JMP END_COPY_FLASH_PAGE
 7240  0000338                   
 7241  0000338                   ;program data (4B)
 7242  0000338                   	ISP_WRITE_DATA_DP DST_PAGE_START_ADDR3, SRC_BUF4
 7243  0000338                   	ISP_UNLOCK
 7244  0000338                   .IFDEF DATA_FLASH_SIZE_512
 7245  0000338                   	ISP_UNLOCK1
 7246  0000338                   .ELSE
 7247  0000338                   	.IFDEF DATA_FLASH_SIZE_1024
 7248  0000338                   		ISP_UNLOCK1
 7249  0000338                   	.ELSE
 7250  0000338                   		ISP_UNLOCK2
 7251  0000338  A9 A6			LDA #A6H
 7252  000033A  8D F2 0F     	STA !ISPULK
 7253  000033D  A9 E9			LDA #E9H
 7254  000033F  8D F2 0F     	STA !ISPULK
 7255  0000342  A9 77			LDA #77H
 7256  0000344  8D F2 0F     	STA !ISPULK
 7257  0000347                   	;ENDM
 7258  0000347                   	.ENDIF
 7259  0000347                   .ENDIF
 7260  0000347                   	;ENDM
 7261  0000347                   	ISP_SET_DATA_DP SRC_BUF4
 7262  0000347  A5 12			LDA SRC_BUF4
 7263  0000349  8D EC 0F     	STA ISPDAT0
 7264  000034C  A5 13			LDA SRC_BUF4+1
 7265  000034E  8D ED 0F     	STA ISPDAT1
 7266  0000351  A5 14			LDA SRC_BUF4+2
 7267  0000353  8D EE 0F     	STA ISPDAT2
 7268  0000356  A5 15			LDA SRC_BUF4+3
 7269  0000358  8D EF 0F     	STA ISPDAT3
 7270  000035B                   	;ENDM
 7271  000035B                   	ISP_SET_ADDR_DP DST_PAGE_START_ADDR3
 7272  000035B  A5 16			LDA DST_PAGE_START_ADDR3
 7273  000035D  8D E9 0F     	STA ISPADR0
 7274  0000360  A5 17			LDA DST_PAGE_START_ADDR3+1
 7275  0000362  8D EA 0F     	STA ISPADR1
 7276  0000365  A5 18			LDA DST_PAGE_START_ADDR3+2
 7277  0000367  8D EB 0F     	STA ISPADR2
 7278  000036A                   	;ENDM
 7279  000036A  A9 0B			LDA	#(ISP_EN + ISP_EN_PP + ISP_ERR_FLAG)
 7280  000036C  0C E8 0F     	TSB !ISPCON
 7281  000036F  A9 21			LDA #ISP_CMD_PROGRAM
 7282  0000371  8D F0 0F     	STA !ISPCMD	
 7283  0000374  A9 01			LDA #ISP_DONE
 7284  0000376  0C F1 0F     	TSB !ISPTRG
 7285  0000379  AD E8 0F     	LDA !ISPCON





 7286  000037C  29 08			AND #ISP_ERR_FLAG
 7287  000037E  F0 05			BEQ POLLING_ISP_WRITE_TRG#
 7288  0000380  A9 03			LDA #03H
 7289  0000382  4C 8E 03     	JMP	ISP_WRITE_DATA_END#
 7290  0000385                   POLLING_ISP_WRITE_TRG#:
 7291  0000385  AD F1 0F     	LDA !ISPTRG
 7292  0000388  29 01			AND #ISP_DONE
 7293  000038A  D0 F9			BNE POLLING_ISP_WRITE_TRG#
 7294  000038C                   WRITE_OK#:
 7295  000038C  A9 00			LDA #00H
 7296  000038E                   ISP_WRITE_DATA_END#:
 7297  000038E  48           	PHA
 7298  000038F                   	ISP_LOCK
 7299  000038F                   .IFDEF DATA_FLASH_SIZE_512
 7300  000038F                   	ISP_LOCK1
 7301  000038F                   .ELSE
 7302  000038F                   	.IFDEF DATA_FLASH_SIZE_1024
 7303  000038F                   		ISP_LOCK1
 7304  000038F                   	.ELSE
 7305  000038F                   		ISP_LOCK2
 7306  000038F  9C F2 0F     	STZ !ISPULK
 7307  0000392                   	;ENDM
 7308  0000392                   	.ENDIF
 7309  0000392                   .ENDIF
 7310  0000392                   	;ENDM
 7311  0000392  68           	PLA
 7312  0000393                   	;ENDM
 7313  0000393  F0 03			BEQ 3
 7314  0000395  4C 4B 04     	JMP END_COPY_FLASH_PAGE
 7315  0000398                   
 7316  0000398                   ;verify data (4B)
 7317  0000398                   	ISP_VERIFY_DATA_DP DST_PAGE_START_ADDR3, SRC_BUF4
 7318  0000398                   	ISP_UNLOCK
 7319  0000398                   .IFDEF DATA_FLASH_SIZE_512
 7320  0000398                   	ISP_UNLOCK1
 7321  0000398                   .ELSE
 7322  0000398                   	.IFDEF DATA_FLASH_SIZE_1024
 7323  0000398                   		ISP_UNLOCK1
 7324  0000398                   	.ELSE
 7325  0000398                   		ISP_UNLOCK2
 7326  0000398  A9 A6			LDA #A6H
 7327  000039A  8D F2 0F     	STA !ISPULK
 7328  000039D  A9 E9			LDA #E9H
 7329  000039F  8D F2 0F     	STA !ISPULK
 7330  00003A2  A9 77			LDA #77H
 7331  00003A4  8D F2 0F     	STA !ISPULK
 7332  00003A7                   	;ENDM
 7333  00003A7                   	.ENDIF
 7334  00003A7                   .ENDIF
 7335  00003A7                   	;ENDM
 7336  00003A7                   	ISP_SET_ADDR_DP DST_PAGE_START_ADDR3
 7337  00003A7  A5 16			LDA DST_PAGE_START_ADDR3
 7338  00003A9  8D E9 0F     	STA ISPADR0
 7339  00003AC  A5 17			LDA DST_PAGE_START_ADDR3+1
 7340  00003AE  8D EA 0F     	STA ISPADR1
 7341  00003B1  A5 18			LDA DST_PAGE_START_ADDR3+2
 7342  00003B3  8D EB 0F     	STA ISPADR2





 7343  00003B6                   	;ENDM
 7344  00003B6  A9 09			LDA	#(ISP_EN + ISP_ERR_FLAG)
 7345  00003B8  0C E8 0F     	TSB !ISPCON
 7346  00003BB  A9 00			LDA #ISP_CMD_READ
 7347  00003BD  8D F0 0F     	STA !ISPCMD
 7348  00003C0  A9 01			LDA #ISP_DONE
 7349  00003C2  0C F1 0F     	TSB !ISPTRG
 7350  00003C5  AD E8 0F     	LDA !ISPCON
 7351  00003C8  29 08			AND #ISP_ERR_FLAG
 7352  00003CA  F0 05			BEQ POLLING_ISP_READ_TRG#
 7353  00003CC  A9 01			LDA #01H
 7354  00003CE  4C F5 03     	JMP	ISP_VERIFY_DATA_DP_END#
 7355  00003D1                   POLLING_ISP_READ_TRG#:
 7356  00003D1  AD F1 0F     	LDA !ISPTRG
 7357  00003D4  29 01			AND #ISP_DONE
 7358  00003D6  D0 F9			BNE POLLING_ISP_READ_TRG#
 7359  00003D8  DA           	PHX
 7360  00003D9  A2 00			LDX #0
 7361  00003DB                   VERIFY_DAT_LOOP#:
 7362  00003DB  BD EC 0F     	LDA ISPDAT0,X
 7363  00003DE  D5 12			CMP SRC_BUF4,X
 7364  00003E0  F0 03			BEQ 3
 7365  00003E2  4C F2 03     	JMP VERIFY_NG#
 7366  00003E5  E8           	INX
 7367  00003E6  E0 04			CPX #4
 7368  00003E8  F0 03			BEQ 3 
 7369  00003EA  4C DB 03     	JMP VERIFY_DAT_LOOP#
 7370  00003ED                   VERIFY_OK#:
 7371  00003ED  A9 00			LDA #00H
 7372  00003EF  4C F4 03     	JMP VERIFY_DATA_END#
 7373  00003F2                   VERIFY_NG#:
 7374  00003F2  A9 04			LDA #04H
 7375  00003F4                   VERIFY_DATA_END#
 7376  00003F4  FA           	PLX
 7377  00003F5                   ISP_VERIFY_DATA_DP_END#:
 7378  00003F5  48           	PHA
 7379  00003F6                   	ISP_LOCK
 7380  00003F6                   .IFDEF DATA_FLASH_SIZE_512
 7381  00003F6                   	ISP_LOCK1
 7382  00003F6                   .ELSE
 7383  00003F6                   	.IFDEF DATA_FLASH_SIZE_1024
 7384  00003F6                   		ISP_LOCK1
 7385  00003F6                   	.ELSE
 7386  00003F6                   		ISP_LOCK2
 7387  00003F6  9C F2 0F     	STZ !ISPULK
 7388  00003F9                   	;ENDM
 7389  00003F9                   	.ENDIF
 7390  00003F9                   .ENDIF
 7391  00003F9                   	;ENDM
 7392  00003F9  68           	PLA
 7393  00003FA                   	;ENDM
 7394  00003FA  F0 03			BEQ 3
 7395  00003FC  4C 4B 04     	JMP END_COPY_FLASH_PAGE
 7396  00003FF                   
 7397  00003FF                   ;accumlate source address
 7398  00003FF                   	ADD24_24 SRC_PAGE_START_ADDR3, 4
 7399  00003FF  18           	CLC





 7400  0000400  A5 1F			LDA SRC_PAGE_START_ADDR3
 7401  0000402  69 04			ADC #.LOW.4
 7402  0000404  85 1F			STA SRC_PAGE_START_ADDR3
 7403  0000406  A5 20			LDA SRC_PAGE_START_ADDR3+1
 7404  0000408  69 00			ADC #.HIGH.4
 7405  000040A  85 20			STA SRC_PAGE_START_ADDR3+1
 7406  000040C  A5 21			LDA SRC_PAGE_START_ADDR3+2
 7407  000040E  69 00			ADC #.HIGH8.4
 7408  0000410  85 21			STA SRC_PAGE_START_ADDR3+2
 7409  0000412                   	;ENDM
 7410  0000412                   
 7411  0000412                   ;accumlate destination address
 7412  0000412                   	ADD24_24 DST_PAGE_START_ADDR3, 4
 7413  0000412  18           	CLC
 7414  0000413  A5 16			LDA DST_PAGE_START_ADDR3
 7415  0000415  69 04			ADC #.LOW.4
 7416  0000417  85 16			STA DST_PAGE_START_ADDR3
 7417  0000419  A5 17			LDA DST_PAGE_START_ADDR3+1
 7418  000041B  69 00			ADC #.HIGH.4
 7419  000041D  85 17			STA DST_PAGE_START_ADDR3+1
 7420  000041F  A5 18			LDA DST_PAGE_START_ADDR3+2
 7421  0000421  69 00			ADC #.HIGH8.4
 7422  0000423  85 18			STA DST_PAGE_START_ADDR3+2
 7423  0000425                   	;ENDM
 7424  0000425                   
 7425  0000425                   ;accumlate count
 7426  0000425                   	ADD16_16 COUNT2, 4
 7427  0000425  18           	CLC
 7428  0000426  A5 24			LDA COUNT2
 7429  0000428  69 04			ADC #.LOW.4
 7430  000042A  85 24			STA COUNT2
 7431  000042C  A5 25			LDA COUNT2+1
 7432  000042E  69 00			ADC #.HIGH.4
 7433  0000430  85 25			STA COUNT2+1
 7434  0000432                   	;ENDM
 7435  0000432                   
 7436  0000432                   LAST_CHECK:
 7437  0000432  AD 25 00     	LDA !COUNT2+1
 7438  0000435  C9 02			CMP #.HIGH.PAGE_SIZE
 7439  0000437  F0 03			BEQ 3
 7440  0000439  4C D8 02     	JMP COPY_LOOP
 7441  000043C  AD 24 00     	LDA !COUNT2
 7442  000043F  C9 00			CMP #.LOW.PAGE_SIZE
 7443  0000441  F0 03			BEQ 3
 7444  0000443  4C D8 02     	JMP COPY_LOOP
 7445  0000446  4C 49 04     	JMP END_COPY_FLASH_PAGE_OK
 7446  0000449                   
 7447  0000449                   END_COPY_FLASH_PAGE_OK:
 7448  0000449  A9 00			LDA #00H
 7449  000044B                   END_COPY_FLASH_PAGE:
 7450  000044B  28           	PLP
 7451  000044C                   ;.ENDIF
 7452  000044C  60           	RTS
 7453  000044D                   ;----------------------------------------------------------------------
 7454  000044D                   FLASH_BLANK_CHECK_PAGE_HANDLE:
 7455  000044D                   ;.IF (WITH_ISP_UPDATE .EQ. 1)
 7456  000044D  08           	PHP





 7457  000044E  78           	SEI
 7458  000044F                   
 7459  000044F                   BLANK_CHECK_FLASH_LOOP:
 7460  000044F  A5 1A			LDA SRC_LEN2+1;
 7461  0000451  C9 00		    CMP #00
 7462  0000453  90 08		    BCC BLANK_CHECK_FLASH_PROC_1
 7463  0000455  D0 7C		    BNE BLANK_CHECK_FLASH_PROC_2
 7464  0000457  A5 19		    LDA SRC_LEN2
 7465  0000459  C9 04		    CMP #04H
 7466  000045B  B0 76		    BCS BLANK_CHECK_FLASH_PROC_2	
 7467  000045D                   
 7468  000045D                   BLANK_CHECK_FLASH_PROC_1:
 7469  000045D  A5 19			LDA SRC_LEN2
 7470  000045F  D0 03			BNE 3
 7471  0000461  4C 7B 05     	JMP END_FLASH_BLANK_CHECK_PAGE_OK
 7472  0000464                   
 7473  0000464                   ;read data (<4B) 
 7474  0000464                   	ISP_READ_DATA_DP_X DST_PAGE_START_ADDR3, SRC_BUF4, SRC_LEN2
 7475  0000464                   	ISP_UNLOCK
 7476  0000464                   .IFDEF DATA_FLASH_SIZE_512
 7477  0000464                   	ISP_UNLOCK1
 7478  0000464                   .ELSE
 7479  0000464                   	.IFDEF DATA_FLASH_SIZE_1024
 7480  0000464                   		ISP_UNLOCK1
 7481  0000464                   	.ELSE
 7482  0000464                   		ISP_UNLOCK2
 7483  0000464  A9 A6			LDA #A6H
 7484  0000466  8D F2 0F     	STA !ISPULK
 7485  0000469  A9 E9			LDA #E9H
 7486  000046B  8D F2 0F     	STA !ISPULK
 7487  000046E  A9 77			LDA #77H
 7488  0000470  8D F2 0F     	STA !ISPULK
 7489  0000473                   	;ENDM
 7490  0000473                   	.ENDIF
 7491  0000473                   .ENDIF
 7492  0000473                   	;ENDM
 7493  0000473                   	ISP_SET_ADDR_DP DST_PAGE_START_ADDR3
 7494  0000473  A5 16			LDA DST_PAGE_START_ADDR3
 7495  0000475  8D E9 0F     	STA ISPADR0
 7496  0000478  A5 17			LDA DST_PAGE_START_ADDR3+1
 7497  000047A  8D EA 0F     	STA ISPADR1
 7498  000047D  A5 18			LDA DST_PAGE_START_ADDR3+2
 7499  000047F  8D EB 0F     	STA ISPADR2
 7500  0000482                   	;ENDM
 7501  0000482  A9 09			LDA	#(ISP_EN + ISP_ERR_FLAG)
 7502  0000484  0C E8 0F     	TSB !ISPCON
 7503  0000487  A9 00			LDA #ISP_CMD_READ
 7504  0000489  8D F0 0F     	STA !ISPCMD	
 7505  000048C  A9 01			LDA #ISP_DONE
 7506  000048E  0C F1 0F     	TSB !ISPTRG
 7507  0000491  AD E8 0F     	LDA !ISPCON
 7508  0000494  29 08			AND #ISP_ERR_FLAG
 7509  0000496  F0 05			BEQ POLLING_ISP_READ_TRG#
 7510  0000498  A9 01			LDA #01H
 7511  000049A  4C B6 04     	JMP	ISP_READ_DATA_END#
 7512  000049D                   POLLING_ISP_READ_TRG#:
 7513  000049D  AD F1 0F     	LDA !ISPTRG





 7514  00004A0  29 01			AND #ISP_DONE
 7515  00004A2  D0 F9			BNE POLLING_ISP_READ_TRG#
 7516  00004A4                   	ISP_GET_DATA_DP_X SRC_BUF4, SRC_LEN2
 7517  00004A4  A0 00			LDY #0
 7518  00004A6                   ISP_GET_DATA_DP_X_LOOP#:
 7519  00004A6  B9 EC 0F     	LDA ISPDAT0,Y
 7520  00004A9  99 12 00     	STA SRC_BUF4,Y
 7521  00004AC  C8           	INY
 7522  00004AD  C4 19			CPY SRC_LEN2
 7523  00004AF  F0 03			BEQ ISP_GET_DATA_DP_X_LOOP_END#
 7524  00004B1  4C A6 04     	JMP ISP_GET_DATA_DP_X_LOOP#
 7525  00004B4                   ISP_GET_DATA_DP_X_LOOP_END#:
 7526  00004B4                   	;ENDM
 7527  00004B4                   READ_OK#:
 7528  00004B4  A9 00			LDA #00H
 7529  00004B6                   ISP_READ_DATA_END#:
 7530  00004B6  48           	PHA
 7531  00004B7                   	ISP_LOCK
 7532  00004B7                   .IFDEF DATA_FLASH_SIZE_512
 7533  00004B7                   	ISP_LOCK1
 7534  00004B7                   .ELSE
 7535  00004B7                   	.IFDEF DATA_FLASH_SIZE_1024
 7536  00004B7                   		ISP_LOCK1
 7537  00004B7                   	.ELSE
 7538  00004B7                   		ISP_LOCK2
 7539  00004B7  9C F2 0F     	STZ !ISPULK
 7540  00004BA                   	;ENDM
 7541  00004BA                   	.ENDIF
 7542  00004BA                   .ENDIF
 7543  00004BA                   	;ENDM
 7544  00004BA  68           	PLA
 7545  00004BB                   	;ENDM
 7546  00004BB  F0 03			BEQ 3
 7547  00004BD  4C 7D 05     	JMP END_FLASH_BLANK_CHECK_PAGE
 7548  00004C0                   
 7549  00004C0  A2 00			LDX #0
 7550  00004C2                   BLANK_CMP_LOOP1:
 7551  00004C2  B5 12			LDA SRC_BUF4, X
 7552  00004C4  C9 FF			CMP #FFH
 7553  00004C6  F0 03			BEQ 3
 7554  00004C8  4C 76 05     	JMP END_FLASH_BLANK_CHECK_PAGE_ERROR
 7555  00004CB                   
 7556  00004CB  E8           	INX
 7557  00004CC  E4 19			CPX SRC_LEN2
 7558  00004CE  D0 F2			BNE BLANK_CMP_LOOP1
 7559  00004D0  4C 7B 05     	JMP END_FLASH_BLANK_CHECK_PAGE_OK
 7560  00004D3                   
 7561  00004D3                   BLANK_CHECK_FLASH_PROC_2:
 7562  00004D3                   ;read data (4B) 
 7563  00004D3                   	ISP_READ_DATA_DP DST_PAGE_START_ADDR3, SRC_BUF4
 7564  00004D3                   	ISP_UNLOCK
 7565  00004D3                   .IFDEF DATA_FLASH_SIZE_512
 7566  00004D3                   	ISP_UNLOCK1
 7567  00004D3                   .ELSE
 7568  00004D3                   	.IFDEF DATA_FLASH_SIZE_1024
 7569  00004D3                   		ISP_UNLOCK1
 7570  00004D3                   	.ELSE





 7571  00004D3                   		ISP_UNLOCK2
 7572  00004D3  A9 A6			LDA #A6H
 7573  00004D5  8D F2 0F     	STA !ISPULK
 7574  00004D8  A9 E9			LDA #E9H
 7575  00004DA  8D F2 0F     	STA !ISPULK
 7576  00004DD  A9 77			LDA #77H
 7577  00004DF  8D F2 0F     	STA !ISPULK
 7578  00004E2                   	;ENDM
 7579  00004E2                   	.ENDIF
 7580  00004E2                   .ENDIF
 7581  00004E2                   	;ENDM
 7582  00004E2                   	ISP_SET_ADDR_DP DST_PAGE_START_ADDR3
 7583  00004E2  A5 16			LDA DST_PAGE_START_ADDR3
 7584  00004E4  8D E9 0F     	STA ISPADR0
 7585  00004E7  A5 17			LDA DST_PAGE_START_ADDR3+1
 7586  00004E9  8D EA 0F     	STA ISPADR1
 7587  00004EC  A5 18			LDA DST_PAGE_START_ADDR3+2
 7588  00004EE  8D EB 0F     	STA ISPADR2
 7589  00004F1                   	;ENDM
 7590  00004F1  A9 09			LDA	#(ISP_EN + ISP_ERR_FLAG)
 7591  00004F3  0C E8 0F     	TSB !ISPCON
 7592  00004F6  A9 00			LDA #ISP_CMD_READ
 7593  00004F8  8D F0 0F     	STA !ISPCMD	
 7594  00004FB  A9 01			LDA #ISP_DONE
 7595  00004FD  0C F1 0F     	TSB !ISPTRG
 7596  0000500  AD E8 0F     	LDA !ISPCON
 7597  0000503  29 08			AND #ISP_ERR_FLAG
 7598  0000505  F0 05			BEQ POLLING_ISP_READ_TRG#
 7599  0000507  A9 01			LDA #01H
 7600  0000509  4C 29 05     	JMP	ISP_READ_DATA_END#
 7601  000050C                   POLLING_ISP_READ_TRG#:
 7602  000050C  AD F1 0F     	LDA !ISPTRG
 7603  000050F  29 01			AND #ISP_DONE
 7604  0000511  D0 F9			BNE POLLING_ISP_READ_TRG#
 7605  0000513                   	ISP_GET_DATA_DP SRC_BUF4
 7606  0000513  AD EC 0F     	LDA ISPDAT0
 7607  0000516  85 12			STA SRC_BUF4
 7608  0000518  AD ED 0F     	LDA ISPDAT1
 7609  000051B  85 13			STA SRC_BUF4+1
 7610  000051D  AD EE 0F     	LDA ISPDAT2
 7611  0000520  85 14			STA SRC_BUF4+2
 7612  0000522  AD EF 0F     	LDA ISPDAT3
 7613  0000525  85 15			STA SRC_BUF4+3
 7614  0000527                   	;ENDM
 7615  0000527                   READ_OK#:
 7616  0000527  A9 00			LDA #00H
 7617  0000529                   ISP_READ_DATA_END#:
 7618  0000529  48           	PHA
 7619  000052A                   	ISP_LOCK
 7620  000052A                   .IFDEF DATA_FLASH_SIZE_512
 7621  000052A                   	ISP_LOCK1
 7622  000052A                   .ELSE
 7623  000052A                   	.IFDEF DATA_FLASH_SIZE_1024
 7624  000052A                   		ISP_LOCK1
 7625  000052A                   	.ELSE
 7626  000052A                   		ISP_LOCK2
 7627  000052A  9C F2 0F     	STZ !ISPULK





 7628  000052D                   	;ENDM
 7629  000052D                   	.ENDIF
 7630  000052D                   .ENDIF
 7631  000052D                   	;ENDM
 7632  000052D  68           	PLA
 7633  000052E                   	;ENDM
 7634  000052E  F0 03			BEQ 3
 7635  0000530  4C 7D 05     	JMP END_FLASH_BLANK_CHECK_PAGE
 7636  0000533                   
 7637  0000533  A2 00			LDX #0
 7638  0000535                   BLANK_CMP_LOOP2:
 7639  0000535  B5 12			LDA SRC_BUF4, X
 7640  0000537  C9 FF			CMP #FFH
 7641  0000539  F0 03			BEQ 3
 7642  000053B  4C 76 05     	JMP END_FLASH_BLANK_CHECK_PAGE_ERROR
 7643  000053E                   
 7644  000053E  E8           	INX
 7645  000053F  E0 04			CPX #4
 7646  0000541  D0 F2			BNE BLANK_CMP_LOOP2
 7647  0000543  4C 7B 05     	JMP END_FLASH_BLANK_CHECK_PAGE_OK
 7648  0000546                   
 7649  0000546                   BLANK_CHECK_ADDR_INC:
 7650  0000546                   ;accumulate destination address
 7651  0000546                   	ADD24_24 DST_PAGE_START_ADDR3, 4
 7652  0000546  18           	CLC
 7653  0000547  A5 16			LDA DST_PAGE_START_ADDR3
 7654  0000549  69 04			ADC #.LOW.4
 7655  000054B  85 16			STA DST_PAGE_START_ADDR3
 7656  000054D  A5 17			LDA DST_PAGE_START_ADDR3+1
 7657  000054F  69 00			ADC #.HIGH.4
 7658  0000551  85 17			STA DST_PAGE_START_ADDR3+1
 7659  0000553  A5 18			LDA DST_PAGE_START_ADDR3+2
 7660  0000555  69 00			ADC #.HIGH8.4
 7661  0000557  85 18			STA DST_PAGE_START_ADDR3+2
 7662  0000559                   	;ENDM
 7663  0000559                   
 7664  0000559                   ;accumlate pointer to buffer
 7665  0000559                   	ADD16_16 SRC_BUF4, 4
 7666  0000559  18           	CLC
 7667  000055A  A5 12			LDA SRC_BUF4
 7668  000055C  69 04			ADC #.LOW.4
 7669  000055E  85 12			STA SRC_BUF4
 7670  0000560  A5 13			LDA SRC_BUF4+1
 7671  0000562  69 00			ADC #.HIGH.4
 7672  0000564  85 13			STA SRC_BUF4+1
 7673  0000566                   	;ENDM
 7674  0000566                   
 7675  0000566                   ;accumlate count
 7676  0000566                   	SBC16_16 SRC_LEN2, 4
 7677  0000566  38           	SEC
 7678  0000567  A5 19			LDA SRC_LEN2
 7679  0000569  E9 04			SBC #.LOW.4
 7680  000056B  85 19			STA SRC_LEN2
 7681  000056D  A5 1A			LDA SRC_LEN2+1
 7682  000056F  E9 00			SBC #.HIGH.4
 7683  0000571  85 1A			STA SRC_LEN2+1
 7684  0000573                   	;ENDM





 7685  0000573  4C 4F 04     	JMP BLANK_CHECK_FLASH_LOOP
 7686  0000576                   
 7687  0000576                   END_FLASH_BLANK_CHECK_PAGE_ERROR:
 7688  0000576  A9 07			LDA #07H
 7689  0000578  4C 7D 05     	JMP END_FLASH_BLANK_CHECK_PAGE
 7690  000057B                   END_FLASH_BLANK_CHECK_PAGE_OK:
 7691  000057B  A9 00			LDA #00H
 7692  000057D                   END_FLASH_BLANK_CHECK_PAGE:
 7693  000057D  28           	PLP
 7694  000057E                   ;.ENDIF
 7695  000057E  60           	RTS
 7696  000057F                   ;----------------------------------------------------------------------
 7697  000057F                   FLASH_VERIFY_PAGE_HANDLE:
 7698  000057F                   ;.IF (WITH_ISP_UPDATE .EQ. 1)
 7699  000057F  08           	PHP
 7700  0000580  78           	SEI
 7701  0000581                   
 7702  0000581                   VERIFY_FLASH_LOOP:
 7703  0000581                   
 7704  0000581  A5 1A			LDA SRC_LEN2+1;
 7705  0000583  C9 00		    CMP #00
 7706  0000585  90 08		    BCC VERIFY_FLASH_PROC_1
 7707  0000587  D0 77		    BNE VERIFY_FLASH_PROC_2
 7708  0000589  A5 19		    LDA SRC_LEN2
 7709  000058B  C9 04		    CMP #04H
 7710  000058D  B0 71		    BCS VERIFY_FLASH_PROC_2
 7711  000058F                   
 7712  000058F                   VERIFY_FLASH_PROC_1:
 7713  000058F  A5 19			LDA SRC_LEN2
 7714  0000591  D0 03			BNE 3
 7715  0000593  4C 99 06     	JMP END_FLASH_VERIFY_PAGE_DP
 7716  0000596                   
 7717  0000596                   ; program nB
 7718  0000596                   	ISP_VERIFY_DATA_DP_ILI_X DST_PAGE_START_ADDR3, SRC_BUF4, SRC_LEN2
 7719  0000596                   	ISP_UNLOCK
 7720  0000596                   .IFDEF DATA_FLASH_SIZE_512
 7721  0000596                   	ISP_UNLOCK1
 7722  0000596                   .ELSE
 7723  0000596                   	.IFDEF DATA_FLASH_SIZE_1024
 7724  0000596                   		ISP_UNLOCK1
 7725  0000596                   	.ELSE
 7726  0000596                   		ISP_UNLOCK2
 7727  0000596  A9 A6			LDA #A6H
 7728  0000598  8D F2 0F     	STA !ISPULK
 7729  000059B  A9 E9			LDA #E9H
 7730  000059D  8D F2 0F     	STA !ISPULK
 7731  00005A0  A9 77			LDA #77H
 7732  00005A2  8D F2 0F     	STA !ISPULK
 7733  00005A5                   	;ENDM
 7734  00005A5                   	.ENDIF
 7735  00005A5                   .ENDIF
 7736  00005A5                   	;ENDM
 7737  00005A5                   	ISP_SET_ADDR_DP DST_PAGE_START_ADDR3
 7738  00005A5  A5 16			LDA DST_PAGE_START_ADDR3
 7739  00005A7  8D E9 0F     	STA ISPADR0
 7740  00005AA  A5 17			LDA DST_PAGE_START_ADDR3+1
 7741  00005AC  8D EA 0F     	STA ISPADR1





 7742  00005AF  A5 18			LDA DST_PAGE_START_ADDR3+2
 7743  00005B1  8D EB 0F     	STA ISPADR2
 7744  00005B4                   	;ENDM
 7745  00005B4  A9 09			LDA	#(ISP_EN + ISP_ERR_FLAG)
 7746  00005B6  0C E8 0F     	TSB !ISPCON
 7747  00005B9  A9 00			LDA #ISP_CMD_READ
 7748  00005BB  8D F0 0F     	STA !ISPCMD
 7749  00005BE  A9 01			LDA #ISP_DONE
 7750  00005C0  0C F1 0F     	TSB !ISPTRG
 7751  00005C3  AD E8 0F     	LDA !ISPCON
 7752  00005C6  29 08			AND #ISP_ERR_FLAG
 7753  00005C8  F0 05			BEQ POLLING_ISP_READ_TRG#
 7754  00005CA  A9 01			LDA #01H
 7755  00005CC  4C F3 05     	JMP	ISP_VERIFY_DATA_DP_ILI_X_END#
 7756  00005CF                   POLLING_ISP_READ_TRG#:
 7757  00005CF  AD F1 0F     	LDA !ISPTRG
 7758  00005D2  29 01			AND #ISP_DONE
 7759  00005D4  D0 F9			BNE POLLING_ISP_READ_TRG#
 7760  00005D6  5A           	PHY
 7761  00005D7  A0 00			LDY #0
 7762  00005D9                   VERIFY_DAT_LOOP#:
 7763  00005D9  B9 EC 0F     	LDA ISPDAT0,Y
 7764  00005DC  D1 12			CMP (SRC_BUF4),Y
 7765  00005DE  F0 03			BEQ 3
 7766  00005E0  4C F0 05     	JMP VERIFY_NG#
 7767  00005E3  C8           	INY
 7768  00005E4  C4 19			CPY SRC_LEN2
 7769  00005E6  F0 03			BEQ 3 
 7770  00005E8  4C D9 05     	JMP VERIFY_DAT_LOOP#
 7771  00005EB                   VERIFY_OK#:
 7772  00005EB  A9 00			LDA #00H
 7773  00005ED  4C F2 05     	JMP VERIFY_DATA_END#
 7774  00005F0                   VERIFY_NG#:
 7775  00005F0  A9 04			LDA #04H
 7776  00005F2                   VERIFY_DATA_END#
 7777  00005F2  7A           	PLY
 7778  00005F3                   ISP_VERIFY_DATA_DP_ILI_X_END#:
 7779  00005F3  48           	PHA
 7780  00005F4                   	ISP_LOCK
 7781  00005F4                   .IFDEF DATA_FLASH_SIZE_512
 7782  00005F4                   	ISP_LOCK1
 7783  00005F4                   .ELSE
 7784  00005F4                   	.IFDEF DATA_FLASH_SIZE_1024
 7785  00005F4                   		ISP_LOCK1
 7786  00005F4                   	.ELSE
 7787  00005F4                   		ISP_LOCK2
 7788  00005F4  9C F2 0F     	STZ !ISPULK
 7789  00005F7                   	;ENDM
 7790  00005F7                   	.ENDIF
 7791  00005F7                   .ENDIF
 7792  00005F7                   	;ENDM
 7793  00005F7  68           	PLA
 7794  00005F8                   	;ENDM
 7795  00005F8  F0 03			BEQ 3
 7796  00005FA  4C 99 06     	JMP END_FLASH_VERIFY_PAGE_DP
 7797  00005FD  4C 97 06     	JMP END_FLASH_VERIFY_PAGE_DP_OK
 7798  0000600                   





 7799  0000600                   VERIFY_FLASH_PROC_2:
 7800  0000600                   ;program data (4B)
 7801  0000600                   	ISP_VERIFY_DATA_DP_ILI DST_PAGE_START_ADDR3, SRC_BUF4
 7802  0000600                   	ISP_UNLOCK
 7803  0000600                   .IFDEF DATA_FLASH_SIZE_512
 7804  0000600                   	ISP_UNLOCK1
 7805  0000600                   .ELSE
 7806  0000600                   	.IFDEF DATA_FLASH_SIZE_1024
 7807  0000600                   		ISP_UNLOCK1
 7808  0000600                   	.ELSE
 7809  0000600                   		ISP_UNLOCK2
 7810  0000600  A9 A6			LDA #A6H
 7811  0000602  8D F2 0F     	STA !ISPULK
 7812  0000605  A9 E9			LDA #E9H
 7813  0000607  8D F2 0F     	STA !ISPULK
 7814  000060A  A9 77			LDA #77H
 7815  000060C  8D F2 0F     	STA !ISPULK
 7816  000060F                   	;ENDM
 7817  000060F                   	.ENDIF
 7818  000060F                   .ENDIF
 7819  000060F                   	;ENDM
 7820  000060F                   	ISP_SET_ADDR_DP DST_PAGE_START_ADDR3
 7821  000060F  A5 16			LDA DST_PAGE_START_ADDR3
 7822  0000611  8D E9 0F     	STA ISPADR0
 7823  0000614  A5 17			LDA DST_PAGE_START_ADDR3+1
 7824  0000616  8D EA 0F     	STA ISPADR1
 7825  0000619  A5 18			LDA DST_PAGE_START_ADDR3+2
 7826  000061B  8D EB 0F     	STA ISPADR2
 7827  000061E                   	;ENDM
 7828  000061E  A9 09			LDA	#(ISP_EN + ISP_ERR_FLAG)
 7829  0000620  0C E8 0F     	TSB !ISPCON
 7830  0000623  A9 00			LDA #ISP_CMD_READ
 7831  0000625  8D F0 0F     	STA !ISPCMD
 7832  0000628  A9 01			LDA #ISP_DONE
 7833  000062A  0C F1 0F     	TSB !ISPTRG
 7834  000062D  AD E8 0F     	LDA !ISPCON
 7835  0000630  29 08			AND #ISP_ERR_FLAG
 7836  0000632  F0 05			BEQ POLLING_ISP_READ_TRG#
 7837  0000634  A9 01			LDA #01H
 7838  0000636  4C 5D 06     	JMP	ISP_VERIFY_DATA_DP_ILI_END#
 7839  0000639                   POLLING_ISP_READ_TRG#:
 7840  0000639  AD F1 0F     	LDA !ISPTRG
 7841  000063C  29 01			AND #ISP_DONE
 7842  000063E  D0 F9			BNE POLLING_ISP_READ_TRG#
 7843  0000640  5A           	PHY
 7844  0000641  A0 00			LDY #0
 7845  0000643                   VERIFY_DAT_LOOP#:
 7846  0000643  B9 EC 0F     	LDA ISPDAT0,Y
 7847  0000646  D1 12			CMP (SRC_BUF4),Y
 7848  0000648  F0 03			BEQ 3
 7849  000064A  4C 5A 06     	JMP VERIFY_NG#
 7850  000064D  C8           	INY
 7851  000064E  C0 04			CPY #4
 7852  0000650  F0 03			BEQ 3 
 7853  0000652  4C 43 06     	JMP VERIFY_DAT_LOOP#
 7854  0000655                   VERIFY_OK#:
 7855  0000655  A9 00			LDA #00H





 7856  0000657  4C 5C 06     	JMP VERIFY_DATA_END#
 7857  000065A                   VERIFY_NG#:
 7858  000065A  A9 04			LDA #04H
 7859  000065C                   VERIFY_DATA_END#
 7860  000065C  7A           	PLY
 7861  000065D                   ISP_VERIFY_DATA_DP_ILI_END#:
 7862  000065D  48           	PHA
 7863  000065E                   	ISP_LOCK
 7864  000065E                   .IFDEF DATA_FLASH_SIZE_512
 7865  000065E                   	ISP_LOCK1
 7866  000065E                   .ELSE
 7867  000065E                   	.IFDEF DATA_FLASH_SIZE_1024
 7868  000065E                   		ISP_LOCK1
 7869  000065E                   	.ELSE
 7870  000065E                   		ISP_LOCK2
 7871  000065E  9C F2 0F     	STZ !ISPULK
 7872  0000661                   	;ENDM
 7873  0000661                   	.ENDIF
 7874  0000661                   .ENDIF
 7875  0000661                   	;ENDM
 7876  0000661  68           	PLA
 7877  0000662                   	;ENDM
 7878  0000662  F0 03			BEQ 3
 7879  0000664  4C 99 06     	JMP END_FLASH_VERIFY_PAGE_DP
 7880  0000667                   
 7881  0000667                   VERIFY_ADDR_INC#:
 7882  0000667                   ;accumulate destination address
 7883  0000667                   	ADD24_24 DST_PAGE_START_ADDR3, 4
 7884  0000667  18           	CLC
 7885  0000668  A5 16			LDA DST_PAGE_START_ADDR3
 7886  000066A  69 04			ADC #.LOW.4
 7887  000066C  85 16			STA DST_PAGE_START_ADDR3
 7888  000066E  A5 17			LDA DST_PAGE_START_ADDR3+1
 7889  0000670  69 00			ADC #.HIGH.4
 7890  0000672  85 17			STA DST_PAGE_START_ADDR3+1
 7891  0000674  A5 18			LDA DST_PAGE_START_ADDR3+2
 7892  0000676  69 00			ADC #.HIGH8.4
 7893  0000678  85 18			STA DST_PAGE_START_ADDR3+2
 7894  000067A                   	;ENDM
 7895  000067A                   
 7896  000067A                   ;accumulate pointer to buffer
 7897  000067A                   	ADD16_16 SRC_BUF4, 4
 7898  000067A  18           	CLC
 7899  000067B  A5 12			LDA SRC_BUF4
 7900  000067D  69 04			ADC #.LOW.4
 7901  000067F  85 12			STA SRC_BUF4
 7902  0000681  A5 13			LDA SRC_BUF4+1
 7903  0000683  69 00			ADC #.HIGH.4
 7904  0000685  85 13			STA SRC_BUF4+1
 7905  0000687                   	;ENDM
 7906  0000687                   
 7907  0000687                   ;accumulate count
 7908  0000687                   	SBC16_16 SRC_LEN2, 4
 7909  0000687  38           	SEC
 7910  0000688  A5 19			LDA SRC_LEN2
 7911  000068A  E9 04			SBC #.LOW.4
 7912  000068C  85 19			STA SRC_LEN2





 7913  000068E  A5 1A			LDA SRC_LEN2+1
 7914  0000690  E9 00			SBC #.HIGH.4
 7915  0000692  85 1A			STA SRC_LEN2+1
 7916  0000694                   	;ENDM
 7917  0000694  4C 81 05     	JMP VERIFY_FLASH_LOOP
 7918  0000697                   
 7919  0000697                   END_FLASH_VERIFY_PAGE_DP_OK:
 7920  0000697  A9 00			LDA #00H
 7921  0000699                   END_FLASH_VERIFY_PAGE_DP:
 7922  0000699  28           	PLP
 7923  000069A                   ;.ENDIF
 7924  000069A  60           	RTS
 7925  000069B                   .ENDIF
 7926  000069B                   ;============================================================================
 7927  000069B                   .IF (WITH_PROTECTION_PAGE_UPDATE .EQ. 1)
 7928  000069B                   .IF (PROTECTION_PAGE_WORKING_MODE .EQ. 1)	
 7929  000069B                   FLASH_BACKUP_REPLACE_PAGE_HANDLE:
 7930  000069B                   	STZ16 COUNT2
 7931  000069B                   
 7932  000069B                   	PHP
 7933  000069B                   	SEI
 7934  000069B                   
 7935  000069B                   ;eraes flash page before program data
 7936  000069B                   	ISP_ERASE_PAGE_DP DST_PAGE_START_ADDR3
 7937  000069B                   	BEQ 3
 7938  000069B                   	JMP END_FLASH_BACKUP_REPLACE_PAGE_DP
 7939  000069B                   
 7940  000069B                   BACKUP_LOOP:
 7941  000069B                   ;read data (4B)
 7942  000069B                   	ISP_READ_DATA_DP SRC_PAGE_START_ADDR3, DST_BUF4
 7943  000069B                   	BEQ 3
 7944  000069B                   	JMP END_FLASH_BACKUP_REPLACE_PAGE_DP
 7945  000069B                   
 7946  000069B                   REPLACEX:
 7947  000069B                   ;the current offset is the replacement offset?
 7948  000069B                   	LDA OFFSET2+1
 7949  000069B                   	CMP COUNT2+1
 7950  000069B                   	BNE END_REPLACE
 7951  000069B                   	LDA OFFSET2
 7952  000069B                   	CMP COUNT2
 7953  000069B                   	BNE END_REPLACE
 7954  000069B                   
 7955  000069B                   	LDA SRC_LEN2+1;
 7956  000069B                       CMP #00
 7957  000069B                       BCC REPLACE2_FLASH_PROC_1
 7958  000069B                       BNE REPLACE2_FLASH_PROC_2
 7959  000069B                       LDA SRC_LEN2
 7960  000069B                       CMP #04H
 7961  000069B                       BCS REPLACE2_FLASH_PROC_2
 7962  000069B                   
 7963  000069B                   REPLACE2_FLASH_PROC_1:
 7964  000069B                   ;replace data (<4B)
 7965  000069B                   	LDA SRC_LEN2
 7966  000069B                   	BNE 3
 7967  000069B                   	JMP END_REPLACE
 7968  000069B                   
 7969  000069B                   	LDY SRC_LEN2





 7970  000069B                   REPLACE_LOOP1:
 7971  000069B                   	DEY
 7972  000069B                   	LDA (.LOW.SRC_BUF4),Y
 7973  000069B                   	STA DST_BUF4,Y
 7974  000069B                   	CPY #0
 7975  000069B                   	BNE REPLACE_LOOP1
 7976  000069B                   
 7977  000069B                   	JMP END_REPLACE
 7978  000069B                   
 7979  000069B                   REPLACE2_FLASH_PROC_2:
 7980  000069B                   ;replace data (4B)
 7981  000069B                   	LDY #4
 7982  000069B                   REPLACE_LOOP:
 7983  000069B                   	DEY
 7984  000069B                   	LDA (.LOW.SRC_BUF4),Y
 7985  000069B                   	STA DST_BUF4,Y
 7986  000069B                   	CPY #0
 7987  000069B                   	BNE REPLACE_LOOP
 7988  000069B                   
 7989  000069B                   ADD_REPLACE:
 7990  000069B                   ;SBC16_16 SRC_LEN2, 4
 7991  000069B                   	ADD16_16 OFFSET2, 4
 7992  000069B                   
 7993  000069B                   ;accumlate replacement length
 7994  000069B                   	SBC16_16 SRC_LEN2, 4
 7995  000069B                   
 7996  000069B                   ;accumlate pointer to buffer
 7997  000069B                   	ADD16_16 SRC_BUF4, 4
 7998  000069B                   
 7999  000069B                   END_REPLACE:
 8000  000069B                   
 8001  000069B                   ;write data (4B)
 8002  000069B                   	ISP_WRITE_DATA_DP DST_PAGE_START_ADDR3, DST_BUF4
 8003  000069B                   	BEQ 3
 8004  000069B                   	JMP END_FLASH_BACKUP_REPLACE_PAGE_DP
 8005  000069B                   
 8006  000069B                   	ISP_VERIFY_DATA_DP DST_PAGE_START_ADDR3, DST_BUF4
 8007  000069B                   	BEQ 3
 8008  000069B                   	JMP END_FLASH_BACKUP_REPLACE_PAGE_DP
 8009  000069B                   
 8010  000069B                   ;accumlate source address
 8011  000069B                   	ADD24_24 SRC_PAGE_START_ADDR3, 4
 8012  000069B                   
 8013  000069B                   ;accumlate destination address
 8014  000069B                   	ADD24_24 DST_PAGE_START_ADDR3, 4
 8015  000069B                   
 8016  000069B                   ;accumlate count
 8017  000069B                   	ADD16_16 COUNT2, 4
 8018  000069B                   
 8019  000069B                   	LDA COUNT2+1
 8020  000069B                   	CMP #.HIGH.(PAGE_SIZE)
 8021  000069B                   	BEQ 3
 8022  000069B                   	JMP BACKUP_LOOP
 8023  000069B                   	LDA COUNT2
 8024  000069B                   	CMP #.LOW.(PAGE_SIZE)
 8025  000069B                   	BEQ 3
 8026  000069B                   	JMP BACKUP_LOOP





 8027  000069B                   	JMP END_FLASH_BACKUP_REPLACE_PAGE_DP_OK
 8028  000069B                   
 8029  000069B                   END_FLASH_BACKUP_REPLACE_PAGE_DP_OK
 8030  000069B                   	LDA #00H		; SUCCESS!
 8031  000069B                   END_FLASH_BACKUP_REPLACE_PAGE_DP:
 8032  000069B                   	PLP
 8033  000069B                   	RTS
 8034  000069B                   ;----------------------------------------------------------------------
 8035  000069B                   PROTECTION_PAGE_READ_HANDLE:
 8036  000069B                   	FLASH_READ_PAGE_DP 1200H, 512-4, 4, DST_BUF4
 8037  000069B                   	CMP #0
 8038  000069B                   	BEQ 3
 8039  000069B                   	JMP PROTECTION_PAGE_READ_END
 8040  000069B                   
 8041  000069B                   	LDA DST_BUF4+3
 8042  000069B                   	CMP #NU_ID
 8043  000069B                   	BEQ 3
 8044  000069B                   	JMP SWAPPING_PAGE_READ
 8045  000069B                   
 8046  000069B                   	MOV16_16_DP SRC_LEN2, LEN_TEMP
 8047  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, 1200H
 8048  000069B                   	ADD24_16_DP DST_PAGE_START_ADDR3, OFFSET_TEMP
 8049  000069B                   	MOV16_16_DP SRC_BUF4, PBUF_TEMP
 8050  000069B                   
 8051  000069B                   	JSR FLASH_READ_PAGE_PROC
 8052  000069B                   
 8053  000069B                   	JMP PROTECTION_PAGE_READ_END
 8054  000069B                   SWAPPING_PAGE_READ:
 8055  000069B                   	MOV16_16_DP SRC_LEN2, LEN_TEMP
 8056  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, 1400H
 8057  000069B                   	ADD24_16_DP DST_PAGE_START_ADDR3, OFFSET_TEMP
 8058  000069B                   	MOV16_16_DP SRC_BUF4, PBUF_TEMP
 8059  000069B                   
 8060  000069B                   	JSR FLASH_READ_PAGE_PROC
 8061  000069B                   
 8062  000069B                   PROTECTION_PAGE_READ_END:
 8063  000069B                   	RTS
 8064  000069B                   ;----------------------------------------------------------------------
 8065  000069B                   PROTECTION_PAGE_UPDATE_HANDLE:
 8066  000069B                   	FLASH_READ_PAGE_DP 1200H, 512-4, 4, DST_BUF4
 8067  000069B                   	CMP #0
 8068  000069B                   	BEQ 3
 8069  000069B                   	JMP PROTECTION_PAGE_UPDATE_END
 8070  000069B                   
 8071  000069B                   	LDA DST_BUF4+3
 8072  000069B                   	CMP #NU_ID
 8073  000069B                   	BNE 3
 8074  000069B                   	JMP UPDATE_PAGE_PROC
 8075  000069B                   
 8076  000069B                   	FLASH_READ_PAGE_DP 1400H, 512-4, 4, DST_BUF4
 8077  000069B                   	CMP #0
 8078  000069B                   	BEQ 3
 8079  000069B                   	JMP PROTECTION_PAGE_UPDATE_END
 8080  000069B                   
 8081  000069B                   	LDA DST_BUF4+3
 8082  000069B                   	CMP #NU_ID
 8083  000069B                   	BNE 3





 8084  000069B                   	JMP RESTORE_PAGE_PROC
 8085  000069B                   
 8086  000069B                   ;erase & write check ID
 8087  000069B                   	FLASH_ERASE_PAGE 1200H
 8088  000069B                   	CMP #0
 8089  000069B                   	BEQ 3
 8090  000069B                   	JMP PROTECTION_PAGE_UPDATE_END
 8091  000069B                   
 8092  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, 1200H
 8093  000069B                   	JSR FLASH_PAGE_INJECT_ID_HANDLE
 8094  000069B                   	CMP #0
 8095  000069B                   	BEQ 3
 8096  000069B                   	JMP PROTECTION_PAGE_UPDATE_END
 8097  000069B                   
 8098  000069B                   	JMP UPDATE_PAGE_PROC
 8099  000069B                   
 8100  000069B                   RESTORE_PAGE_PROC:
 8101  000069B                   ;restore damaged page
 8102  000069B                   	FLASH_COPY_PAGE 1200H, 1400H
 8103  000069B                   	CMP #0
 8104  000069B                   	BEQ 3
 8105  000069B                   	JMP PROTECTION_PAGE_UPDATE_END
 8106  000069B                   
 8107  000069B                   UPDATE_PAGE_PROC:
 8108  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, 1400H
 8109  000069B                   	MOV24_24 SRC_PAGE_START_ADDR3, 1200H
 8110  000069B                   	MOV16_16_DP OFFSET2, OFFSET_TEMP
 8111  000069B                   	MOV16_16_DP SRC_LEN2, LEN_TEMP
 8112  000069B                   	MOV16_16_DP SRC_BUF4, PBUF_TEMP
 8113  000069B                   	JSR FLASH_BACKUP_REPLACE_PAGE_PROC
 8114  000069B                   	CMP #0
 8115  000069B                   	BEQ 3
 8116  000069B                   	JMP PROTECTION_PAGE_UPDATE_END
 8117  000069B                   
 8118  000069B                   	FLASH_COPY_PAGE 1200H, 1400H
 8119  000069B                   	CMP #0
 8120  000069B                   	BEQ 3
 8121  000069B                   	JMP PROTECTION_PAGE_UPDATE_END
 8122  000069B                   
 8123  000069B                   PROTECTION_PAGE_UPDATE_END:
 8124  000069B                   	RTS
 8125  000069B                   ;----------------------------------------------------------------------
 8126  000069B                   FLASH_PAGE_INJECT_ID_HANDLE:
 8127  000069B                   	LDA #FFH
 8128  000069B                   	STA DST_BUF4
 8129  000069B                   	STA DST_BUF4+1
 8130  000069B                   	STA DST_BUF4+2
 8131  000069B                   	LDA #NU_ID
 8132  000069B                   	STA DST_BUF4+3
 8133  000069B                   
 8134  000069B                   	MOV16_16 SRC_LEN2, 4
 8135  000069B                   	ADD24_24 DST_PAGE_START_ADDR3, PAGE_SIZE-4
 8136  000069B                   	MOV16_16 SRC_BUF4, DST_BUF4
 8137  000069B                   	JSR FLASH_WRITE_PAGE_PROC
 8138  000069B                   	RTS
 8139  000069B                   .ENDIF
 8140  000069B                   .ENDIF





 8141  000069B                   ;============================================================================
 8142  000069B                   
 8143  000069B                   	INCLUDE	"C:\NUVOTON\NSPPLAYLISTEDITOR\V1.13.000\NSP_SDS\SDS_NSP\INCLUDE\PROTECTIONPAGESECOMM.ASM.APP"
 8144  000069B                   .IF (WITH_PROTECTION_PAGE_UPDATE .EQ. 1)
 8145  000069B                   .IF (PROTECTION_PAGE_WORKING_MODE .EQ. 2)	
 8146  000069B                   	PUBLIC FLASH_SECTION_UPDATE_PROC
 8147  000069B                   	PUBLIC FLASH_SECTION_READ_PROC
 8148  000069B                   ;============================================================================
 8149  000069B                   ; + Definition
 8150  000069B                   ;============================================================================
 8151  000069B                   SECTION_SIZE				EQU			(512/BLOCK_NUM)
 8152  000069B                   
 8153  000069B                   SECTION_INDEX_NUM			EQU			BLOCK_NUM/SECTION_SIZE
 8154  000069B                   
 8155  000069B                   .IF (SECTION_INDEX_NUM .GT. SECTION_SIZE)
 8156  000069B                   SECTION_BOUNDARY			EQU			((512-BLOCK_NUM/8)/SECTION_SIZE)
 8157  000069B                   .ELSE
 8158  000069B                   SECTION_BOUNDARY			EQU			BLOCK_NUM-1
 8159  000069B                   .ENDIF
 8160  000069B                   
 8161  000069B                   SPARE_SECTION_ADDR_NP		EQU			1200H+((SECTION_BOUNDARY)*SECTION_SIZE)
 8162  000069B                   SPARE_SECTION_ADDR_SP		EQU			1400H+((SECTION_BOUNDARY)*SECTION_SIZE)
 8163  000069B                   
 8164  000069B                   PP_RESTORE_DO				EQU			10000000B
 8165  000069B                   ;============================================================================
 8166  000069B                   ; + Table
 8167  000069B                   ;============================================================================
 8168  000069B                   SECTION_INDEX_BIT_MASK_TABLE:
 8169  000069B                   	DB		00000001B
 8170  000069B                   	DB		00000010B
 8171  000069B                   	DB		00000100B
 8172  000069B                   	DB		00001000B
 8173  000069B                   	DB		00010000B
 8174  000069B                   	DB		00100000B
 8175  000069B                   	DB		01000000B
 8176  000069B                   	DB		10000000B
 8177  000069B                   
 8178  000069B                   ;============================================================================
 8179  000069B                   SET_MASK_BIT_FROM_INDEX_NP:
 8180  000069B                   	STZ SECTION_OFFSET
 8181  000069B                   	STZ SECTION_OFFSET+1
 8182  000069B                   	JSR _xSET_MASK_BIT_FROM_INDEX
 8183  000069B                   
 8184  000069B                   	MOV16_16 SRC_BUF4, DST_BUF4
 8185  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, SPARE_SECTION_ADDR_NP
 8186  000069B                   	ADD24_16_DP DST_PAGE_START_ADDR3, SECTION_OFFSET
 8187  000069B                   	MOV16_16 SRC_LEN2, 4
 8188  000069B                   	JSR FLASH_WRITE_PAGE_PROC
 8189  000069B                   	RTS
 8190  000069B                   ;-------------------------------------------------------------------------
 8191  000069B                   SET_MASK_BIT_FROM_INDEX_SP:
 8192  000069B                   	STZ SECTION_OFFSET
 8193  000069B                   	STZ SECTION_OFFSET+1
 8194  000069B                   	JSR _xSET_MASK_BIT_FROM_INDEX
 8195  000069B                   
 8196  000069B                   	MOV16_16 SRC_BUF4, DST_BUF4
 8197  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, SPARE_SECTION_ADDR_SP





 8198  000069B                   	ADD24_16_DP DST_PAGE_START_ADDR3, SECTION_OFFSET
 8199  000069B                   	MOV16_16 SRC_LEN2, 4
 8200  000069B                   	JSR FLASH_WRITE_PAGE_PROC
 8201  000069B                   	RTS
 8202  000069B                   ;-------------------------------------------------------------------------
 8203  000069B                   _xSET_MASK_BIT_FROM_INDEX:
 8204  000069B                   	PHX
 8205  000069B                   	PHY
 8206  000069B                   
 8207  000069B                   	LDA #FFH
 8208  000069B                   	STA !DST_BUF4
 8209  000069B                   	STA !DST_BUF4+1
 8210  000069B                   	STA !DST_BUF4+2
 8211  000069B                   	STA !DST_BUF4+3
 8212  000069B                   
 8213  000069B                   	LDY #0
 8214  000069B                   
 8215  000069B                   	DEC NOW_SECTION_INDEX
 8216  000069B                   
 8217  000069B                   SET_MASK_BIT_LOOP32:
 8218  000069B                   	LDA NOW_SECTION_INDEX
 8219  000069B                   	CMP #32
 8220  000069B                   	BCC SET_MASK_BIT
 8221  000069B                   
 8222  000069B                   SET_MASK_BIT_32:
 8223  000069B                   	SEC
 8224  000069B                   	LDA NOW_SECTION_INDEX
 8225  000069B                   	SBC #32
 8226  000069B                   	STA NOW_SECTION_INDEX
 8227  000069B                   	ADD16_16 SECTION_OFFSET, 4
 8228  000069B                   	JMP SET_MASK_BIT_LOOP32
 8229  000069B                   
 8230  000069B                   SET_MASK_BIT:
 8231  000069B                   SET_MASK_BIT_LOOP:
 8232  000069B                   
 8233  000069B                   	SEC
 8234  000069B                   	LDA NOW_SECTION_INDEX
 8235  000069B                   	CMP #8
 8236  000069B                   	BCC SET_MASK_BIT_LESS_8
 8237  000069B                   	SBC #8
 8238  000069B                   	STA NOW_SECTION_INDEX
 8239  000069B                   	INY
 8240  000069B                   	JMP SET_MASK_BIT_LOOP
 8241  000069B                   
 8242  000069B                   SET_MASK_BIT_LESS_8:
 8243  000069B                   
 8244  000069B                   	LDX NOW_SECTION_INDEX
 8245  000069B                   	LDA SECTION_INDEX_BIT_MASK_TABLE, X
 8246  000069B                   	EOR #FFH
 8247  000069B                   	STA DST_BUF4, Y
 8248  000069B                   
 8249  000069B                   END_xSET_MASK_BIT_FROM_INDEX:
 8250  000069B                   
 8251  000069B                   	PLY
 8252  000069B                   	PLX
 8253  000069B                   	RTS
 8254  000069B                   ;-------------------------------------------------------------------------





 8255  000069B                   GET_INDEX_FROM_MASK_BIT_NP:
 8256  000069B                   	STZ NOW_SECTION_INDEX
 8257  000069B                   	STZ SECTION_OFFSET
 8258  000069B                   	STZ SECTION_OFFSET+1
 8259  000069B                   
 8260  000069B                   GET_INDEX_FROM_MASK_BIT_NP_LOOP:
 8261  000069B                   	MOV16_16 SRC_BUF4, DST_BUF4
 8262  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, SPARE_SECTION_ADDR_NP
 8263  000069B                   	ADD24_16_DP DST_PAGE_START_ADDR3, SECTION_OFFSET
 8264  000069B                   	MOV16_16 SRC_LEN2, 4
 8265  000069B                   	JSR FLASH_READ_PAGE_PROC
 8266  000069B                   
 8267  000069B                   	LDA DST_BUF4+3
 8268  000069B                   	BPL 3
 8269  000069B                   	JMP GET_INDEX_FROM_MASK_BIT_NP_NEXT
 8270  000069B                   	CLC
 8271  000069B                   	LDA NOW_SECTION_INDEX
 8272  000069B                   	ADC #32
 8273  000069B                   	STA NOW_SECTION_INDEX	
 8274  000069B                   	ADD16_16 SECTION_OFFSET, 4
 8275  000069B                   
 8276  000069B                   	JMP GET_INDEX_FROM_MASK_BIT_NP_LOOP
 8277  000069B                   
 8278  000069B                   GET_INDEX_FROM_MASK_BIT_NP_NEXT:
 8279  000069B                   	JSR _xGET_INDEX_FROM_MASK_BIT
 8280  000069B                   	RTS
 8281  000069B                   ;-------------------------------------------------------------------------
 8282  000069B                   GET_INDEX_FROM_MASK_BIT_SP:
 8283  000069B                   	STZ NOW_SECTION_INDEX
 8284  000069B                   	STZ SECTION_OFFSET
 8285  000069B                   	STZ SECTION_OFFSET+1
 8286  000069B                   
 8287  000069B                   
 8288  000069B                   GET_INDEX_FROM_MASK_BIT_SP_LOOP:
 8289  000069B                   	MOV16_16 SRC_BUF4, DST_BUF4
 8290  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, SPARE_SECTION_ADDR_SP
 8291  000069B                   	ADD24_16_DP DST_PAGE_START_ADDR3, SECTION_OFFSET
 8292  000069B                   	MOV16_16 SRC_LEN2, 4
 8293  000069B                   	JSR FLASH_READ_PAGE_PROC
 8294  000069B                   
 8295  000069B                   	LDA DST_BUF4+3
 8296  000069B                   	BPL 3
 8297  000069B                   	JMP GET_INDEX_FROM_MASK_BIT_SP_NEXT
 8298  000069B                   	CLC
 8299  000069B                   	LDA NOW_SECTION_INDEX
 8300  000069B                   	ADC #32
 8301  000069B                   	STA NOW_SECTION_INDEX
 8302  000069B                   	ADD16_16 SECTION_OFFSET, 4
 8303  000069B                   
 8304  000069B                   	JMP GET_INDEX_FROM_MASK_BIT_SP_LOOP
 8305  000069B                   
 8306  000069B                   GET_INDEX_FROM_MASK_BIT_SP_NEXT:
 8307  000069B                   	JSR _xGET_INDEX_FROM_MASK_BIT
 8308  000069B                   	RTS
 8309  000069B                   ;-------------------------------------------------------------------------
 8310  000069B                   _xGET_INDEX_FROM_MASK_BIT:
 8311  000069B                   	PHX





 8312  000069B                   	PHY
 8313  000069B                   
 8314  000069B                   	LDX #0
 8315  000069B                   	LDY	#0
 8316  000069B                   
 8317  000069B                   GET_NEXT_INDEX_LOOP:
 8318  000069B                   	LDA DST_BUF4, Y
 8319  000069B                   	BIT SECTION_INDEX_BIT_MASK_TABLE, X
 8320  000069B                   	BNE GET_NEXT_INDEX_CONT
 8321  000069B                   
 8322  000069B                   	INX
 8323  000069B                   	INC NOW_SECTION_INDEX
 8324  000069B                   	CPX #8
 8325  000069B                   	BEQ 3
 8326  000069B                   	JMP GET_NEXT_INDEX_LOOP
 8327  000069B                   	INY
 8328  000069B                   	LDX #0
 8329  000069B                   
 8330  000069B                   	JMP GET_NEXT_INDEX_LOOP
 8331  000069B                   
 8332  000069B                   GET_NEXT_INDEX_CONT:
 8333  000069B                   
 8334  000069B                   END_xGET_INDEX_FROM_MASK_BIT:
 8335  000069B                   
 8336  000069B                   	PLY
 8337  000069B                   	PLX
 8338  000069B                   
 8339  000069B                   	LDA NOW_SECTION_INDEX
 8340  000069B                   	RTS
 8341  000069B                   ;-------------------------------------------------------------------------
 8342  000069B                   GET_SECTION_ADDR:
 8343  000069B                   	STZ SECTION_OFFSET
 8344  000069B                   	STZ SECTION_OFFSET+1
 8345  000069B                   
 8346  000069B                   GET_SECTION_ADDR_LOOP:
 8347  000069B                   
 8348  000069B                   	CPX #0
 8349  000069B                   	BEQ END_GET_SECTION_ADDR
 8350  000069B                   	DEX
 8351  000069B                   	ADD16_16 SECTION_OFFSET, SECTION_SIZE
 8352  000069B                   	JMP GET_SECTION_ADDR_LOOP
 8353  000069B                   
 8354  000069B                   END_GET_SECTION_ADDR:
 8355  000069B                   	RTS
 8356  000069B                   ;============================================================================
 8357  000069B                   FLASH_SECTION_UPDATE_PROC:
 8358  000069B                   	LDA #WDTC_CLR
 8359  000069B                   	STA !WDTC
 8360  000069B                   
 8361  000069B                   	STZ UPDATE_SECTION_STATUS
 8362  000069B                   
 8363  000069B                   CHK_SECTION_INDEX_BITS:
 8364  000069B                   ; Get NP mask section index from Spare Section
 8365  000069B                   	JSR GET_INDEX_FROM_MASK_BIT_NP
 8366  000069B                   	STA NP_INDEX
 8367  000069B                   
 8368  000069B                   ; Get SP mask section index from Spare Section





 8369  000069B                   	JSR GET_INDEX_FROM_MASK_BIT_SP
 8370  000069B                   	STA SP_INDEX
 8371  000069B                   
 8372  000069B                   ; + Compare NP & SP section index
 8373  000069B                   	LDA NP_INDEX
 8374  000069B                   	CMP SP_INDEX
 8375  000069B                   	BNE 3
 8376  000069B                   	JMP END_CHK_SECTION_INDEX_BITS
 8377  000069B                   
 8378  000069B                   REC_DATA_BROKEN:
 8379  000069B                   ; The index matching error. SP section data may have damaged data.
 8380  000069B                   ; Restore from NP to SP
 8381  000069B                   
 8382  000069B                   	LDA NP_INDEX
 8383  000069B                   	BNE 3
 8384  000069B                   	JMP RESTORE_SECTION_DATA_FROM_SP
 8385  000069B                   
 8386  000069B                   RESTORE_SECTION_DATA_FROM_NP:
 8387  000069B                   	FLASH_ERASE_PAGE 1400H					; Erase SP
 8388  000069B                   	CMP #0
 8389  000069B                   	BEQ 3
 8390  000069B                   	JMP END_FLASH_SECTION_UPDATE_PROC
 8391  000069B                   
 8392  000069B                   
 8393  000069B                   	FLASH_COPY_PAGE 1400H, 1200H
 8394  000069B                   	CMP #0
 8395  000069B                   	BEQ 3
 8396  000069B                   	JMP END_FLASH_SECTION_UPDATE_PROC			; Copy NP to SP
 8397  000069B                   
 8398  000069B                   	LDA	NP_INDEX
 8399  000069B                   	STA	SP_INDEX
 8400  000069B                   	JMP END_RESTORE_SECTION_DATA
 8401  000069B                   
 8402  000069B                   RESTORE_SECTION_DATA_FROM_SP:
 8403  000069B                   	FLASH_ERASE_PAGE 1200H					; Erase NP
 8404  000069B                   	CMP #0
 8405  000069B                   	BEQ 3
 8406  000069B                   	JMP END_FLASH_SECTION_UPDATE_PROC
 8407  000069B                   
 8408  000069B                   
 8409  000069B                   	FLASH_COPY_PAGE 1200H, 1400H
 8410  000069B                   	CMP #0
 8411  000069B                   	BEQ 3
 8412  000069B                   	JMP END_FLASH_SECTION_UPDATE_PROC			; Copy SP to NP
 8413  000069B                   
 8414  000069B                   	LDA SP_INDEX
 8415  000069B                   	STA NP_INDEX
 8416  000069B                   ;JMP END_RESTORE_SECTION_DATA
 8417  000069B                   
 8418  000069B                   END_RESTORE_SECTION_DATA:
 8419  000069B                   	LDA #PP_RESTORE_DO
 8420  000069B                   	TSB UPDATE_SECTION_STATUS
 8421  000069B                   
 8422  000069B                   END_CHK_SECTION_INDEX_BITS:
 8423  000069B                   CHK_SECTION_INDEX_BOUNDARY1:
 8424  000069B                   ; Check if it is written to the boundary
 8425  000069B                   	INC NP_INDEX





 8426  000069B                   
 8427  000069B                   	LDA NP_INDEX
 8428  000069B                   	CMP #(SECTION_BOUNDARY+1)
 8429  000069B                   	BEQ 3
 8430  000069B                   	JMP FLASH_SECTION_UPDATE_PROC_CONT1
 8431  000069B                   
 8432  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, 1200H
 8433  000069B                   	JSR FLASH_ERASE_PAGE_PROC
 8434  000069B                   	CMP #0
 8435  000069B                   	BEQ 3
 8436  000069B                   	JMP END_FLASH_SECTION_UPDATE_PROC
 8437  000069B                   
 8438  000069B                   
 8439  000069B                   	LDA #1
 8440  000069B                   	STA NP_INDEX
 8441  000069B                   
 8442  000069B                   FLASH_SECTION_UPDATE_PROC_CONT1:
 8443  000069B                   
 8444  000069B                   	LDA NP_INDEX
 8445  000069B                   	DEC A
 8446  000069B                   	TAX
 8447  000069B                   	JSR GET_SECTION_ADDR
 8448  000069B                   
 8449  000069B                   ;*********************************************************
 8450  000069B                   ; ABNORMAL POWER-OFF EXCEPTION CHECK
 8451  000069B                   ;*********************************************************
 8452  000069B                   	LDA UPDATE_SECTION_STATUS
 8453  000069B                   	BIT #PP_RESTORE_DO
 8454  000069B                   	BNE FLASH_SECTION_UPDATE_PROC_NEXT1
 8455  000069B                   
 8456  000069B                   ; Check if the NP area is not blank and the index has not been set,
 8457  000069B                   ; it is possible that the last operation was incomplete.
 8458  000069B                   ; Restore from SP to NP
 8459  000069B                   	MOV16_16 SRC_LEN2, SECTION_SIZE
 8460  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, 1200H
 8461  000069B                   	ADD24_16_DP DST_PAGE_START_ADDR3, SECTION_OFFSET
 8462  000069B                   
 8463  000069B                   	JSR FLASH_BLANK_CHECK_PAGE_PROC			; BlankCheck NP
 8464  000069B                   	CMP #0
 8465  000069B                   	BEQ FLASH_SECTION_UPDATE_PROC_NEXT1
 8466  000069B                   
 8467  000069B                   	FLASH_ERASE_PAGE 1200H					; Erase NP
 8468  000069B                   	CMP #0
 8469  000069B                   	BEQ 3
 8470  000069B                   	JMP END_FLASH_SECTION_UPDATE_PROC
 8471  000069B                   
 8472  000069B                   	FLASH_COPY_PAGE 1200H, 1400H			; Restore NP from SP
 8473  000069B                   	CMP #0
 8474  000069B                   	BEQ 3
 8475  000069B                   	JMP END_FLASH_SECTION_UPDATE_PROC
 8476  000069B                   
 8477  000069B                   FLASH_SECTION_UPDATE_PROC_NEXT1:
 8478  000069B                   	LDA NP_INDEX
 8479  000069B                   	DEC A
 8480  000069B                   	TAX
 8481  000069B                   	JSR GET_SECTION_ADDR
 8482  000069B                   





 8483  000069B                   	MOV16_16_DP SRC_BUF4, PBUF_TEMP
 8484  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, 1200H
 8485  000069B                   	ADD24_16_DP DST_PAGE_START_ADDR3, SECTION_OFFSET
 8486  000069B                   	MOV16_16 SRC_LEN2, SECTION_SIZE
 8487  000069B                   
 8488  000069B                   	JSR FLASH_WRITE_PAGE_PROC
 8489  000069B                   	CMP #0
 8490  000069B                   	BEQ 3
 8491  000069B                   	JMP END_FLASH_SECTION_UPDATE_PROC
 8492  000069B                   
 8493  000069B                   	MOV16_16_DP SRC_BUF4, PBUF_TEMP
 8494  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, 1200H
 8495  000069B                   	ADD24_16_DP DST_PAGE_START_ADDR3, SECTION_OFFSET
 8496  000069B                   	MOV16_16 SRC_LEN2, SECTION_SIZE
 8497  000069B                   
 8498  000069B                   	JSR FLASH_VERIFY_PAGE_PROC
 8499  000069B                   	CMP #0
 8500  000069B                   	BEQ 3
 8501  000069B                   	JMP END_FLASH_SECTION_UPDATE_PROC
 8502  000069B                   
 8503  000069B                   	LDA NP_INDEX
 8504  000069B                   	STA NOW_SECTION_INDEX
 8505  000069B                   	JSR SET_MASK_BIT_FROM_INDEX_NP
 8506  000069B                   
 8507  000069B                   CHK_SECTION_INDEX_BOUNDARY2:
 8508  000069B                   	INC SP_INDEX
 8509  000069B                   
 8510  000069B                   	LDA SP_INDEX
 8511  000069B                   	CMP #(SECTION_BOUNDARY+1)
 8512  000069B                   	BEQ 3
 8513  000069B                   	JMP FLASH_SECTION_UPDATE_PROC_CONT2
 8514  000069B                   
 8515  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, 1400H
 8516  000069B                   	JSR FLASH_ERASE_PAGE_PROC
 8517  000069B                   	CMP #0
 8518  000069B                   	BEQ 3
 8519  000069B                   	JMP END_FLASH_SECTION_UPDATE_PROC
 8520  000069B                   
 8521  000069B                   	LDA #1
 8522  000069B                   	STA SP_INDEX
 8523  000069B                   
 8524  000069B                   FLASH_SECTION_UPDATE_PROC_CONT2:
 8525  000069B                   
 8526  000069B                   	LDA SP_INDEX
 8527  000069B                   	DEC A
 8528  000069B                   	TAX
 8529  000069B                   	JSR GET_SECTION_ADDR
 8530  000069B                   
 8531  000069B                   	MOV16_16_DP SRC_BUF4, PBUF_TEMP
 8532  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, 1400H
 8533  000069B                   	ADD24_16_DP DST_PAGE_START_ADDR3, SECTION_OFFSET
 8534  000069B                   	MOV16_16 SRC_LEN2, SECTION_SIZE
 8535  000069B                   
 8536  000069B                   	JSR FLASH_WRITE_PAGE_PROC
 8537  000069B                   	CMP #0
 8538  000069B                   	BEQ 3
 8539  000069B                   	JMP END_FLASH_SECTION_UPDATE_PROC





 8540  000069B                   
 8541  000069B                   	MOV16_16_DP SRC_BUF4, PBUF_TEMP
 8542  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, 1400H
 8543  000069B                   	ADD24_16_DP DST_PAGE_START_ADDR3, SECTION_OFFSET
 8544  000069B                   	MOV16_16 SRC_LEN2, SECTION_SIZE
 8545  000069B                   
 8546  000069B                   	JSR FLASH_VERIFY_PAGE_PROC
 8547  000069B                   	CMP #0
 8548  000069B                   	BEQ 3
 8549  000069B                   	JMP END_FLASH_SECTION_UPDATE_PROC
 8550  000069B                   
 8551  000069B                   	LDA SP_INDEX
 8552  000069B                   	STA NOW_SECTION_INDEX
 8553  000069B                   	JSR SET_MASK_BIT_FROM_INDEX_SP
 8554  000069B                   
 8555  000069B                   END_FLASH_SECTION_UPDATE_PROC:
 8556  000069B                   	RTS
 8557  000069B                   ;============================================================================
 8558  000069B                   FLASH_SECTION_READ_PROC:
 8559  000069B                   	LDA #WDTC_CLR
 8560  000069B                   	STA !WDTC
 8561  000069B                   
 8562  000069B                   	JSR GET_INDEX_FROM_MASK_BIT_NP
 8563  000069B                   	STA NP_INDEX
 8564  000069B                   
 8565  000069B                   	JSR GET_INDEX_FROM_MASK_BIT_SP
 8566  000069B                   	STA SP_INDEX
 8567  000069B                   
 8568  000069B                   	LDA NP_INDEX
 8569  000069B                   	CMP SP_INDEX
 8570  000069B                   	BEQ FLASH_SECTION_READ_NP
 8571  000069B                   
 8572  000069B                   	LDA NP_INDEX
 8573  000069B                   	BNE 3
 8574  000069B                   	JMP FLASH_SECTION_READ_SP
 8575  000069B                   
 8576  000069B                   FLASH_SECTION_READ_NP:
 8577  000069B                   
 8578  000069B                   	LDA NP_INDEX
 8579  000069B                   	BEQ 1
 8580  000069B                   	DEC A
 8581  000069B                   	TAX
 8582  000069B                   	JSR GET_SECTION_ADDR
 8583  000069B                   
 8584  000069B                   	MOV16_16_DP SRC_BUF4, PBUF_TEMP
 8585  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, 1200H
 8586  000069B                   	ADD24_16_DP DST_PAGE_START_ADDR3, SECTION_OFFSET
 8587  000069B                   	MOV16_16 SRC_LEN2, SECTION_SIZE
 8588  000069B                   
 8589  000069B                   	JSR FLASH_READ_PAGE_PROC
 8590  000069B                   
 8591  000069B                   	JMP END_FLASH_SECTION_READ_PROC
 8592  000069B                   
 8593  000069B                   FLASH_SECTION_READ_SP:
 8594  000069B                   	LDA SP_INDEX
 8595  000069B                   	BEQ 1
 8596  000069B                   	DEC A





 8597  000069B                   	TAX
 8598  000069B                   	JSR GET_SECTION_ADDR
 8599  000069B                   
 8600  000069B                   	MOV16_16_DP SRC_BUF4, PBUF_TEMP
 8601  000069B                   	MOV24_24 DST_PAGE_START_ADDR3, 1400H
 8602  000069B                   	ADD24_16_DP DST_PAGE_START_ADDR3, SECTION_OFFSET
 8603  000069B                   	MOV16_16 SRC_LEN2, SECTION_SIZE
 8604  000069B                   
 8605  000069B                   	JSR FLASH_READ_PAGE_PROC
 8606  000069B                   	JMP END_FLASH_SECTION_READ_PROC
 8607  000069B                   
 8608  000069B                   FLASH_SECTION_READ_PROC_ERROR:
 8609  000069B                   END_FLASH_SECTION_READ_PROC:
 8610  000069B                   	RTS
 8611  000069B                   .ENDIF
 8612  000069B                   .ENDIF
 8613  000069B                   ;============================================================================
 8614  000069B                   
 8615  000069B                   	.ENDS
 8616  0000000                   
 8617  0000000                   ;**The following is audio external**
 8618  0000000                   ;**The following is sentence label**
 8619  0000000                   ;**The following is INIT_DECODE_SPEECH label**
 8620  0000000                   	EXT_PROGRAM: SECTION
 8621  0000000                   	ENDS
 8622  0000000                   
		Line(s) Assembled : 8622
		Error(s): 0
		Warn(s) : 0
		Begin Assembling Time : Thu Aug 18 09:50:04 2022
		End   Assembling Time : Thu Aug 18 09:50:04 2022

